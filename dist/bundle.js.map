{"version":3,"file":"bundle.js","mappings":";yrEAAmC,IAAAA,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAAG,EAAA,IAAAH,QAAAI,EAAA,IAAAJ,QAAAK,EAAA,IAAAL,QAAAM,EAAA,IAAAN,QAAAO,EAAA,IAAAP,QAAAQ,EAAA,IAAAR,QAEtBS,EAAK,WAyIb,SAXD,SAAAA,EAAYC,gGAAKC,CAAA,KAAAF,GA7HjBG,EAAA,KAAAb,OAAI,GACJa,EAAA,KAAAX,OAAQ,GACRW,EAAA,KAAAV,OAAW,GACXU,EAAA,KAAAT,OAAW,GAEXS,EAAA,KAAAR,OAAK,GACLQ,EAAA,KAAAP,OAAY,GACZO,EAAA,KAAAN,OAAoB,GACpBM,EAAA,KAAAL,OAAkB,GAClBK,EAAA,KAAAJ,OAAe,GAqHXK,EAAKd,EAALe,KAAYJ,GACZG,EAAKZ,EAALa,KAAgB,GAChBD,EAAKX,EAALY,KAAmB,GACnBD,EAAKV,EAALW,KAAmB,GAEnBD,EAAKT,EAALU,KAAaA,KAAKC,cAClBF,EAAKR,EAALS,KAAoBA,KAAKC,YAAW,IACpCF,EAAKP,EAALQ,KAA4BA,KAAKC,YAAW,IAC5CF,EAAKN,EAALO,KAA0BA,KAAKC,YAAW,IAC1CF,EAAKL,EAALM,KAAuBA,KAAKC,YAAW,GAC3C,IAAC,EAAAC,IAAA,SAAAC,MA7HD,WACI,OAAOC,EAAKnB,EAALe,KACX,GAAC,CAAAE,IAAA,aAAAC,MAED,WACI,OAAOC,EAAKjB,EAALa,KACX,GAAC,CAAAE,IAAA,aAAAC,MAED,SAAWA,GACPJ,EAAKZ,EAALa,KAAgBG,EACpB,GAAC,CAAAD,IAAA,gBAAAC,MAED,WACI,OAAOC,EAAKhB,EAALY,KACX,GAAC,CAAAE,IAAA,gBAAAC,MAED,SAAcA,GACVJ,EAAKX,EAALY,KAAmBG,EACvB,GAAC,CAAAD,IAAA,gBAAAC,MAED,WACI,OAAOC,EAAKf,EAALW,KACX,GAAC,CAAAE,IAAA,gBAAAC,MAED,SAAcA,GACVJ,EAAKV,EAALW,KAAmBG,EACvB,GAEA,CAAAD,IAAA,UAAAC,MACA,WACI,OAAOC,EAAKd,EAALU,KACX,GAAC,CAAAE,IAAA,UAAAC,MAED,SAAQA,GACJJ,EAAKT,EAALU,KAAaG,EACjB,GAAC,CAAAD,IAAA,eAAAC,MAED,SAAaE,EAAGC,GACZ,OAAOF,EAAKd,EAALU,MAAWK,GAAGC,EACzB,GAAC,CAAAJ,IAAA,eAAAC,MAED,SAAaE,EAAGC,EAAGH,GACfC,EAAKd,EAALU,MAAWK,GAAGC,GAAKH,CACvB,GAEA,CAAAD,IAAA,iBAAAC,MACA,WACI,OAAOC,EAAKb,EAALS,KACX,GAAC,CAAAE,IAAA,iBAAAC,MAED,SAAeA,GACXJ,EAAKR,EAALS,KAAoBG,EACxB,GAAC,CAAAD,IAAA,sBAAAC,MAED,SAAoBE,EAAGC,GACnB,OAAOF,EAAKb,EAALS,MAAkBK,GAAGC,EAChC,GAAC,CAAAJ,IAAA,sBAAAC,MAED,SAAoBE,EAAGC,EAAGH,GACtBC,EAAKb,EAALS,MAAkBK,GAAGC,GAAKH,CAC9B,GAEA,CAAAD,IAAA,yBAAAC,MACA,WACI,OAAOC,EAAKZ,EAALQ,KACX,GAAC,CAAAE,IAAA,yBAAAC,MAED,SAAuBA,GACnBJ,EAAKP,EAALQ,KAA4BG,EAChC,GAAC,CAAAD,IAAA,8BAAAC,MAED,SAA4BE,EAAGC,GAC3B,OAAOF,EAAKZ,EAALQ,MAA0BK,GAAGC,EACxC,GAAC,CAAAJ,IAAA,8BAAAC,MAED,SAA4BE,EAAGC,EAAGH,GAC9BC,EAAKZ,EAALQ,MAA0BK,GAAGC,GAAKH,CACtC,GAEA,CAAAD,IAAA,uBAAAC,MACA,WACI,OAAOC,EAAKX,EAALO,KACX,GAAC,CAAAE,IAAA,uBAAAC,MAED,SAAqBA,GACjBJ,EAAKN,EAALO,KAA0BG,EAC9B,GAAC,CAAAD,IAAA,4BAAAC,MAED,SAA0BE,EAAGC,GACzB,OAAOF,EAAKX,EAALO,MAAwBK,GAAGC,EACtC,GAAC,CAAAJ,IAAA,4BAAAC,MAED,SAA0BE,EAAGC,EAAGH,GAC5BC,EAAKX,EAALO,MAAwBK,GAAGC,GAAKH,CACpC,GAEA,CAAAD,IAAA,oBAAAC,MACA,WACI,OAAOC,EAAKV,EAALM,KACX,GAAC,CAAAE,IAAA,oBAAAC,MAED,SAAkBA,GACdJ,EAAKL,EAALM,KAAuBG,EAC3B,GAAC,CAAAD,IAAA,yBAAAC,MAED,SAAuBE,EAAGC,GACtB,OAAOF,EAAKV,EAALM,MAAqBK,GAAGC,EACnC,GAAC,CAAAJ,IAAA,yBAAAC,MAED,SAAuBE,EAAGC,EAAGH,GACzBC,EAAKV,EAALM,MAAqBK,GAAGC,GAAKH,CACjC,GAAC,CAAAD,IAAA,kBAAAC,MAgBD,SAAgBI,GACZP,KAAKQ,QAAQD,GACbP,KAAKS,eAAeC,MAAMC,KAAK,CAACC,OAAQL,EAAKK,SAAS,kBAAMF,MAAMH,EAAK,GAAGK,QAAQC,KAAKC,EAAAA,OAAOC,KAAK,KACnGf,KAAKgB,uBAAuBN,MAAMC,KAAK,CAACC,OAAQL,EAAKK,SAAS,kBAAMF,MAAMH,EAAK,GAAGK,QAAQC,KAAKC,EAAAA,OAAOC,KAAK,KAC3Gf,KAAKiB,qBAAqBP,MAAMC,KAAK,CAACC,OAAQL,EAAKK,SAAS,kBAAMF,MAAMH,EAAK,GAAGK,QAAQC,KAAKC,EAAAA,OAAOC,KAAK,KACzGf,KAAKkB,kBAAkBR,MAAMC,KAAK,CAACC,OAAQL,EAAKK,SAAS,kBAAMF,MAAMH,EAAK,GAAGK,QAAQC,KAAKC,EAAAA,OAAOC,KAAK,IAC1G,GAAC,CAAAb,IAAA,cAAAC,MAED,WAAc,IAAAgB,EAAA,KACK,CACX,CAAC,GAAI,GACL,CAAC,GAAI,GACL,CAAC,GAAI,GACL,CAAC,GAAI,GACL,CAAC,GAAI,IAWFC,SAAQ,SAAAC,GACXF,EAAKG,aAAaD,EAAM,GAAIA,EAAM,GAAI,EAC1C,IAVe,CACX,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,KAODD,SAAQ,SAAAC,GACXF,EAAKG,aAAaD,EAAM,GAAIA,EAAM,GAAI,EAC1C,GACJ,GAAC,CAAAnB,IAAA,qBAAAC,MAED,WAMI,IAJA,IAAMoB,EAASC,KAAKD,SAGhBE,EAAwB,EACnBC,EAAI,EAAGA,EAAI1B,KAAK2B,SAASC,aAAahB,OAAQc,IAEnD,GAAIH,IADJE,GAAyBzB,KAAK2B,SAASC,aAAaF,IAEhD,OAAOA,EAKf,OAAOZ,EAAAA,OAAOC,IAClB,GAEA,CAAAb,IAAA,mBAAAC,MACA,WAAmB,IAAA0B,EAAA,KACf,OAAOnB,MAAMC,KAAK,CAACC,OAAQZ,KAAK2B,SAASG,iBAAiB,kBACtDpB,MAAMC,KAAK,CAACC,OAAQiB,EAAKF,SAASI,oBAAoB,kBAClDF,EAAKG,oBAAoB,GAC5B,GAET,GAEA,CAAA9B,IAAA,aAAAC,MACA,WAAa,IAAA8B,EAAA,KACT,OAAOvB,MAAMC,KAAK,CAACC,OAAQZ,KAAK2B,SAASG,iBAAiB,kBACtDpB,MAAMC,KAAK,CAACC,OAAQqB,EAAKN,SAASI,oBAAoB,kBAAMjB,EAAAA,OAAOC,IAAI,GAAC,GAEhF,GAAC,CAAAb,IAAA,eAAAC,MAED,SAAa+B,EAASC,EAAQC,GAA+B,IAAAC,EAAA,KAAvBC,EAAKC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGzB,EAAAA,OAAO2B,OACjDP,EAAQd,SAAQ,SAAAsB,GAAc,IAAAC,EAAAC,EAAAF,EAAA,GAAZG,EAAEF,EAAA,GAAEG,EAAEH,EAAA,GACdtC,EAAI8B,EAASU,EACbvC,EAAI8B,EAASU,EACfzC,GAAK,GAAKA,EAAIgC,EAAKV,SAASG,gBAAkBxB,GAAK,GAAKA,EAAI+B,EAAKV,SAASI,mBAC1EM,EAAKf,aAAajB,EAAGC,EAAGgC,EAEhC,GACJ,GAEA,CAAApC,IAAA,oBAAAC,MACA,WAEIH,KAAK+C,cAAc/C,KAAKgD,gBAAkB,GAC1ChD,KAAKiD,qBACL,IAAMC,EAAWlD,KAAKmD,iBAEtBnD,KAAKQ,QAAQ0C,GACblD,KAAKoD,mBACT,GAEA,CAAAlD,IAAA,oBAAAC,MACA,WACI,IAAK,IAAIkD,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAC9C,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IAC7CZ,EAAAA,OAAOwC,eAAeC,IAAIvD,KAAKwD,aAAaH,EAAG3B,IAC/C1B,KAAKyD,oBAAoBJ,EAAG3B,EAAG1B,KAAK0D,oBAAoBL,EAAG3B,GAAK,GAEhE1B,KAAKyD,oBAAoBJ,EAAG3B,EAAG,EAI/C,GAAC,CAAAxB,IAAA,qBAAAC,MAED,SAAmBkD,EAAG3B,GAClB,OAAO2B,GAAK,GAAKA,EAAIrD,KAAK2B,SAASG,gBAAkBJ,GAAK,GAAKA,EAAI1B,KAAK2B,SAASI,iBACrF,GAAC,CAAA7B,IAAA,qBAAAC,MAED,SAAmBkD,EAAG3B,GAClB,IAAMiC,EAAM3D,KAAK2B,SAASG,eACpB8B,EAAM5D,KAAK2B,SAASI,kBA2B1B,OAzBW,IAAPsB,IACAA,EAAIM,EAAM,GAEVN,IAAMM,IACNN,EAAI,IAEG,IAAP3B,IACAA,EAAIkC,EAAM,GAEVlC,IAAMkC,IACNlC,EAAI,IAEG,IAAP2B,IACAA,EAAIM,EAAM,GAEVN,IAAMM,EAAM,IACZN,EAAI,IAEG,IAAP3B,IACAA,EAAIkC,EAAM,GAEVlC,IAAMkC,EAAM,IACZlC,EAAI,GAGD,CAAC2B,EAAG3B,EACf,GAGA,CAAAxB,IAAA,qBAAAC,MACA,SAAmBE,EAAGC,GAClB,IAAK,IAAI+C,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAC9C,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IAAK,CACtD,IAG6BmC,EAAAjB,EAAzB5C,KAAK8D,eAAeT,EAAG3B,GAAE,GAFzBqC,EAAeF,EAAA,GACfG,EAAaH,EAAA,GAEjB7D,KAAKiE,4BAA4BZ,EAAG3B,EAAGqC,GACvC/D,KAAKkE,0BAA0Bb,EAAG3B,EAAGsC,EACzC,CAER,GAAC,CAAA9D,IAAA,kBAAAC,MAED,WAEI,IADA,IAAIgE,EAAU,EACLd,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAC9C,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IAC7CZ,EAAAA,OAAOwC,eAAeC,IAAIvD,KAAKwD,aAAaH,EAAG3B,KAC/CyC,IAIZnE,KAAKoE,WAAWD,GAChBnE,KAAKqE,cAAcrE,KAAKsE,gBAAkBH,EAC9C,GAAC,CAAAjE,IAAA,iBAAAC,MAED,SAAekD,EAAG3B,GAAG,IAAA6C,EAAA,KACbC,EAAmB,EACnBC,EAAiB,EAgBrB,OAdA3D,EAAAA,OAAO4D,QAAgB,OAAEtD,SAAQ,SAAAuD,GAC7B,IAAKtE,EAASgD,EAAIsB,EAAUtE,EAApBC,EAAuBoB,EAAIiD,EAAUrE,EAE7C,IAAKiE,EAAK5C,SAASiD,YAAa,CAAF,IAAwCC,EAAAjC,EAA7B2B,EAAKO,mBAAmBzE,EAAGC,GAAE,GAArCD,EAACwE,EAAA,GAAEvE,EAACuE,EAAA,GAErC,GAAIN,EAAKQ,mBAAmB1E,EAAGC,GAAI,CAC/B,IAAM0E,EAAeT,EAAKf,aAAanD,EAAGC,GACtCQ,EAAAA,OAAOwC,eAAeC,IAAIyB,KAC1BR,GAAoB,EACpBC,GAAkBO,EAE1B,CACJ,IAEOR,EAAmB,CAACA,EAAkBhD,KAAKyD,MAAMR,EAAiBD,IAAqB,CAAC,EAAG,EACtG,GAAC,CAAAtE,IAAA,iBAAAC,MAED,WAEI,IADA,IAAM+C,EAAW,GACRG,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAAK,CAEnD,IADA,IAAM6B,EAAU,GACPxD,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IAAK,CACtD,IAAMsC,EAAgBhE,KAAKmF,0BAA0B9B,EAAG3B,GAClDqC,EAAkB/D,KAAKoF,4BAA4B/B,EAAG3B,GACtDsD,EAAehF,KAAKwD,aAAaH,EAAG3B,GACpC2D,EAAgBrF,KAAKsF,uBAAuBN,EAAchB,EAAeD,GAC/EmB,EAAQK,KAAKF,EACjB,CACAnC,EAASqC,KAAKL,EAClB,CACA,OAAOhC,CACX,GAAC,CAAAhD,IAAA,yBAAAC,MAED,SAAuB6E,EAAchB,EAAeD,GAChD,OAAIjD,EAAAA,OAAOwC,eAAeC,IAAIyB,GACtBhF,KAAK2B,SAAS6D,WAAWjC,IAAIQ,GACtBiB,EAEAlE,EAAAA,OAAOC,KAEXiE,IAAiBlE,EAAAA,OAAOC,KAC3Bf,KAAK2B,SAAS8D,cAAclC,IAAIQ,GACzBC,EAEAlD,EAAAA,OAAOC,KAEXiE,IAAiBlE,EAAAA,OAAO4E,KACxB5E,EAAAA,OAAO4E,UADX,CAGX,GAEA,CAAAxF,IAAA,SAAAC,MACA,WACI,IAAI+C,EAAWlD,KAAK2F,UAAUC,MAAM,GACpC1C,EAASqC,KAAK7E,MAAMV,KAAK2B,SAASI,mBAAmBlB,KAAKC,EAAAA,OAAOC,OACjEf,KAAKQ,QAAQ0C,EACjB,GAEA,CAAAhD,IAAA,WAAAC,MACA,WACI,IAAI+C,EAAW,GACfA,EAASqC,KAAK7E,MAAMV,KAAK2B,SAASI,mBAAmBlB,KAAKC,EAAAA,OAAOC,OACjEmC,EAAWA,EAAS2C,OAAO7F,KAAK2F,UAAUC,MAAM,EAAG5F,KAAK2B,SAASG,eAAiB,IAClF9B,KAAKQ,QAAQ0C,EACjB,GAEA,CAAAhD,IAAA,WAAAC,MACA,WACI,IAAK,IAAIkD,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAAK,CACnD,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAoB,EAAGL,IACrD1B,KAAKsB,aAAa+B,EAAG3B,EAAG1B,KAAKwD,aAAaH,EAAG3B,EAAI,IAErD1B,KAAKsB,aAAa+B,EAAGrD,KAAK2B,SAASI,kBAAoB,EAAGjB,EAAAA,OAAOC,KACrE,CACJ,GAEA,CAAAb,IAAA,YAAAC,MACA,WACI,IAAK,IAAIkD,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAAK,CACnD,IAAK,IAAI3B,EAAI1B,KAAK2B,SAASI,kBAAoB,EAAGL,EAAI,EAAGA,IACrD1B,KAAKsB,aAAa+B,EAAG3B,EAAG1B,KAAKwD,aAAaH,EAAG3B,EAAI,IAErD1B,KAAKsB,aAAa+B,EAAG,EAAGvC,EAAAA,OAAOC,KACnC,CACJ,gGAAC,CAxYa,+qCCFiB,IAAA9B,EAAA,IAAAC,QAAA4G,EAAA,IAAA5G,QAAA6G,EAAA,IAAA7G,QAGtB8G,EAAW,WAsBnB,SALD,SAAAA,EAAYpG,gGAAKC,CAAA,KAAAmG,GAhBjBlG,EAAA,KAAAb,OAAI,GACJa,EAAA,KAAAgG,OAAO,GACPhG,EAAA,KAAAiG,OAAI,GAeAhG,EAAKd,EAALe,KAAYJ,GACZG,EAAK+F,EAAL9F,KAAeiG,SAASC,cAAc,WACtCnG,EAAKgG,EAAL/F,KAAYI,EAAK0F,EAAL9F,MAAamG,WAAW,OACpCnG,KAAKoG,aACT,KAAC,EAAAlG,IAAA,SAAAC,MAjBD,WACI,OAAOC,EAAKnB,EAALe,KACX,GAAC,CAAAE,IAAA,YAAAC,MAED,WACI,OAAOC,EAAK0F,EAAL9F,KACX,GAAC,CAAAE,IAAA,SAAAC,MAED,WACI,OAAOC,EAAK2F,EAAL/F,KACX,GAAC,CAAAE,IAAA,sBAAAC,MASD,WACIH,KAAKqG,YAAYC,MAAQtG,KAAK2B,SAASI,kBAAoB/B,KAAK2B,SAAS4E,cACzEvG,KAAKqG,YAAYG,OAASxG,KAAK2B,SAASG,eAAiB9B,KAAK2B,SAAS4E,aAC3E,GAAC,CAAArG,IAAA,cAAAC,MAED,WACIH,KAAKyG,sBACLzG,KAAK0G,SAASC,UAAY7F,EAAAA,OAAO8F,cACjC5G,KAAK0G,SAASG,SAAS,EAAG,EAAG7G,KAAKqG,YAAYC,MAAOtG,KAAKqG,YAAYG,OAC1E,GAAC,CAAAtG,IAAA,cAAAC,MAED,WACIH,KAAK0G,SAASI,UAAU,EAAG,EAAG9G,KAAKqG,YAAYC,MAAOtG,KAAKqG,YAAYG,OAC3E,GAAC,CAAAtG,IAAA,WAAAC,MAED,WACIH,KAAK+G,cACL,IAAK,IAAI1D,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAC9C,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IAAK,CACtD,IAAMsF,EAAmBhH,KAAK2B,SAASsF,WAAWzD,aAAaH,EAAG3B,GAC5DwF,EAAWlH,KAAK2B,SAAS4E,cAC3BzF,EAAAA,OAAOqG,gBAAgB5D,IAAIyD,KAC3BhH,KAAK0G,SAASC,UAAY3G,KAAKoH,kBAAkBJ,EAAkB3D,EAAG3B,GACtE1B,KAAK0G,SAASG,SAASnF,EAAIwF,EAAU7D,EAAI6D,EAAUA,EAAUA,GAErE,CAGAlH,KAAK2B,SAAS0F,YACdrH,KAAKsH,WAEb,GAAC,CAAApH,IAAA,YAAAC,MAGD,WACIH,KAAK0G,SAASa,YAAc,qBAC5BvH,KAAK0G,SAASc,UAAY,EAI1B,IAHA,IAAMN,EAAWlH,KAAK2B,SAAS4E,cAGtBlD,EAAI,EAAGA,EAAIrD,KAAK2B,SAASG,eAAgBuB,IAC9CrD,KAAK0G,SAASe,YACdzH,KAAK0G,SAASgB,OAAO,EAAGrE,EAAI6D,GAC5BlH,KAAK0G,SAASiB,OAAO3H,KAAKqG,YAAYC,MAAOjD,EAAI6D,GACjDlH,KAAK0G,SAASkB,SAIlB,IAAK,IAAIlG,EAAI,EAAGA,EAAI1B,KAAK2B,SAASI,kBAAmBL,IACjD1B,KAAK0G,SAASe,YACdzH,KAAK0G,SAASgB,OAAOhG,EAAIwF,EAAU,GACnClH,KAAK0G,SAASiB,OAAOjG,EAAIwF,EAAUlH,KAAKqG,YAAYG,QACpDxG,KAAK0G,SAASkB,QAEtB,GAAC,CAAA1H,IAAA,oBAAAC,MAGD,SAAkBA,EAAOkD,EAAG3B,GACxB,IAAImG,EAAQ,IAMZ,OALI7H,KAAK2B,SAASmG,eACdD,GAAS,GAAM7H,KAAK2B,SAASsF,WAAWvD,oBAAoBL,EAAG3B,IACnD,KAAImG,EAAQ,IAGpB1H,GACJ,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,YAAP0F,OAAmBgC,EAAK,WAC5B,KAAK,EACD,MAAO,UAAPhC,OAAiBgC,EAAK,WAC1B,KAAK,EACD,MAAO,WAAPhC,OAAkBgC,EAAK,WAC3B,KAAK,EACD,MAAO,YAAPhC,OAAmBgC,EAAK,WAC5B,KAAK,EACD,MAAO,YAAPhC,OAAmBgC,EAAK,YAC5B,QACI,MAAO,GAEnB,+FAAC,CAxGmB,++BCDjB,IAAM/G,EAAMiH,GAAA,SAAAjH,iGAAAjB,CAAA,KAAAiB,EAAA,IACfkH,EADSlH,EAAM,gBAEQ,GAACkH,EAFflH,EAAM,gBAGQ,KAEvBkH,EALSlH,EAAM,UAME,GAACkH,EANTlH,EAAM,UAOE,KAEjBkH,EATSlH,EAAM,OAUD,GAACkH,EAVNlH,EAAM,SAWC,GAACkH,EAXRlH,EAAM,SAYC,GAACkH,EAZRlH,EAAM,SAaC,GAACkH,EAbRlH,EAAM,SAcC,GAACkH,EAdRlH,EAAM,OAeD,GAEdkH,EAjBSlH,EAAM,UAkBE,CACb,OAAU,CACN,CAACmH,KAAM,IAAK3H,EAAG,EAAGD,GAAI,GACtB,CAAC4H,KAAM,IAAK3H,EAAG,EAAGD,EAAG,GACrB,CAAC4H,KAAM,IAAK3H,EAAG,EAAGD,EAAG,GACrB,CAAC4H,KAAM,IAAK3H,GAAI,EAAGD,EAAG,IAE1B,MAAS,CACL,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,GACxB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,IAE5B,OAAU,CACN,CAAC4H,KAAM,IAAK3H,EAAG,EAAGD,GAAI,GACtB,CAAC4H,KAAM,KAAM3H,EAAG,EAAGD,GAAI,GACvB,CAAC4H,KAAM,IAAK3H,EAAG,EAAGD,EAAG,GACrB,CAAC4H,KAAM,KAAM3H,EAAG,EAAGD,EAAG,GACtB,CAAC4H,KAAM,IAAK3H,EAAG,EAAGD,EAAG,GACrB,CAAC4H,KAAM,KAAM3H,GAAI,EAAGD,EAAG,GACvB,CAAC4H,KAAM,IAAK3H,GAAI,EAAGD,EAAG,GACtB,CAAC4H,KAAM,KAAM3H,GAAI,EAAGD,GAAI,IAE5B,MAAS,CACL,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,KAAM3H,EAAG,EAAGD,GAAI,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,KAAM3H,EAAG,EAAGD,EAAG,GACtB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,KAAM3H,GAAI,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,GACxB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,GACxB,CAAC4H,KAAM,KAAM3H,GAAI,EAAGD,GAAI,IAE5B,IAAO,CACH,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,GAAI,GACxB,CAAC4H,KAAM,OAAQ3H,EAAG,EAAGD,GAAI,GACzB,CAAC4H,KAAM,OAAQ3H,EAAG,EAAGD,GAAI,GACzB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,OAAQ3H,EAAG,EAAGD,EAAG,GACxB,CAAC4H,KAAM,OAAQ3H,EAAG,EAAGD,EAAG,GACxB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,MAAO3H,EAAG,EAAGD,EAAG,GACvB,CAAC4H,KAAM,OAAQ3H,GAAI,EAAGD,EAAG,GACzB,CAAC4H,KAAM,OAAQ3H,GAAI,EAAGD,EAAG,GACzB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,GACxB,CAAC4H,KAAM,MAAO3H,GAAI,EAAGD,EAAG,GACxB,CAAC4H,KAAM,OAAQ3H,GAAI,EAAGD,GAAI,GAC1B,CAAC4H,KAAM,OAAQ3H,GAAI,EAAGD,GAAI,MAEjC2H,EA7EQlH,EAAM,iBA+ES,IAAIoH,IAAI,CAAC,EAAG,EAAG,EAAG,KAAGF,EA/EpClH,EAAM,kBAiFU,IAAIoH,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,KAE9CF,EAnFSlH,EAAM,gBAoFQ,2pECpFI,IAAA7B,EAAA,IAAAC,QAElBiJ,EAAY,WAYrB,SALA,SAAAA,EAAYvI,0GAAKC,CAAA,KAAAsI,GANjBrI,EAAA,KAAAb,OAAI,KAOAe,OAAYJ,KAAPX,iBACLe,KAAKoI,YACT,IAEA,EAAAlI,IAAA,SAAAC,MATA,WACI,SAAOH,QAAKf,sBAChB,GAAC,CAAAiB,IAAA,oBAAAC,MAaD,WAAqC,IAAnBkI,EAAS9F,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACjB+F,GAAWC,EAAAA,EAAAA,GAAE,cACbC,GAAYD,EAAAA,EAAAA,GAAE,cAEdE,EAAuC,SAA3BH,EAASI,MAAMC,QAE7BN,IAAcI,IAElBH,EAASI,MAAMC,QAAUF,EAAY,QAAU,OAC/CD,EAAUE,MAAMC,QAAUF,EAAY,OAAS,QAC/CG,EAAAA,KAAKC,qBAAqBC,MAAQL,EAAY,WAAa,QAG3DzI,KAAK2B,SAASoH,kBAClB,GAEA,CAAA7I,IAAA,gBAAAC,MAMA,SAAc6I,GACV,IAAMC,EAAQvI,MAAMC,KAAKiI,EAAAA,KAAKM,wBAAwBC,QAAO,SAACC,EAAKC,GAAK,OAAKD,EAAME,WAAWD,EAAMlJ,MAAM,GAAE,GAExGoJ,GAAa,EAAIN,GAAOO,QAAQ,GAMpC,GALID,EAAY,IAAGA,EAAY,GAE/BX,EAAAA,KAAKa,kBAAkBC,YAAcH,EACrCX,EAAAA,KAAKe,mBAAmBxJ,MAAQoJ,EAE5BN,EAAQ,EAAG,CACX,IAAMW,GAAkBX,EAAQ,IAAML,EAAAA,KAAKM,uBAAuBtI,OAAS,GAC3EgI,EAAAA,KAAKM,uBAAuB9H,SAAQ,SAAAiI,GAC5BA,IAAUL,IACVK,EAAMlJ,MAAQqB,KAAKqI,IAAIP,WAAWD,EAAMlJ,OAASyJ,EAAgB,GAEzE,GACJ,CACJ,GAEA,CAAA1J,IAAA,eAAAC,MAMA,SAAaI,GACT,IACsBuJ,EADhBC,EAAYxJ,EAAK,GAAGK,OAAOoJ,koBAAAC,CACf1J,GAAI,IAAtB,IAAAyJ,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAwB,KAAbzG,EAAGmG,EAAA3J,MACV,GAAIwD,EAAI/C,SAAWmJ,IAAc,cAAcM,KAAK1G,GAAM,OAAO,CACrE,CAAC,OAAA2G,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACD,OAAO,CACX,GAEA,CAAAtK,IAAA,oBAAAC,MAQA,SAAkBsK,EAAKC,EAAiBC,GAAQ,IACxCC,EADwCzJ,EAAA,KAItC0J,EAAY,SAACC,GACfF,EAAkBzJ,EAAK4J,0BAA0BN,EAAKK,EAAM,IAAKF,EACrE,EAGAF,EAAgBM,iBAAiB,aAAa,kBAAMH,GAAU,EAAK,IAGnEF,EAAOK,iBAAiB,aAAa,kBAAMH,GAAU,EAAK,IAG1DF,EAAOK,iBAAiB,YAAY,SAACC,GAC5BN,EAAOO,SAASD,EAAME,gBACvBN,GAAU,EAElB,GACJ,GAEA,CAAA3K,IAAA,mBAAAC,MAKA,WACIyI,EAAAA,KAAKwC,oBAAoBC,UAAUC,OAAO,UAC1CtL,KAAK2B,SAAS4J,eAAevL,KAAK2B,SAAS6J,iBAC3CxL,KAAK2B,SAAS8J,qBAClB,GAEA,CAAAvL,IAAA,4BAAAC,MASA,SAA0BuL,EAASZ,EAAMa,EAAOC,GAI5C,OAFAC,aAAaD,GAETd,GACAY,EAAQhD,MAAMC,QAAU,OACjB,MAEAmD,YAAW,WACdJ,EAAQhD,MAAMC,QAAU,MAC5B,GAAGgD,EAEX,GAEA,CAAAzL,IAAA,aAAAC,MACA,WAEIH,KAAK+L,2BACL/L,KAAKgM,uBACLhM,KAAKiM,sBACLjM,KAAKkM,0BACLlM,KAAKmM,qBACLnM,KAAKoM,qBACLpM,KAAKqM,qBACLrM,KAAKsM,sBACLtM,KAAKuM,yBACLvM,KAAKwM,sBACLxM,KAAKyM,qBACLzM,KAAK0M,sBACL1M,KAAK2M,qBACL3M,KAAK4M,wBACL5M,KAAK6M,wBACL7M,KAAK8M,yBACL9M,KAAK+M,uBACL/M,KAAKgN,8BACLhN,KAAKiN,iCACLjN,KAAKkN,sBACLlN,KAAKmN,oBACT,GAMA,CAAAjN,IAAA,2BAAAC,MAOA,WAA2B,IAAA0B,EAAA,KACvB+G,EAAAA,KAAKwE,0BAA0BpC,iBAAiB,SAAS,WACrDnJ,EAAKwL,mBAAkB,EAC3B,IAEArN,KAAKsN,4BACLtN,KAAKuN,uBACT,GAEA,CAAArN,IAAA,4BAAAC,MAeA,WAA4B,IAAA8B,EAAA,KACxB,SAASuL,EAAcC,EAAcC,EAAUC,GAC3C,IAAIxN,EAAQyN,SAASH,EAAatN,MAAO,IAEzC,OAAI0N,MAAM1N,GAAeuN,EAAmBvN,EAAQwN,EAAiBA,EAAmBxN,EAAQuN,EAAiBA,EAAsBvN,CAC3I,CAEAyI,EAAAA,KAAKkF,qBAAqB9C,iBAAiB,SAAS,WAEhD,IAAI+C,EAAYP,EAAc5E,EAAAA,KAAKoF,mBAAoBlN,EAAAA,OAAOmN,QAASnN,EAAAA,OAAOoN,SAC1EC,EAAeX,EAAc5E,EAAAA,KAAKwF,sBAAuBtN,EAAAA,OAAOmN,QAASnN,EAAAA,OAAOoN,SAChFG,EAAgBb,EAAc5E,EAAAA,KAAK0F,uBAAwBxN,EAAAA,OAAOyN,cAAezN,EAAAA,OAAO0N,eAG5FvM,EAAKoL,mBAAkB,GACvBpL,EAAKN,SAAS8M,YACdxM,EAAKN,SAAS+M,WAAWX,EAAWI,EAAcE,GAClD,IAAI9N,EAAO0B,EAAKN,SAASsF,WAAW0H,mBACpC1M,EAAKN,SAASsF,WAAW2H,gBAAgBrO,GACzC0B,EAAKN,SAASkN,iBAAiBpI,sBAC/BxE,EAAKN,SAASkN,iBAAiBC,UAEnC,GACJ,GAEA,CAAA5O,IAAA,wBAAAC,MAiBA,WAAwB,IAAAkC,EAAA,KAQpBuG,EAAAA,KAAKM,uBAAuB9H,SAAQ,SAACiI,EAAO0F,GACxCnG,EAAAA,KAAKoG,kBAAkBD,GAAOrF,YAAc,IAAH7D,OAAOwD,EAAMlJ,MAAK,IAC/D,IAEAyI,EAAAA,KAAKM,uBAAuB9H,SAAQ,SAAAiI,GAChCA,EAAM2B,iBAAiB,SAAS,WAC5B3I,EAAK4M,cAAc5F,GAZvBT,EAAAA,KAAKM,uBAAuB9H,SAAQ,SAACiI,EAAO0F,GACxCnG,EAAAA,KAAKoG,kBAAkBD,GAAOrF,YAAc,IAAH7D,OAAOwD,EAAMlJ,MAAK,IAC/D,GAYA,GACJ,IAEAyI,EAAAA,KAAKsG,kBAAkBlE,iBAAiB,SAAS,WAC7C,IAAMmE,EAAU,GAChBA,EAAQ5J,KAAKqD,EAAAA,KAAKe,mBAAmBxJ,OACrCyI,EAAAA,KAAKM,uBAAuB9H,SAAQ,SAAAgO,GAChCD,EAAQ5J,KAAK6J,EAAOjP,MACxB,IACAkC,EAAKV,SAAS0N,WAAWF,EAAQG,IAAIC,SACrC3G,EAAAA,KAAK4G,wBAAwBC,SAAU,CAC3C,GACJ,GAEA,CAAAvP,IAAA,uBAAAC,MAIA,WAAuB,IAAAoE,EAAA,KACnBqE,EAAAA,KAAK8G,oBAAoB1E,iBAAiB,SAAS,WAG/CzG,EAAK5C,SAASgO,gBACdpL,EAAK8I,mBAAkB,EAC3B,IAEArN,KAAK4P,qBACT,GAEA,CAAA1P,IAAA,sBAAAC,MAaA,WAAsB,IAAA0P,EAAA,KAClBjH,EAAAA,KAAKkH,gBAAgB9E,iBAAiB,SAAS,WAE3C,IADA,IAAI+E,EAAWnH,EAAAA,KAAKoH,cAAc7P,MAAM8P,cAAcC,QAC9CH,GACJA,EAAWI,OAAO,8CAA8CF,cAAcC,OAElF,IAAME,EAAWP,EAAKlO,SAASsF,WAAWtB,UAGtC0K,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GAC7DC,EAAQJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,CAAC,EAElE,GAAIC,EAAMX,IACN,IAAKY,QAAQ,8EACT,YAECN,EAAU9K,KAAKwK,GAExBW,EAAMX,GAAYK,EAClBI,aAAaI,QAAQ,YAAaN,KAAKO,UAAUR,IACjDG,aAAaI,QAAQ,gBAAiBN,KAAKO,UAAUH,IACrD9H,EAAAA,KAAKoH,cAAc7P,MAAQ,EAC/B,GACJ,GAMA,CAAAD,IAAA,sBAAAC,MAeA,WAAsB,IAAA2Q,EAAA,KAClBlI,EAAAA,KAAKmI,oBAAoB/F,iBAAiB,SAAS,WAG/C8F,EAAKnP,SAASgO,gBACdmB,EAAKzD,mBAAkB,GAGvBzE,EAAAA,KAAKoI,iBAAiBC,UAAY,IAGlBX,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IAGvDrP,SAAQ,SAAA2O,GACd,IAAMmB,EAASjL,SAASkL,cAAc,UACtCD,EAAO/Q,MAAQ4P,EACfmB,EAAOxH,YAAcqG,EACrBnH,EAAAA,KAAKoI,iBAAiBI,YAAYF,EACtC,GACJ,IAEAtI,EAAAA,KAAKyI,gBAAgBrG,iBAAiB,SAAS,WAC3C,IAAMsG,EAAe1I,EAAAA,KAAKoI,iBAAiB7Q,MAIrCoR,GADMjB,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,CAAC,GAC1Ca,GAGxBR,EAAKzD,mBAAkB,GACvByD,EAAKnP,SAAS8M,YACdqC,EAAKnP,SAAS+M,WAAW6C,EAAU3Q,OAAQ2Q,EAAU,GAAG3Q,OAAQkQ,EAAKnP,SAAS4E,eAC9EuK,EAAKnP,SAASsF,WAAW2H,gBAAgB2C,GACzCT,EAAKnP,SAASkN,iBAAiBpI,sBAC/BqK,EAAKnP,SAASkN,iBAAiBC,UACnC,GACJ,GAEA,CAAA5O,IAAA,0BAAAC,MAIA,WACIH,KAAKwR,sBACT,GAEA,CAAAtR,IAAA,uBAAAC,MAeA,WAAuB,IACfsR,EACAlR,EAFemR,EAAA,KAInB9I,EAAAA,KAAK+I,oBAAoB3G,iBAAiB,SAAS,WAC/CzK,EAAOqI,EAAAA,KAAK+I,oBAAoBxR,MAAM+P,OAAO0B,MAAM,OACnDH,EAAkBC,EAAKG,aAAatR,KAEhCqI,EAAAA,KAAK+I,oBAAoBtG,UAAUyG,IAAI,SACvClJ,EAAAA,KAAK+I,oBAAoBtG,UAAU0G,OAAO,WAC1CnJ,EAAAA,KAAKoJ,gBAAgB3G,UAAUyG,IAAI,YAEnClJ,EAAAA,KAAK+I,oBAAoBtG,UAAUyG,IAAI,WACvClJ,EAAAA,KAAK+I,oBAAoBtG,UAAU0G,OAAO,SAC1CnJ,EAAAA,KAAKoJ,gBAAgB3G,UAAU0G,OAAO,WAG1CnJ,EAAAA,KAAKqJ,qBAAqBC,UAAYT,CAC1C,IAEA7I,EAAAA,KAAKqJ,qBAAqBjH,iBAAiB,SAAS,WAC5CyG,IACAlR,EAAOA,EAAK+O,KAAI,SAAA3L,GAAG,OAAIjD,MAAMC,KAAKgD,EAAK4L,OAAO,IAG9CmC,EAAKrE,mBAAkB,GACvBqE,EAAK/P,SAAS8M,YACdiD,EAAK/P,SAAS+M,WAAWnO,EAAKK,OAAQL,EAAK,GAAGK,OAAQ8Q,EAAK/P,SAAS4E,eACpEmL,EAAK/P,SAASsF,WAAW2H,gBAAgBrO,GACzCmR,EAAK/P,SAASkN,iBAAiBpI,sBAC/BiL,EAAK/P,SAASkN,iBAAiBC,WAEvC,GACJ,GAGA,CAAA5O,IAAA,qBAAAC,MAQA,WAAqB,IAAAgS,EAAA,KACjBvJ,EAAAA,KAAKwJ,oBAAoBpH,iBAAiB,SAAS,WAC/C,IAAMqH,EAAYF,EAAKxQ,SAClBsF,WACAtB,UACA2J,KAAI,SAAA3L,GAAG,OAAIA,EAAI2O,KAAK,GAAG,IACvBA,KAAK,MAGJC,EAAWtM,SAASkL,cAAc,YACxCoB,EAAS7J,MAAM8J,SAAW,QAC1BD,EAAS7J,MAAM+J,QAAU,IACzBF,EAAS7J,MAAMgK,KAAO,UACtBH,EAAS7J,MAAMiK,IAAM,UACrBJ,EAASpS,MAAQkS,EAGjBpM,SAAS2M,KAAKxB,YAAYmB,GAG1BA,EAASM,SACTN,EAASO,kBAAkB,EAAGP,EAASpS,MAAMS,QAE7CmS,UAAUC,UAAUC,UAAUZ,GACzBa,MAAK,WACFC,MAAM,8CACV,IAAE,SACO,WACLlN,SAAS2M,KAAKQ,YAAYb,EAC9B,GACR,GACJ,GAMA,CAAArS,IAAA,qBAAAC,MAOA,WAAqB,IAAAkT,EAAA,KACjBzK,EAAAA,KAAK0K,oBAAoBtI,iBAAiB,SAAS,WAC/CqI,EAAK1R,SAAS4R,yBAClB,GACJ,GAEA,CAAArT,IAAA,qBAAAC,MAWA,WAAqB,IAAAqT,EAAA,KACjBxT,KAAKyT,kBAAkB7K,EAAAA,KAAK8K,QAAS9K,EAAAA,KAAK+K,oBAAqB/K,EAAAA,KAAKgL,YAGpEhL,EAAAA,KAAKiL,YAAYzS,SAAQ,SAAA0S,GACrBA,EAAW9I,iBAAiB,SAAS,WAEjCpC,EAAAA,KAAKiL,YAAYzS,SAAQ,SAAA2S,GAAM,OAAIA,EAAO1I,UAAU0G,OAAO,aAAc,aAAa,IACtF+B,EAAWzI,UAAUyG,IAAI,aAAc,cAGvC0B,EAAK7R,SAASqS,QAAQF,EAAWG,QAAQC,MAGzCtL,EAAAA,KAAK8K,QAAQhL,MAAMC,QAAU,OAG7B6K,EAAKnG,mBAAkB,EAC3B,GACJ,GACJ,GAMA,CAAAnN,IAAA,sBAAAC,MAOA,WAAsB,IAAAgU,EAAA,KAClBvL,EAAAA,KAAKC,qBAAqBmC,iBAAiB,SAAS,WAChDmJ,EAAK9G,mBAAkB,EAC3B,GACJ,GAEA,CAAAnN,IAAA,yBAAAC,MAWA,WAAyB,IAAAiU,EAAA,KACrBpU,KAAKyT,kBAAkB7K,EAAAA,KAAKyL,YAAazL,EAAAA,KAAK0L,wBAAyB1L,EAAAA,KAAK2L,gBAG5E3L,EAAAA,KAAK4L,gBAAgBpT,SAAQ,SAAAqT,GACzBA,EAAezJ,iBAAiB,SAAS,WAErCpC,EAAAA,KAAK4L,gBAAgBpT,SAAQ,SAAA2S,GAAM,OAAIA,EAAO1I,UAAU0G,OAAO,aAAc,aAAa,IAC1F0C,EAAepJ,UAAUyG,IAAI,aAAc,cAG3CsC,EAAKzS,SAAS+S,YAAYD,EAAeR,QAAQU,UAGjD/L,EAAAA,KAAKyL,YAAY3L,MAAMC,QAAU,OAGjCyL,EAAK/G,mBAAkB,EAC3B,GACJ,GACJ,GAKA,CAAAnN,IAAA,sBAAAC,MAYA,WAAsB,IAAAyU,EAAA,KAClB5U,KAAKyT,kBAAkB7K,EAAAA,KAAKiM,SAAUjM,EAAAA,KAAKkM,qBAAsBlM,EAAAA,KAAKmM,aAGtEnM,EAAAA,KAAKoM,aAAa5T,SAAQ,SAAA6T,GACtBA,EAAYjK,iBAAiB,SAAS,WAElCpC,EAAAA,KAAKkM,qBAAqBzJ,UAAU0G,OAAO,OAAQ,QAAS,SAAU,OACtE,IAAImD,EAAYD,EAAYhB,QAAQpM,MACpC+M,EAAKjT,SAASwT,YAAYvH,SAASqH,EAAYhB,QAAQ9T,QAEvDyI,EAAAA,KAAKkM,qBAAqBzJ,UAAUyG,IAAIoD,GAGxCtM,EAAAA,KAAKiM,SAASnM,MAAMC,QAAU,OAE9B,IAAMyM,EAAuC,SAA9BH,EAAYhB,QAAQpM,MACnCe,EAAAA,KAAKyM,UAAU3M,MAAMC,QAAUyM,EAAS,OAAS,QACjDxM,EAAAA,KAAK0M,SAAS5M,MAAMC,QAAUyM,EAAS,QAAU,MACrD,GACJ,GACJ,GAEA,CAAAlV,IAAA,qBAAAC,MAQA,WAAqB,IAAAoV,EAAA,KACjB3M,EAAAA,KAAKwC,oBAAoBJ,iBAAiB,SAAS,WAC/CuK,EAAK5T,SAASgO,gBACd4F,EAAKlI,mBAAkB,GACvBkI,EAAKC,kBACT,GACJ,GAMA,CAAAtV,IAAA,sBAAAC,MAOA,WAAsB,IAAAsV,EAAA,KAClB7M,EAAAA,KAAK8M,qBAAqB1K,iBAAiB,SAAS,WAChDyK,EAAK9T,SAAS8M,YACdgH,EAAK9T,SAASgO,gBACd8F,EAAKpI,mBAAkB,EAC3B,GACJ,GAEA,CAAAnN,IAAA,qBAAAC,MASA,WAAqB,IAAAwV,EAAA,KACjB/M,EAAAA,KAAKgN,oBAAoB5K,iBAAiB,SAAS,WAC/CpC,EAAAA,KAAKgN,oBAAoBvK,UAAUC,OAAO,UAC1CqK,EAAKhU,SAASkU,UAAUF,EAAKhU,SAAS0F,YACjCsO,EAAKhU,SAAS0F,YAAYsO,EAAKhU,SAASkN,iBAAiB9H,cAC9D4O,EAAKhU,SAASkN,iBAAiBC,UAEnC,GACJ,GAEA,CAAA5O,IAAA,wBAAAC,MAQA,WAAwB,IAAA2V,EAAA,KACpBlN,EAAAA,KAAKmN,sBAAsB/K,iBAAiB,SAAS,WACjDpC,EAAAA,KAAKmN,sBAAsB1K,UAAUC,OAAO,UAE5CwK,EAAKnU,SAASqU,WAAWF,EAAKnU,SAASiD,cACvC2D,EAAAA,EAAAA,GAAE,UAAU8C,UAAUC,OAAO,gBACjC,GACJ,GAEA,CAAApL,IAAA,wBAAAC,MASA,WAAwB,IAAA8V,EAAA,KACpBrN,EAAAA,KAAKsN,uBAAuBlL,iBAAiB,SAAS,WAClDpC,EAAAA,KAAKsN,uBAAuB7K,UAAUC,OAAO,UAC7C2K,EAAKtU,SAASwU,YAAYF,EAAKtU,SAASmG,cACnCmO,EAAKtU,SAASmG,cACfmO,EAAKtU,SAASkN,iBAAiB9H,cAEnCkP,EAAKtU,SAASkN,iBAAiBC,UAEnC,GACJ,GAMA,CAAA5O,IAAA,yBAAAC,MAUA,WAAyB,IAAAiW,EAAA,KACrBpW,KAAKyT,kBAAkB7K,EAAAA,KAAKyN,QAASzN,EAAAA,KAAK0N,oBAAqB1N,EAAAA,KAAK2N,YAEpE3N,EAAAA,KAAK4N,YAAYpV,SAAQ,SAAAqV,GACrBA,EAAWzL,iBAAiB,SAAS,WACjCoL,EAAKM,aAAaD,EAAWxC,QAAQtP,UACzC,GACJ,GACJ,GAEA,CAAAzE,IAAA,eAAAC,MAQA,SAAawE,GACT,IAAMgS,EAAahS,EAAUiS,OAAO,GAAGC,cAAgBlS,EAAUiB,MAAM,GACvE5F,KAAK2B,SAASsF,WAAW,OAADpB,OAAQ8Q,MAChC3W,KAAK2B,SAASkN,iBAAiBC,UACnC,GAMA,CAAA5O,IAAA,uBAAAC,MAUA,WAAuB,IAAA2W,EAAA,KACnB9W,KAAKyT,kBAAkB7K,EAAAA,KAAKmO,QAASnO,EAAAA,KAAKoO,oBAAqBpO,EAAAA,KAAKqO,YAEpErO,EAAAA,KAAKsO,YAAY9V,SAAQ,SAAA+V,GACrBA,EAAWnM,iBAAiB,SAAS,WACjC8L,EAAKM,WAAWD,EAAWlD,QAAQ9T,MACvC,GACJ,GACJ,GAEA,CAAAD,IAAA,aAAAC,MAMA,SAAWkX,GACP,IAAMV,EAAaU,EAAKT,OAAO,GAAGC,cAAgBQ,EAAKzR,MAAM,GAC7D5F,KAAK2B,SAAS,kBAADkE,OAAmB8Q,KACpC,GAEA,CAAAzW,IAAA,8BAAAC,MAIA,WAA8B,IAAAmX,EAAA,KAC1B1O,EAAAA,KAAK2O,2BAA2BvM,iBAAiB,SAAS,WAEtDsM,EAAK3V,SAASgO,gBACd2H,EAAKjK,mBAAkB,EAC3B,IAEArN,KAAKwX,4BACT,GAEA,CAAAtX,IAAA,6BAAAC,MAQA,WAA6B,IAAAsX,EAAA,KACzB7O,EAAAA,KAAK8O,uBAAuB1M,iBAAiB,SAAS,WAClDyM,EAAK9V,SAASgW,SAAS,IAAIzP,IAAIxH,MAAMC,KAAKiI,EAAAA,KAAKgP,4BAC1CC,QAAO,SAAAC,GAAQ,OAAIA,EAASrI,OAAO,IACnCH,KAAI,SAAAwI,GAAQ,OAAIlK,SAASkK,EAAS3X,MAAM,MAC7CsX,EAAK9V,SAASoW,YAAY,IAAI7P,IAAIxH,MAAMC,KAAKiI,EAAAA,KAAKoP,+BAC7CH,QAAO,SAAAC,GAAQ,OAAIA,EAASrI,OAAO,IACnCH,KAAI,SAAAwI,GAAQ,OAAIlK,SAASkK,EAAS3X,MAAM,KACjD,GACJ,GAAC,CAAAD,IAAA,iCAAAC,MAED,WAAiC,IAAA8X,EAAA,KAC7BrP,EAAAA,KAAKsP,8BAA8BlN,iBAAiB,SAAS,WAEzDiN,EAAKtW,SAASgO,gBACdsI,EAAK5K,mBAAkB,EAC3B,IAEArN,KAAKmY,+BACT,GAEA,CAAAjY,IAAA,gCAAAC,MASA,WAAgC,IAAAiY,EAAA,KAC5BxP,EAAAA,KAAKyP,0BAA0BrN,iBAAiB,SAAS,WACrDoN,EAAKzW,SAAS2W,mBACd,IAE2DC,EAAA3V,EAF/BgG,EAAAA,KAAK4P,qBAAqBrY,MACjDyR,MAAM,KACNtC,KAAI,SAAAmJ,GAAO,OAAI,IAAIvQ,IAAIuQ,EAAQ7G,MAAM,IAAItC,IAAIC,QAAQ,IAAC,GAFpDmJ,EAAMH,EAAA,GAAEI,EAASJ,EAAA,GAGxBH,EAAKzW,SAASgW,SAASe,GACvBN,EAAKzW,SAASoW,YAAYY,GAC1BP,EAAKzW,SAAS2W,kBAClB,GACJ,GAMA,CAAApY,IAAA,qBAAAC,MAYA,WAAqB,IAAAyY,EAAA,KACjB3S,SAAS+E,iBAAiB,WAAW,SAACC,GAC9BA,EAAM4N,SAAW,CAAC,IAAK,KAAKC,SAAS7N,EAAM/K,OAC3C+K,EAAM8N,iBACNH,EAAKxB,WAAyB,MAAdnM,EAAM/K,IAAc,KAAO,QAG3C,CAAC,UAAW,YAAa,YAAa,cAAc4Y,SAAS7N,EAAM/K,OACnE+K,EAAM8N,iBACNH,EAAKlC,aAAazL,EAAM/K,IAAI0F,MAAM,IAE1C,GACJ,GAMA,CAAA1F,IAAA,sBAAAC,MAQA,WACIyI,EAAAA,KAAKoQ,gBAAgBhO,iBAAiB,SAAS,WACvCpC,EAAAA,KAAKqQ,WAAW5N,UAAUH,SAAS,gBACnCtC,EAAAA,KAAKqQ,WAAW5N,UAAU0G,OAAO,eACjCnJ,EAAAA,KAAKsQ,UAAU7N,UAAUyG,IAAI,eAC7BlJ,EAAAA,KAAKuQ,cAAcjE,UAAY,+BAE/BtM,EAAAA,KAAKqQ,WAAW5N,UAAUyG,IAAI,eAC9BlJ,EAAAA,KAAKsQ,UAAU7N,UAAU0G,OAAO,eAChCnJ,EAAAA,KAAKuQ,cAAcjE,UAAY,mBAEvC,GACJ,gGAAC,CAt4BoB,wgCCDlB,IAAMtM,EAAIb,GAAA,SAAAa,iGAAA/I,CAAA,KAAA+I,EAAA,IAEbZ,EAFSY,EAAI,6BAGsBL,EAAAA,EAAAA,GAAE,+BAErCP,EALSY,EAAI,2BAMoBL,EAAAA,EAAAA,GAAE,6BAA2BP,EANrDY,EAAI,sBAOeL,EAAAA,EAAAA,GAAE,wBAAsBP,EAP3CY,EAAI,yBAQkBL,EAAAA,EAAAA,GAAE,2BAAyBP,EARjDY,EAAI,0BASmBL,EAAAA,EAAAA,GAAE,4BAA0BP,EATnDY,EAAI,wBAUiBL,EAAAA,EAAAA,GAAE,0BAEhCP,EAZSY,EAAI,sBAaeL,EAAAA,EAAAA,GAAE,wBAAsBP,EAb3CY,EAAI,0BAcmBwQ,EAAAA,EAAAA,MAAK,gCAA8BpR,EAd1DY,EAAI,qBAecL,EAAAA,EAAAA,GAAE,uBAAqBP,EAfzCY,EAAI,qBAgBcL,EAAAA,EAAAA,GAAE,uBAAqBP,EAhBzCY,EAAI,oBAiBc,EACvBL,EAAAA,EAAAA,GAAE,uBACFA,EAAAA,EAAAA,GAAE,uBACFA,EAAAA,EAAAA,GAAE,uBACFA,EAAAA,EAAAA,GAAE,wBAGNP,EAxBSY,EAAI,uBAyBgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EAzB7CY,EAAI,iBA0BUL,EAAAA,EAAAA,GAAE,mBAAiBP,EA1BjCY,EAAI,mBA2BYL,EAAAA,EAAAA,GAAE,qBAE3BP,EA7BSY,EAAI,uBA8BgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EA9B7CY,EAAI,oBA+BaL,EAAAA,EAAAA,GAAE,sBAAoBP,EA/BvCY,EAAI,mBAgCYL,EAAAA,EAAAA,GAAE,qBAE3BP,EAlCSY,EAAI,uBAmCgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EAnC7CY,EAAI,wBAoCiBL,EAAAA,EAAAA,GAAE,0BAAwBP,EApC/CY,EAAI,mBAqCYL,EAAAA,EAAAA,GAAE,qBAE3BP,EAvCSY,EAAI,cAwCOL,EAAAA,EAAAA,GAAE,gBAAcP,EAxC3BY,EAAI,aAyCML,EAAAA,EAAAA,GAAE,eAAaP,EAzCzBY,EAAI,iBA0CUL,EAAAA,EAAAA,GAAE,mBAAiBP,EA1CjCY,EAAI,mBA2CYL,EAAAA,EAAAA,GAAE,qBAE3BP,EA7CSY,EAAI,uBA8CgBL,EAAAA,EAAAA,GAAE,yBAE/BP,EAhDSY,EAAI,uBAiDgBL,EAAAA,EAAAA,GAAE,yBAE/BP,EAnDSY,EAAI,uBAoDgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EApD7CY,EAAI,WAqDIL,EAAAA,EAAAA,GAAE,iBAAeP,EArDzBY,EAAI,eAsDQwQ,EAAAA,EAAAA,MAAK,wBAAsBpR,EAtDvCY,EAAI,cAuDOL,EAAAA,EAAAA,GAAE,gBAEtBP,EAzDSY,EAAI,wBA0DiBL,EAAAA,EAAAA,GAAE,0BAEhCP,EA5DSY,EAAI,2BA6DoBL,EAAAA,EAAAA,GAAE,6BAA2BP,EA7DrDY,EAAI,eA8DQL,EAAAA,EAAAA,GAAE,qBAAmBP,EA9DjCY,EAAI,mBA+DYwQ,EAAAA,EAAAA,MAAK,4BAA0BpR,EA/D/CY,EAAI,kBAgEWL,EAAAA,EAAAA,GAAE,oBAE1BP,EAlESY,EAAI,wBAmEiBL,EAAAA,EAAAA,GAAE,0BAEhCP,EArESY,EAAI,uBAsEgBL,EAAAA,EAAAA,GAAE,yBAE/BP,EAxESY,EAAI,yBAyEkBL,EAAAA,EAAAA,GAAE,2BAEjCP,EA3ESY,EAAI,uBA4EgBL,EAAAA,EAAAA,GAAE,yBAE/BP,EA9ESY,EAAI,0BA+EmBL,EAAAA,EAAAA,GAAE,4BAElCP,EAjFSY,EAAI,aAkFML,EAAAA,EAAAA,GAAE,eAAaP,EAlFzBY,EAAI,YAmFKL,EAAAA,EAAAA,GAAE,cAAYP,EAnFvBY,EAAI,wBAoFiBL,EAAAA,EAAAA,GAAE,0BAAwBP,EApF/CY,EAAI,YAqFKL,EAAAA,EAAAA,GAAE,kBAAgBP,EArF3BY,EAAI,gBAsFSwQ,EAAAA,EAAAA,MAAK,yBAAuBpR,EAtFzCY,EAAI,eAuFQL,EAAAA,EAAAA,GAAE,iBAEvBP,EAzFSY,EAAI,uBA0FgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EA1F7CY,EAAI,WA2FIL,EAAAA,EAAAA,GAAE,iBAAeP,EA3FzBY,EAAI,eA4FQwQ,EAAAA,EAAAA,MAAK,wBAAsBpR,EA5FvCY,EAAI,cA6FOL,EAAAA,EAAAA,GAAE,gBAEtBP,EA/FSY,EAAI,uBAgGgBL,EAAAA,EAAAA,GAAE,yBAAuBP,EAhG7CY,EAAI,WAiGIL,EAAAA,EAAAA,GAAE,iBAAeP,EAjGzBY,EAAI,eAkGQwQ,EAAAA,EAAAA,MAAK,wBAAsBpR,EAlGvCY,EAAI,cAmGOL,EAAAA,EAAAA,GAAE,gBAEtBP,EArGSY,EAAI,8BAsGuBL,EAAAA,EAAAA,GAAE,gCAEtCP,EAxGSY,EAAI,8BAyGuBwQ,EAAAA,EAAAA,MAAK,sCAAoCpR,EAzGpEY,EAAI,iCA0G0BwQ,EAAAA,EAAAA,MAAK,yCAAuCpR,EA1G1EY,EAAI,0BA2GmBL,EAAAA,EAAAA,GAAE,4BAElCP,EA7GSY,EAAI,iCA8G0BL,EAAAA,EAAAA,GAAE,mCAEzCP,EAhHSY,EAAI,wBAiHiBL,EAAAA,EAAAA,GAAE,0BAAwBP,EAjH/CY,EAAI,6BAkHsBL,EAAAA,EAAAA,GAAE,+BAA6BP,EAlHzDY,EAAI,8BAmHuBL,EAAAA,EAAAA,GAAE,gCAEtCP,EArHSY,EAAI,mBAsHYL,EAAAA,EAAAA,GAAE,cAAYP,EAtH9BY,EAAI,UAuHGL,EAAAA,EAAAA,GAAE,gBAElBP,EAzHSY,EAAI,cA0HOL,EAAAA,EAAAA,GAAE,gBAAcP,EA1H3BY,EAAI,eA2HQL,EAAAA,EAAAA,GAAE,iBAAeP,EA3H7BY,EAAI,cA4HOL,EAAAA,EAAAA,GAAE,qyCCzHS,IAAA8Q,EAAA,IAAAna,QAAAoa,EAAA,IAAApa,QAAAqa,EAAA,IAAAra,QAAAsa,EAAA,IAAAta,QAAAua,EAAA,IAAAva,QAAAwa,EAAA,IAAAxa,QAAAya,EAAA,IAAAza,QAAA0a,EAAA,IAAA1a,QAAA2a,EAAA,IAAA3a,QAAA4a,EAAA,IAAA5a,QAAA6a,EAAA,IAAA7a,QAAA8a,EAAA,IAAA9a,QAAA+a,EAAA,IAAA/a,QAAAgb,EAAA,IAAAhb,QAAAib,EAAA,IAAAjb,QAAA4K,EAAA,IAAA5K,QAAAkb,EAAA,IAAAlb,QAAAmb,EAAA,IAAAnb,QAAAob,EAAA,IAAApb,QAE7Bqb,EAAM,WAsMP,SAtBD,SAAAA,iGAAc1a,CAAA,KAAA0a,GA9Kdza,EAAA,KAAAuZ,OAAM,GACNvZ,EAAA,KAAAwZ,OAAY,GACZxZ,EAAA,KAAAyZ,OAAU,GACVzZ,EAAA,KAAA0Z,OAAa,GACb1Z,EAAA,KAAA2Z,OAAS,GACT3Z,EAAA,KAAA4Z,OAAS,GACT5Z,EAAA,KAAA6Z,OAAM,GACN7Z,EAAA,KAAA8Z,OAAS,GACT9Z,EAAA,KAAA+Z,OAAU,GACV/Z,EAAA,KAAAga,OAAQ,GACRha,EAAA,KAAAia,OAAO,GACPja,EAAA,KAAAka,OAAQ,GACRla,EAAA,KAAAma,OAAM,GACNna,EAAA,KAAAoa,OAAM,GACNpa,EAAA,KAAAqa,OAAS,GACTra,EAAA,KAAAgK,OAAK,GACLhK,EAAA,KAAAsa,OAAU,GACVta,EAAA,KAAAua,OAAW,GACXva,EAAA,KAAAwa,OAAU,GA6JNva,EAAKsZ,EAALrZ,UAAcwC,GACdzC,EAAKuZ,EAALtZ,UAAoBwC,GACpBzC,EAAKwZ,EAALvZ,KAAkB,IAClBD,EAAKyZ,EAALxZ,KAAqB,IACrBD,EAAK0Z,EAALzZ,KAAiB,IACjBD,EAAK2Z,EAAL1Z,KAAiB,GACjBD,EAAK4Z,EAAL3Z,KAAc,IAAIkI,IAAI,CAAC,EAAG,KAC1BnI,EAAK6Z,EAAL5Z,KAAiB,IAAIkI,IAAI,CAAC,KAC1BnI,EAAK8Z,EAAL7Z,MAAkB,GAClBD,EAAK+Z,EAAL9Z,KAAgB,CAAC,GAAI,GAAI,EAAG,EAAG,IAC/BD,EAAKga,EAAL/Z,MAAe,GACfD,EAAKia,EAALha,MAAgB,GAChBD,EAAKka,EAALja,MAAc,GACdD,EAAKma,EAALla,KAAc,CAAC,GACfD,EAAKoa,EAALna,KAAiB,GACjBD,EAAK+J,EAAL9J,KAAa,GACbD,EAAKqa,EAALpa,MAAkB,GAClBD,EAAKsa,EAALra,MAAmB,GACnBD,EAAKua,EAALta,MAAkB,GAElBA,KAAKoI,YACT,IAAC,EAAAlI,IAAA,WAAAC,MA/KD,WACI,OAAOC,EAAKiZ,EAALrZ,KACX,GAAC,CAAAE,IAAA,WAAAC,MAED,SAASA,GACLJ,EAAKsZ,EAALrZ,KAAcG,EAClB,GAAC,CAAAD,IAAA,iBAAAC,MAED,WACI,OAAOC,EAAKkZ,EAALtZ,KACX,GAAC,CAAAE,IAAA,iBAAAC,MAED,SAAeA,GACXJ,EAAKuZ,EAALtZ,KAAoBG,EACxB,GAAC,CAAAD,IAAA,eAAAC,MAED,WACI,OAAOC,EAAKmZ,EAALvZ,KACX,GAAC,CAAAE,IAAA,eAAAC,MAED,SAAaA,GACTJ,EAAKwZ,EAALvZ,KAAkBG,EACtB,GAAC,CAAAD,IAAA,kBAAAC,MAED,WACI,OAAOC,EAAKoZ,EAALxZ,KACX,GAAC,CAAAE,IAAA,kBAAAC,MAED,SAAgBA,GACZJ,EAAKyZ,EAALxZ,KAAqBG,EACzB,GAAC,CAAAD,IAAA,cAAAC,MAED,WACI,OAAOC,EAAKqZ,EAALzZ,KACX,GAAC,CAAAE,IAAA,cAAAC,MAED,SAAYA,GACRJ,EAAK0Z,EAALzZ,KAAiBG,EACrB,GAAC,CAAAD,IAAA,cAAAC,MAED,WACI,OAAOC,EAAKsZ,EAAL1Z,KACX,GAAC,CAAAE,IAAA,cAAAC,MAED,SAAYA,GACRJ,EAAK2Z,EAAL1Z,KAAiBG,EACrB,GAAC,CAAAD,IAAA,WAAAC,MAED,WACI,OAAOC,EAAKuZ,EAAL3Z,KACX,GAAC,CAAAE,IAAA,WAAAC,MAED,SAASA,GACLJ,EAAK4Z,EAAL3Z,KAAcG,EAClB,GAAC,CAAAD,IAAA,cAAAC,MAED,WACI,OAAOC,EAAKwZ,EAAL5Z,KACX,GAAC,CAAAE,IAAA,cAAAC,MAED,SAAYA,GACRJ,EAAK6Z,EAAL5Z,KAAiBG,EACrB,GAAC,CAAAD,IAAA,eAAAC,MAED,WACI,OAAOC,EAAKyZ,EAAL7Z,KACX,GAAC,CAAAE,IAAA,eAAAC,MAED,SAAaA,GACTJ,EAAK8Z,EAAL7Z,KAAkBG,EACtB,GAAC,CAAAD,IAAA,aAAAC,MAED,WACI,OAAOC,EAAK0Z,EAAL9Z,KACX,GAAC,CAAAE,IAAA,aAAAC,MAED,SAAWA,GACPJ,EAAK+Z,EAAL9Z,KAAgBG,EACpB,GAAC,CAAAD,IAAA,YAAAC,MAED,WACI,OAAOC,EAAK2Z,EAAL/Z,KACX,GAAC,CAAAE,IAAA,YAAAC,MAED,SAAUA,GACNJ,EAAKga,EAAL/Z,KAAeG,EACnB,GAAC,CAAAD,IAAA,aAAAC,MAED,WACI,OAAOC,EAAK4Z,EAALha,KACX,GAAC,CAAAE,IAAA,aAAAC,MAED,SAAWA,GACPJ,EAAKia,EAALha,KAAgBG,EACpB,GAAC,CAAAD,IAAA,WAAAC,MAED,WACI,OAAOC,EAAK6Z,EAALja,KACX,GAAC,CAAAE,IAAA,WAAAC,MAED,SAASA,GACLJ,EAAKka,EAALja,KAAcG,EAClB,GAAC,CAAAD,IAAA,WAAAC,MAED,WACI,OAAOC,EAAK8Z,EAALla,KACX,GAAC,CAAAE,IAAA,WAAAC,MAED,SAASD,EAAKC,GACVC,EAAK8Z,EAALla,MAAYE,GAAOC,CACvB,GAAC,CAAAD,IAAA,cAAAC,MAED,WACI,OAAOC,EAAK+Z,EAALna,KACX,GAAC,CAAAE,IAAA,cAAAC,MAED,SAAYA,GACRJ,EAAKoa,EAALna,KAAiBG,EACrB,GAAC,CAAAD,IAAA,UAAAC,MAED,WACI,OAAOC,EAAK0J,EAAL9J,KACX,GAAC,CAAAE,IAAA,UAAAC,MAED,SAAQA,GACJJ,EAAK+J,EAAL9J,KAAaG,EACjB,GAAC,CAAAD,IAAA,eAAAC,MAED,WACI,OAAOC,EAAKga,EAALpa,KACX,GAAC,CAAAE,IAAA,eAAAC,MAED,SAAaA,GACTJ,EAAKqa,EAALpa,KAAkBG,EACtB,GAAC,CAAAD,IAAA,gBAAAC,MAED,WACI,OAAOC,EAAKia,EAALra,KACX,GAAC,CAAAE,IAAA,gBAAAC,MAED,SAAcA,GACVJ,EAAKsa,EAALra,KAAmBG,EACvB,GAAC,CAAAD,IAAA,eAAAC,MAED,WACI,OAAOC,EAAKka,EAALta,KACX,GAAC,CAAAE,IAAA,eAAAC,MAED,SAAaA,GACTJ,EAAKua,EAALta,KAAkBG,EACtB,GAAC,CAAAD,IAAA,mBAAAC,MA2BD,WACI,IAAK,IAAIuB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAM8Y,GAAgBjS,EAAAA,EAAAA,GAAE,aAAD1C,OAAcnE,IACrC8Y,EAAc/K,QAAUzP,KAAKwF,WAAWjC,IAAIqK,SAAS4M,EAAcra,QAEnE,IAAMsa,GAAmBlS,EAAAA,EAAAA,GAAE,gBAAD1C,OAAiBnE,IAC3C+Y,EAAiBhL,QAAUzP,KAAKyF,cAAclC,IAAIqK,SAAS6M,EAAiBta,OAChF,CACJ,GAAC,CAAAD,IAAA,aAAAC,MAED,WACIH,KAAKsY,mBACL,IAAInQ,EAAAA,aAAanI,MACjBA,KAAK0a,SAAS,IAAI/a,EAAAA,MAAMK,OACxBA,KAAK2a,cACL3a,KAAK4a,eAAe,IAAI5U,EAAAA,YAAYhG,OACpCA,KAAKiH,WAAW4T,cAChB7a,KAAK6O,iBAAiBC,WACtB9O,KAAKyL,qBACT,GAAC,CAAAvL,IAAA,cAAAC,MAED,WAEI,IAAM2a,GAAmBvS,EAAAA,EAAAA,GAAE,UACrBwS,EAAeD,EAAiBE,WACtCD,EAAa3H,YAAY0H,GAGzB,IAAIG,EAAShV,SAASkL,cAAc,UACpC4J,EAAa3J,YAAY6J,EAC7B,GAEA,CAAA/a,IAAA,aAAAC,MAQA,SAAWwD,EAAKC,EAAKsD,GACjB,IAAMgU,EAAatS,EAAAA,KAAKuS,gBAAgBC,YAAc,GAGhDC,EAAqB7Z,KAAK8Z,IAAI1N,SAASsN,EAAatX,GAAM9C,EAAAA,OAAO0N,cAAetH,GAEtFlH,KAAKub,aAAa5X,GAClB3D,KAAKwb,gBAAgB5X,GACrB5D,KAAKyb,YAAYJ,EACrB,GAAC,CAAAnb,IAAA,YAAAC,MAED,WACIH,KAAK0b,YACL1b,KAAK2P,gBACL3P,KAAK2b,iBAAgB,EACzB,GAAC,CAAAzb,IAAA,0BAAAC,MAED,WAEI,IAFyC,IACnCyb,EADyBrZ,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACQ,EAAIvC,KAAK6b,UACvCna,EAAI,EAAGA,EAAIka,EAAkBla,IAClC1B,KAAKiH,WAAW6U,oBAChB9b,KAAKiH,WAAW7D,oBAChBpD,KAAKiH,WAAW8U,kBAChB/b,KAAK2b,kBAET3b,KAAK6O,iBAAiBC,UAC1B,GAAC,CAAA5O,IAAA,kBAAAC,MAED,WAA+B,IAAf6b,EAAKzZ,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACjBqG,EAAAA,KAAKqT,WAAWvS,YAAcsS,EAAQ,IAAMhc,KAAKiH,WAAWjE,gBAC5D4F,EAAAA,KAAKsT,YAAYxS,YAAcsS,EAAQ,IAAMhc,KAAKiH,WAAWkV,aAC7DvT,EAAAA,KAAKwT,WAAW1S,YAAcsS,EAAQ,IAAMhc,KAAKiH,WAAW3C,eAChE,GAAC,CAAApE,IAAA,oBAAAC,MAED,WACI,IAAIkX,EAAOrX,KAAKuG,cAAgB,EAC5B8Q,EAAOvW,EAAAA,OAAO0N,gBAAe6I,EAAOvW,EAAAA,OAAO0N,eAE/C,IAAM0M,EAAatS,EAAAA,KAAKuS,gBAAgBC,YAAc,GAGhDC,EAAqB7Z,KAAK8Z,IAC5B9Z,KAAK6a,MAAMnB,EAAalb,KAAK+B,mBAC7BsV,GACJrX,KAAKyb,YAAYJ,GACjBrb,KAAK6O,iBAAiBzI,cACtBpG,KAAK6O,iBAAiBC,UAC1B,GAAC,CAAA5O,IAAA,qBAAAC,MAED,WACI,IAAIkX,EAAOrX,KAAKuG,cAAgB,EAC5B8Q,EAAOvW,EAAAA,OAAOyN,gBAAe8I,EAAOvW,EAAAA,OAAOyN,eAC/CvO,KAAKyb,YAAYpE,GACjBrX,KAAK6O,iBAAiBzI,cACtBpG,KAAK6O,iBAAiBC,UAC1B,GAAC,CAAA5O,IAAA,kBAAAC,MAED,WACIH,KAAKsc,cAActc,KAAKuc,gBACpBvc,KAAKuc,eAAgBvc,KAAKwc,eAAexc,KAAKyc,eAC7Czc,KAAK2P,eACd,GAAC,CAAAzP,IAAA,iBAAAC,MAED,WAAiB,IAAAgB,EAAA,KACbnB,KAAK0c,WAAaC,aAAY,WAC1Bxb,EAAKoS,yBAAwB,EACjC,GAAG,IAAOvT,KAAKyc,cACnB,GAAC,CAAAvc,IAAA,gBAAAC,MAED,WACIyc,cAAc5c,KAAK0c,YACnB1c,KAAK0c,WAAa,IACtB,GAAC,CAAAxc,IAAA,sBAAAC,MAED,WACQH,KAAKwL,gBAAiBxL,KAAK6c,kBAC1B7c,KAAK8c,oBACd,GAAC,CAAA5c,IAAA,kBAAAC,MAED,WACIH,KAAK6O,iBAAiBxI,YAAY2E,iBAAiB,YAAahL,KAAK+c,aAAaC,KAAKhd,OACvFA,KAAK6O,iBAAiBxI,YAAY2E,iBAAiB,UAAWhL,KAAKid,YAAYD,KAAKhd,OACpFA,KAAK6O,iBAAiBxI,YAAY2E,iBAAiB,YAAahL,KAAKkd,cAAcF,KAAKhd,MAC5F,GAAC,CAAAE,IAAA,qBAAAC,MAED,WACIH,KAAK6O,iBAAiBxI,YAAY8W,oBAAoB,YAAand,KAAK+c,aAAaC,KAAKhd,OAC1FA,KAAK6O,iBAAiBxI,YAAY8W,oBAAoB,UAAWnd,KAAKid,YAAYD,KAAKhd,OACvFA,KAAK6O,iBAAiBxI,YAAY8W,oBAAoB,YAAand,KAAKkd,cAAcF,KAAKhd,MAC/F,GAAC,CAAAE,IAAA,eAAAC,MAED,SAAa8K,GACLjL,KAAKwL,kBACLxL,KAAKod,cAAa,GAClBpd,KAAKqd,KAAKpS,GAElB,GAAC,CAAA/K,IAAA,cAAAC,MAED,WACIH,KAAKod,cAAa,EACtB,GAAC,CAAAld,IAAA,gBAAAC,MAED,SAAc8K,GACNjL,KAAKsd,gBAAgBtd,KAAKqd,KAAKpS,EACvC,GAAC,CAAA/K,IAAA,OAAAC,MAED,SAAK8K,GACD,IAAMvJ,EAAIF,KAAK6a,MAAMpR,EAAMsS,QAAUvd,KAAKuG,eACpClD,EAAI7B,KAAK6a,MAAMpR,EAAMuS,QAAUxd,KAAKuG,eAEtClD,GAAK,GACLA,EAAIrD,KAAKiH,WAAWwW,oBAAoB7c,QACxCc,GAAK,GACLA,EAAI1B,KAAKiH,WAAWwW,oBAAoBpa,GAAGzC,SAE3CZ,KAAK0d,YAAYra,EAAG3B,GACpB1B,KAAK6O,iBAAiBC,WAE9B,GAAC,CAAA5O,IAAA,cAAAC,MAED,SAAYkD,EAAG3B,GACX,IACIic,EAEqCA,EAHpB3d,KAAKiH,WAAWzD,aAAaH,EAAG3B,KAGhC1B,KAAK4d,cAA0B,EACpC5d,KAAK4d,cAErB5d,KAAKiH,WAAW3F,aAAa+B,EAAG3B,EAAGic,GAClB,IAAbA,GAAgB3d,KAAKiH,WAAWxD,oBAAoBJ,EAAG3B,EAAG,EAClE,GAAC,CAAAxB,IAAA,YAAAC,MAED,WACI,IAAK,IAAIkD,EAAI,EAAGA,EAAIrD,KAAK8B,eAAgBuB,IACrC,IAAK,IAAI3B,EAAI,EAAGA,EAAI1B,KAAK+B,kBAAmBL,IACxC1B,KAAKiH,WAAW3F,aAAa+B,EAAG3B,EAAG,GACnC1B,KAAKiH,WAAWxD,oBAAoBJ,EAAG3B,EAAG,GAGlD1B,KAAK6O,iBAAiBC,UAC1B,gGAAC,CA3XO,GA+XZ7I,SAAS+E,iBAAiB,oBAAoB,WAC1C,IAAIuP,CAER,mCC1YO,SAAShS,EAAEsV,GACd,OAAO5X,SAASC,cAAc2X,EAClC,CAEO,SAASzE,EAAKyE,GACjB,OAAO5X,SAAS6X,iBAAiBD,EACrC,uQCHIE,QAA0B,GAA4B,KAE1DA,EAAwBxY,KAAK,CAACyY,EAAOC,GAAI,i/EAgKrC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iCAAiC,MAAQ,GAAG,SAAW,6mCAA6mC,eAAiB,CAAC,kzFAAkzF,WAAa,MAEphI,+DCjKAD,EAAOE,QAAU,SAAUC,GACzB,IAAIC,EAAO,GA4EX,OAzEAA,EAAKC,SAAW,WACd,OAAOre,KAAKsP,KAAI,SAAUgP,GACxB,IAAIC,EAAU,GACVC,OAA+B,IAAZF,EAAK,GAoB5B,OAnBIA,EAAK,KACPC,GAAW,cAAc1Y,OAAOyY,EAAK,GAAI,QAEvCA,EAAK,KACPC,GAAW,UAAU1Y,OAAOyY,EAAK,GAAI,OAEnCE,IACFD,GAAW,SAAS1Y,OAAOyY,EAAK,GAAG1d,OAAS,EAAI,IAAIiF,OAAOyY,EAAK,IAAM,GAAI,OAE5EC,GAAWJ,EAAuBG,GAC9BE,IACFD,GAAW,KAETD,EAAK,KACPC,GAAW,KAETD,EAAK,KACPC,GAAW,KAENA,CACT,IAAGjM,KAAK,GACV,EAGA8L,EAAK1c,EAAI,SAAW+c,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASjc,KAE7B,IAAIsc,EAAyB,CAAC,EAC9B,GAAIH,EACF,IAAK,IAAII,EAAI,EAAGA,EAAI/e,KAAKY,OAAQme,IAAK,CACpC,IAAId,EAAKje,KAAK+e,GAAG,GACP,MAANd,IACFa,EAAuBb,IAAM,EAEjC,CAEF,IAAK,IAAIe,EAAK,EAAGA,EAAKP,EAAQ7d,OAAQoe,IAAM,CAC1C,IAAIV,EAAO,GAAGzY,OAAO4Y,EAAQO,IACzBL,GAAUG,EAAuBR,EAAK,WAGrB,IAAVO,SACc,IAAZP,EAAK,KAGdA,EAAK,GAAK,SAASzY,OAAOyY,EAAK,GAAG1d,OAAS,EAAI,IAAIiF,OAAOyY,EAAK,IAAM,GAAI,MAAMzY,OAAOyY,EAAK,GAAI,MAF/FA,EAAK,GAAKO,GAMVH,IACGJ,EAAK,IAGRA,EAAK,GAAK,UAAUzY,OAAOyY,EAAK,GAAI,MAAMzY,OAAOyY,EAAK,GAAI,KAC1DA,EAAK,GAAKI,GAHVJ,EAAK,GAAKI,GAMVE,IACGN,EAAK,IAGRA,EAAK,GAAK,cAAczY,OAAOyY,EAAK,GAAI,OAAOzY,OAAOyY,EAAK,GAAI,KAC/DA,EAAK,GAAKM,GAHVN,EAAK,GAAK,GAAGzY,OAAO+Y,IAMxBR,EAAK7Y,KAAK+Y,GACZ,CACF,EACOF,CACT,8DClFAJ,EAAOE,QAAU,SAAUI,GACzB,IAAIC,EAAUD,EAAK,GACfW,EAAaX,EAAK,GACtB,IAAKW,EACH,OAAOV,EAET,GAAoB,mBAATW,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmB/O,KAAKO,UAAUoO,MACzDK,EAAO,+DAA+DzZ,OAAOsZ,GAC7EI,EAAgB,OAAO1Z,OAAOyZ,EAAM,OACxC,MAAO,CAACf,GAAS1Y,OAAO,CAAC0Z,IAAgBjN,KAAK,KAChD,CACA,MAAO,CAACiM,GAASjM,KAAK,KACxB,wmBCJIkN,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IACxBF,EAAQG,OAAS,SAAc,KAAM,QACrCH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,UAASL,GAKnB,QAAe,WAAW,UAAQM,OAAS,UAAQA,YAAStd,8ECtBnE,IAAIud,EAAc,GAClB,SAASC,EAAqBC,GAE5B,IADA,IAAIC,GAAU,EACLxe,EAAI,EAAGA,EAAIqe,EAAYnf,OAAQc,IACtC,GAAIqe,EAAYre,GAAGue,aAAeA,EAAY,CAC5CC,EAASxe,EACT,KACF,CAEF,OAAOwe,CACT,CACA,SAASC,EAAa/B,EAAMoB,GAG1B,IAFA,IAAIY,EAAa,CAAC,EACdC,EAAc,GACT3e,EAAI,EAAGA,EAAI0c,EAAKxd,OAAQc,IAAK,CACpC,IAAI4c,EAAOF,EAAK1c,GACZuc,EAAKuB,EAAQc,KAAOhC,EAAK,GAAKkB,EAAQc,KAAOhC,EAAK,GAClDiC,EAAQH,EAAWnC,IAAO,EAC1BgC,EAAa,GAAGpa,OAAOoY,EAAI,KAAKpY,OAAO0a,GAC3CH,EAAWnC,GAAMsC,EAAQ,EACzB,IAAIC,EAAoBR,EAAqBC,GACzCQ,EAAM,CACRC,IAAKpC,EAAK,GACVI,MAAOJ,EAAK,GACZqC,UAAWrC,EAAK,GAChBM,SAAUN,EAAK,GACfO,MAAOP,EAAK,IAEd,IAA2B,IAAvBkC,EACFT,EAAYS,GAAmBI,aAC/Bb,EAAYS,GAAmBK,QAAQJ,OAClC,CACL,IAAII,EAAUC,EAAgBL,EAAKjB,GACnCA,EAAQuB,QAAUrf,EAClBqe,EAAYiB,OAAOtf,EAAG,EAAG,CACvBue,WAAYA,EACZY,QAASA,EACTD,WAAY,GAEhB,CACAP,EAAY9a,KAAK0a,EACnB,CACA,OAAOI,CACT,CACA,SAASS,EAAgBL,EAAKjB,GAC5B,IAAIyB,EAAMzB,EAAQI,OAAOJ,GACzByB,EAAIC,OAAOT,GAWX,OAVc,SAAiBU,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOT,MAAQD,EAAIC,KAAOS,EAAOzC,QAAU+B,EAAI/B,OAASyC,EAAOR,YAAcF,EAAIE,WAAaQ,EAAOvC,WAAa6B,EAAI7B,UAAYuC,EAAOtC,QAAU4B,EAAI5B,MACzJ,OAEFoC,EAAIC,OAAOT,EAAMU,EACnB,MACEF,EAAIlP,QAER,CAEF,CACAiM,EAAOE,QAAU,SAAUE,EAAMoB,GAG/B,IAAI4B,EAAkBjB,EADtB/B,EAAOA,GAAQ,GADfoB,EAAUA,GAAW,CAAC,GAGtB,OAAO,SAAgB6B,GACrBA,EAAUA,GAAW,GACrB,IAAK,IAAI3f,EAAI,EAAGA,EAAI0f,EAAgBxgB,OAAQc,IAAK,CAC/C,IACIqN,EAAQiR,EADKoB,EAAgB1f,IAEjCqe,EAAYhR,GAAO6R,YACrB,CAEA,IADA,IAAIU,EAAqBnB,EAAakB,EAAS7B,GACtC+B,EAAK,EAAGA,EAAKH,EAAgBxgB,OAAQ2gB,IAAM,CAClD,IACIC,EAASxB,EADKoB,EAAgBG,IAEK,IAAnCxB,EAAYyB,GAAQZ,aACtBb,EAAYyB,GAAQX,UACpBd,EAAYiB,OAAOQ,EAAQ,GAE/B,CACAJ,EAAkBE,CACpB,CACF,sECjFA,IAAIG,EAAO,CAAC,EA+BZzD,EAAOE,QAPP,SAA0ByB,EAAQjX,GAChC,IAAIgZ,EAtBN,SAAmBA,GACjB,QAA4B,IAAjBD,EAAKC,GAAyB,CACvC,IAAIC,EAAc1b,SAASC,cAAcwb,GAGzC,GAAIE,OAAOC,mBAAqBF,aAAuBC,OAAOC,kBAC5D,IAGEF,EAAcA,EAAYG,gBAAgBC,IAC5C,CAAE,MAAOxX,GAEPoX,EAAc,IAChB,CAEFF,EAAKC,GAAUC,CACjB,CACA,OAAOF,EAAKC,EACd,CAIeM,CAAUrC,GACvB,IAAK+B,EACH,MAAM,IAAIO,MAAM,2GAElBP,EAAOtQ,YAAY1I,EACrB,wECvBAsV,EAAOE,QANP,SAA4BsB,GAC1B,IAAI9T,EAAUzF,SAASkL,cAAc,SAGrC,OAFAqO,EAAQE,cAAchU,EAAS8T,EAAQ0C,YACvC1C,EAAQG,OAAOjU,EAAS8T,EAAQA,SACzB9T,CACT,0FCCAsS,EAAOE,QANP,SAAwCiE,GACtC,IAAIC,EAAmD,KACnDA,GACFD,EAAaE,aAAa,QAASD,EAEvC,iECoDApE,EAAOE,QAjBP,SAAgBsB,GACd,GAAwB,oBAAbvZ,SACT,MAAO,CACLib,OAAQ,WAAmB,EAC3BnP,OAAQ,WAAmB,GAG/B,IAAIoQ,EAAe3C,EAAQK,mBAAmBL,GAC9C,MAAO,CACL0B,OAAQ,SAAgBT,IAjD5B,SAAe0B,EAAc3C,EAASiB,GACpC,IAAIC,EAAM,GACND,EAAI7B,WACN8B,GAAO,cAAc7a,OAAO4a,EAAI7B,SAAU,QAExC6B,EAAI/B,QACNgC,GAAO,UAAU7a,OAAO4a,EAAI/B,MAAO,OAErC,IAAIF,OAAiC,IAAdiC,EAAI5B,MACvBL,IACFkC,GAAO,SAAS7a,OAAO4a,EAAI5B,MAAMje,OAAS,EAAI,IAAIiF,OAAO4a,EAAI5B,OAAS,GAAI,OAE5E6B,GAAOD,EAAIC,IACPlC,IACFkC,GAAO,KAELD,EAAI/B,QACNgC,GAAO,KAELD,EAAI7B,WACN8B,GAAO,KAET,IAAIC,EAAYF,EAAIE,UAChBA,GAA6B,oBAATzB,OACtBwB,GAAO,uDAAuD7a,OAAOqZ,KAAKE,SAASC,mBAAmB/O,KAAKO,UAAU8P,MAAe,QAKtInB,EAAQC,kBAAkBiB,EAAKyB,EAAc3C,EAAQA,QACvD,CAoBM8C,CAAMH,EAAc3C,EAASiB,EAC/B,EACA1O,OAAQ,YArBZ,SAA4BoQ,GAE1B,GAAgC,OAA5BA,EAAanH,WACf,OAAO,EAETmH,EAAanH,WAAW5H,YAAY+O,EACtC,CAgBMI,CAAmBJ,EACrB,EAEJ,uEC9CAnE,EAAOE,QAVP,SAA2BwC,EAAKyB,GAC9B,GAAIA,EAAaK,WACfL,EAAaK,WAAWC,QAAU/B,MAC7B,CACL,KAAOyB,EAAaO,YAClBP,EAAa/O,YAAY+O,EAAaO,YAExCP,EAAa/Q,YAAYnL,SAAS0c,eAAejC,GACnD,CACF,ICXIkC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtgB,IAAjBugB,EACH,OAAOA,EAAa7E,QAGrB,IAAIF,EAAS4E,EAAyBE,GAAY,CACjD7E,GAAI6E,EAEJ5E,QAAS,CAAC,GAOX,OAHA8E,EAAoBF,GAAU9E,EAAQA,EAAOE,QAAS2E,GAG/C7E,EAAOE,OACf,CCrBA2E,EAAoB1Y,EAAK6T,IACxB,IAAIiF,EAASjF,GAAUA,EAAOkF,WAC7B,IAAOlF,EAAiB,QACxB,IAAM,EAEP,OADA6E,EAAoBM,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdJ,EAAoBM,EAAI,CAACjF,EAASmF,KACjC,IAAI,IAAInjB,KAAOmjB,EACXR,EAAoBS,EAAED,EAAYnjB,KAAS2iB,EAAoBS,EAAEpF,EAAShe,IAC5EqjB,OAAOC,eAAetF,EAAShe,EAAK,CAAEujB,YAAY,EAAMC,IAAKL,EAAWnjB,IAE1E,ECND2iB,EAAoBS,EAAI,CAAC7C,EAAKkD,IAAUJ,OAAOK,UAAUC,eAAeC,KAAKrD,EAAKkD,GCClFd,EAAoBkB,EAAK7F,IACH,oBAAX8F,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAetF,EAAS8F,OAAOC,YAAa,CAAE9jB,MAAO,WAE7DojB,OAAOC,eAAetF,EAAS,aAAc,CAAE/d,OAAO,GAAO,ECL9D0iB,EAAoBqB,QAAK1hB","sources":["webpack://game_of_life/./src/js/Board.js","webpack://game_of_life/./src/js/BoardCanvas.js","webpack://game_of_life/./src/js/Config.js","webpack://game_of_life/./src/js/EventHandler.js","webpack://game_of_life/./src/js/HTML.js","webpack://game_of_life/./src/js/Window.js","webpack://game_of_life/./src/js/utils.js","webpack://game_of_life/./src/css/style.css","webpack://game_of_life/./node_modules/css-loader/dist/runtime/api.js","webpack://game_of_life/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://game_of_life/./src/css/style.css?9fcd","webpack://game_of_life/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://game_of_life/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://game_of_life/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://game_of_life/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://game_of_life/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://game_of_life/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://game_of_life/webpack/bootstrap","webpack://game_of_life/webpack/runtime/compat get default export","webpack://game_of_life/webpack/runtime/define property getters","webpack://game_of_life/webpack/runtime/hasOwnProperty shorthand","webpack://game_of_life/webpack/runtime/make namespace object","webpack://game_of_life/webpack/runtime/nonce"],"sourcesContent":["import {Config} from './Config.js';\r\n\r\nexport class Board {\r\n    #app;\r\n    #isAlive;\r\n    #generation;\r\n    #totalAlive;\r\n\r\n    #grid;\r\n    #gridHistory;\r\n    #gridNumberNeighbors;\r\n    #gridTypeNeighbors;\r\n    #gridEnableDraw;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    getIsAlive() {\r\n        return this.#isAlive;\r\n    }\r\n\r\n    setIsAlive(value) {\r\n        this.#isAlive = value;\r\n    }\r\n\r\n    getGeneration() {\r\n        return this.#generation;\r\n    }\r\n\r\n    setGeneration(value) {\r\n        this.#generation = value;\r\n    }\r\n\r\n    getTotalAlive() {\r\n        return this.#totalAlive;\r\n    }\r\n\r\n    setTotalAlive(value) {\r\n        this.#totalAlive = value;\r\n    }\r\n\r\n    // Grille principale\r\n    getGrid() {\r\n        return this.#grid;\r\n    }\r\n\r\n    setGrid(value) {\r\n        this.#grid = value;\r\n    }\r\n\r\n    getGridValue(y, x) {\r\n        return this.#grid[y][x];\r\n    }\r\n\r\n    setGridValue(y, x, value) {\r\n        this.#grid[y][x] = value;\r\n    }\r\n\r\n    // Historique de la grille\r\n    getGridHistory() {\r\n        return this.#gridHistory;\r\n    }\r\n\r\n    setGridHistory(value) {\r\n        this.#gridHistory = value;\r\n    }\r\n\r\n    getGridHistoryValue(y, x) {\r\n        return this.#gridHistory[y][x];\r\n    }\r\n\r\n    setGridHistoryValue(y, x, value) {\r\n        this.#gridHistory[y][x] = value;\r\n    }\r\n\r\n    // Nombre de voisins dans la grille\r\n    getGridNumberNeighbors() {\r\n        return this.#gridNumberNeighbors;\r\n    }\r\n\r\n    setGridNumberNeighbors(value) {\r\n        this.#gridNumberNeighbors = value;\r\n    }\r\n\r\n    getGridNumberNeighborsValue(y, x) {\r\n        return this.#gridNumberNeighbors[y][x];\r\n    }\r\n\r\n    setGridNumberNeighborsValue(y, x, value) {\r\n        this.#gridNumberNeighbors[y][x] = value;\r\n    }\r\n\r\n    // Type de voisins dans la grille\r\n    getGridTypeNeighbors() {\r\n        return this.#gridTypeNeighbors;\r\n    }\r\n\r\n    setGridTypeNeighbors(value) {\r\n        this.#gridTypeNeighbors = value;\r\n    }\r\n\r\n    getGridTypeNeighborsValue(y, x) {\r\n        return this.#gridTypeNeighbors[y][x];\r\n    }\r\n\r\n    setGridTypeNeighborsValue(y, x, value) {\r\n        this.#gridTypeNeighbors[y][x] = value;\r\n    }\r\n\r\n    // Activation du dessin sur la grille\r\n    getGridEnableDraw() {\r\n        return this.#gridEnableDraw;\r\n    }\r\n\r\n    setGridEnableDraw(value) {\r\n        this.#gridEnableDraw = value;\r\n    }\r\n\r\n    getGridEnableDrawValue(y, x) {\r\n        return this.#gridEnableDraw[y][x];\r\n    }\r\n\r\n    setGridEnableDrawValue(y, x, value) {\r\n        this.#gridEnableDraw[y][x] = value;\r\n    }\r\n\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.#isAlive = 0;\r\n        this.#generation = 0;\r\n        this.#totalAlive = 0\r\n\r\n        this.#grid = this.createGrid();\r\n        this.#gridHistory = this.createGrid(false);\r\n        this.#gridNumberNeighbors = this.createGrid(false);\r\n        this.#gridTypeNeighbors = this.createGrid(false);\r\n        this.#gridEnableDraw = this.createGrid(false);\r\n    }\r\n\r\n    initializeGrids(grid) {\r\n        this.setGrid(grid);\r\n        this.setGridHistory(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridNumberNeighbors(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridTypeNeighbors(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridEnableDraw(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)))\r\n    }\r\n\r\n    initPlaneur() {\r\n        const plane1 = [\r\n            [12, 5],\r\n            [12, 6],\r\n            [12, 7],\r\n            [13, 7],\r\n            [14, 6],\r\n        ];\r\n\r\n        const plane2 = [\r\n            [5, 12],\r\n            [5, 13],\r\n            [5, 14],\r\n            [6, 14],\r\n            [7, 13],\r\n        ];\r\n\r\n        plane1.forEach(coord => {\r\n            this.setGridValue(coord[0], coord[1], 1);\r\n        });\r\n\r\n        plane2.forEach(coord => {\r\n            this.setGridValue(coord[0], coord[1], 2);\r\n        });\r\n    }\r\n\r\n    getRandomCellState() {\r\n        // Génère un nombre aléatoire entre 0 et 1\r\n        const random = Math.random();\r\n\r\n        // Calcule la distribution cumulative\r\n        let cumulativeProbability = 0;\r\n        for (let i = 0; i < this.getApp().getWeights().length; i++) {\r\n            cumulativeProbability += this.getApp().getWeights()[i];\r\n            if (random <= cumulativeProbability) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        // Retourne DEAD par défaut (ne devrait pas se produire)\r\n        return Config.DEAD;\r\n    }\r\n\r\n    // Méthode pour initialiser la grille avec des cellules mortes\r\n    createGridRandom() {\r\n        return Array.from({length: this.getApp().getRowCanvas()}, () =>\r\n            Array.from({length: this.getApp().getColumnCanvas()}, () =>\r\n                this.getRandomCellState()\r\n            )\r\n        );\r\n    }\r\n\r\n    // Méthode pour initialiser la grille avec des cellules mortes\r\n    createGrid() {\r\n        return Array.from({length: this.getApp().getRowCanvas()}, () =>\r\n            Array.from({length: this.getApp().getColumnCanvas()}, () => Config.DEAD)\r\n        );\r\n    }\r\n\r\n    applyPattern(pattern, startY, startX, state = Config.ALIVE1) {\r\n        pattern.forEach(([dy, dx]) => {\r\n            const y = startY + dy;\r\n            const x = startX + dx;\r\n            if (y >= 0 && y < this.getApp().getRowCanvas() && x >= 0 && x < this.getApp().getColumnCanvas()) {\r\n                this.setGridValue(y, x, state);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Calcule la prochaine génération du jeu\r\n    getNextGeneration() {\r\n\r\n        this.setGeneration(this.getGeneration() + 1);\r\n        this.calculateNeighbors();\r\n        const nextGrid = this.createNextGrid();\r\n\r\n        this.setGrid(nextGrid)\r\n        this.updateHistoryGrid();\r\n    }\r\n\r\n    // Met à jour la grille d'historique pour l'évaluation des tendances\r\n    updateHistoryGrid() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                if (Config.aliveValuesSet.has(this.getGridValue(j, i))) {\r\n                    this.setGridHistoryValue(j, i, this.getGridHistoryValue(j, i) + 1);\r\n                } else {\r\n                    this.setGridHistoryValue(j, i, 0)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isWithinGridBounds(j, i) {\r\n        return j >= 0 && j < this.getApp().getRowCanvas() && i >= 0 && i < this.getApp().getColumnCanvas();\r\n    }\r\n\r\n    applyBoundaryRules(j, i) {\r\n        const row = this.getApp().getRowCanvas();\r\n        const col = this.getApp().getColumnCanvas();\r\n\r\n        if (j === -1) {\r\n            j = row - 1;\r\n        }\r\n        if (j === row) {\r\n            j = 0;\r\n        }\r\n        if (i === -1) {\r\n            i = col - 1;\r\n        }\r\n        if (i === col) {\r\n            i = 0;\r\n        }\r\n        if (j === -2) {\r\n            j = row - 2;\r\n        }\r\n        if (j === row + 1) {\r\n            j = 1;\r\n        }\r\n        if (i === -2) {\r\n            i = col - 2;\r\n        }\r\n        if (i === col + 1) {\r\n            i = 1;\r\n        }\r\n\r\n        return [j, i];\r\n    }\r\n\r\n\r\n    // Compte les voisins d'une cellule donnée\r\n    calculateNeighbors(y, x) {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const [\r\n                    numberNeighbors,\r\n                    typeNeighbors\r\n                ] = this.countNeighbors(j, i);\r\n                this.setGridNumberNeighborsValue(j, i, numberNeighbors);\r\n                this.setGridTypeNeighborsValue(j, i, typeNeighbors);\r\n            }\r\n        }\r\n    }\r\n\r\n    countAliveCells() {\r\n        let isAlive = 0;\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                if (Config.aliveValuesSet.has(this.getGridValue(j, i))) {\r\n                    isAlive++; // Incrémente le compteur si la cellule est vivante\r\n                }\r\n            }\r\n        }\r\n        this.setIsAlive(isAlive);\r\n        this.setTotalAlive(this.getTotalAlive() + isAlive);\r\n    }\r\n\r\n    countNeighbors(j, i) {\r\n        let neighborsAccount = 0;\r\n        let neighborsTotal = 0;\r\n\r\n        Config.MIDDLES['Plaine'].forEach(direction => {\r\n            let [y, x] = [j + direction.y, i + direction.x]\r\n\r\n            if (!this.getApp().getBorder()) [y, x] = this.applyBoundaryRules(y, x);\r\n\r\n            if (this.isWithinGridBounds(y, x)) {\r\n                const currentValue = this.getGridValue(y, x);\r\n                if (Config.aliveValuesSet.has(currentValue)) {\r\n                    neighborsAccount += 1;\r\n                    neighborsTotal += currentValue;\r\n                }\r\n            }\r\n        });\r\n\r\n        return neighborsAccount ? [neighborsAccount, Math.round(neighborsTotal / neighborsAccount)] : [0, 0];\r\n    }\r\n\r\n    createNextGrid() {\r\n        const nextGrid = [];\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            const nextRow = [];\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const typeNeighbors = this.getGridTypeNeighborsValue(j, i);\r\n                const numberNeighbors = this.getGridNumberNeighborsValue(j, i);\r\n                const currentValue = this.getGridValue(j, i);\r\n                const nextCellValue = this.determineNextCellValue(currentValue, typeNeighbors, numberNeighbors);\r\n                nextRow.push(nextCellValue);\r\n            }\r\n            nextGrid.push(nextRow);\r\n        }\r\n        return nextGrid;\r\n    }\r\n\r\n    determineNextCellValue(currentValue, typeNeighbors, numberNeighbors) {\r\n        if (Config.aliveValuesSet.has(currentValue)) {\r\n            if (this.getApp().getBirth().has(numberNeighbors)) {\r\n                return currentValue;\r\n            } else {\r\n                return Config.DEAD;\r\n            }\r\n        } else if (currentValue === Config.DEAD) {\r\n            if (this.getApp().getSurvival().has(numberNeighbors)) {\r\n                return typeNeighbors;\r\n            } else {\r\n                return Config.DEAD;\r\n            }\r\n        } else if (currentValue === Config.WALL) {\r\n            return Config.WALL;\r\n        }\r\n    }\r\n\r\n    // Déplace la grille vers le haut\r\n    moveUp() {\r\n        let nextGrid = this.getGrid().slice(1);\r\n        nextGrid.push(Array(this.getApp().getColumnCanvas()).fill(Config.DEAD));\r\n        this.setGrid(nextGrid);\r\n    }\r\n\r\n    // Déplace la grille vers le bas\r\n    moveDown() {\r\n        let nextGrid = [];\r\n        nextGrid.push(Array(this.getApp().getColumnCanvas()).fill(Config.DEAD));\r\n        nextGrid = nextGrid.concat(this.getGrid().slice(0, this.getApp().getRowCanvas() - 1));\r\n        this.setGrid(nextGrid);\r\n    }\r\n\r\n    // Déplace la grille vers la gauche\r\n    moveLeft() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas() - 1; i++) {\r\n                this.setGridValue(j, i, this.getGridValue(j, i + 1));\r\n            }\r\n            this.setGridValue(j, this.getApp().getColumnCanvas() - 1, Config.DEAD);\r\n        }\r\n    }\r\n\r\n    // Déplace la grille vers la droite\r\n    moveRight() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = this.getApp().getColumnCanvas() - 1; i > 0; i--) {\r\n                this.setGridValue(j, i, this.getGridValue(j, i - 1));\r\n            }\r\n            this.setGridValue(j, 0, Config.DEAD);\r\n        }\r\n    }\r\n}\r\n","import {Config} from './Config.js';\r\n\r\n\r\nexport class BoardCanvas {\r\n    #app;\r\n    #canvas;\r\n    #ctx;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.#canvas;\r\n    }\r\n\r\n    getCtx() {\r\n        return this.#ctx;\r\n    }\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.#canvas = document.querySelector('canvas');\r\n        this.#ctx = this.#canvas.getContext('2d');\r\n        this.setupCanvas();\r\n    }\r\n\r\n    setDimensionsCanvas() {\r\n        this.getCanvas().width = this.getApp().getColumnCanvas() * this.getApp().getCellSize();\r\n        this.getCanvas().height = this.getApp().getRowCanvas() * this.getApp().getCellSize();\r\n    }\r\n\r\n    setupCanvas() {\r\n        this.setDimensionsCanvas();\r\n        this.getCtx().fillStyle = Config.canvasBgColor;\r\n        this.getCtx().fillRect(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n    }\r\n\r\n    clearCanvas() {\r\n        this.getCtx().clearRect(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n    }\r\n\r\n    drawGrid() {\r\n        this.clearCanvas();\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const currentValueCell = this.getApp().getBoard().getGridValue(j, i);\r\n                const cellSize = this.getApp().getCellSize();\r\n                if (Config.notDeadValueSet.has(currentValueCell)) {\r\n                    this.getCtx().fillStyle = this.getColorFromIndex(currentValueCell, j, i);\r\n                    this.getCtx().fillRect(i * cellSize, j * cellSize, cellSize, cellSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.getApp().getLines()) {\r\n            this.drawLines();\r\n        }\r\n    }\r\n\r\n\r\n    drawLines() {\r\n        this.getCtx().strokeStyle = 'rgb(100, 100, 100)';\r\n        this.getCtx().lineWidth = 1;\r\n        const cellSize = this.getApp().getCellSize();\r\n\r\n        // Dessiner des lignes horizontales\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            this.getCtx().beginPath();\r\n            this.getCtx().moveTo(0, j * cellSize);\r\n            this.getCtx().lineTo(this.getCanvas().width, j * cellSize);\r\n            this.getCtx().stroke();\r\n        }\r\n\r\n        // Dessiner des lignes verticales\r\n        for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n            this.getCtx().beginPath();\r\n            this.getCtx().moveTo(i * cellSize, 0);\r\n            this.getCtx().lineTo(i * cellSize, this.getCanvas().height);\r\n            this.getCtx().stroke();\r\n        }\r\n    }\r\n\r\n\r\n    getColorFromIndex(value, j, i) {\r\n        let color = 100;\r\n        if (this.getApp().getHistory()) {\r\n            color -= 0.2 * this.getApp().getBoard().getGridHistoryValue(j, i);\r\n            if (color < 10) color = 10;\r\n        }\r\n\r\n        switch (value) {\r\n            case 0:\r\n                return `hsl(0, 0%, 0%)`; // Noir\r\n            case 1:\r\n                return `hsl(200, ${color}%, 50%)`; // Bleu\r\n            case 2:\r\n                return `hsl(0, ${color}%, 50%)`; // Rouge\r\n            case 3:\r\n                return `hsl(60, ${color}%, 50%)`; // Jaune\r\n            case 4:\r\n                return `hsl(100, ${color}%, 50%)`; // Vert\r\n            case 9:\r\n                return `hsl(320, ${color}%, 100%)`; // Blanc\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n}\r\n","// function make\r\n\r\nexport class Config {\r\n    // Taille des cellules du canvas\r\n    static MIN_CELL_SIZE = 3;\r\n    static MAX_CELL_SIZE = 250;\r\n\r\n    // Nombre minimales et maximales de colonne\r\n    static MIN_COL = 2;\r\n    static MAX_COL = 250;\r\n\r\n    // Valeurs des cellules\r\n    static DEAD = 0;\r\n    static ALIVE1 = 1;\r\n    static ALIVE2 = 2;\r\n    static ALIVE3 = 3;\r\n    static ALIVE4 = 4;\r\n    static WALL = 9;\r\n\r\n    // Milieux\r\n    static MIDDLES = {\r\n        \"Desert\": [\r\n            {name: 'N', x: 0, y: -1},\r\n            {name: 'E', x: 1, y: 0},\r\n            {name: 'S', x: 0, y: 1},\r\n            {name: 'O', x: -1, y: 0},\r\n        ],\r\n        \"Ville\": [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n        ],\r\n        'Plaine': [\r\n            {name: 'N', x: 0, y: -1},\r\n            {name: 'NE', x: 1, y: -1},\r\n            {name: 'E', x: 1, y: 0},\r\n            {name: 'SE', x: 1, y: 1},\r\n            {name: 'S', x: 0, y: 1},\r\n            {name: 'SO', x: -1, y: 1},\r\n            {name: 'O', x: -1, y: 0},\r\n            {name: 'NO', x: -1, y: -1}\r\n        ],\r\n        'Foret': [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'NE', x: 1, y: -1},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'SE', x: 1, y: 1},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'SO', x: -1, y: 1},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n            {name: 'NO', x: -1, y: -1}\r\n        ],\r\n        'Mer': [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'NE-1', x: 1, y: -1},\r\n            {name: 'NE-2', x: 2, y: -2},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'SE-1', x: 1, y: 1},\r\n            {name: 'SE-2', x: 2, y: 2},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'SO-1', x: -1, y: 1},\r\n            {name: 'SO-2', x: -2, y: 2},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n            {name: 'NO-1', x: -1, y: -1},\r\n            {name: 'NO-2', x: -2, y: -2}\r\n        ],\r\n    };\r\n\r\n    static aliveValuesSet = new Set([1, 2, 3, 4]);\r\n\r\n    static notDeadValueSet = new Set([1, 2, 3, 4, 9]);\r\n\r\n    // Font Canvas\r\n    static canvasBgColor = 'black';\r\n}","import {Config} from './Config.js';\r\nimport {$} from './utils.js';\r\nimport {HTML} from './HTML.js';\r\n\r\nexport class EventHandler {\r\n    #app;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'état du bouton de démarrage.\r\n     *\r\n     * @param {boolean} [forceStop=false] - Si vrai, force l'arrêt de l'animation même si elle n'est pas en cours.\r\n     * @returns {void}\r\n     */\r\n    updateStartButton(forceStop = false) {\r\n        const playIcon = $('#startIcon');\r\n        const pauseIcon = $('#pauseIcon');\r\n\r\n        const isPlaying = playIcon.style.display === 'none';\r\n\r\n        if (forceStop && !isPlaying) return;\r\n\r\n        playIcon.style.display = isPlaying ? 'block' : 'none';\r\n        pauseIcon.style.display = isPlaying ? 'none' : 'block';\r\n        HTML.startPrincipalButton.title = isPlaying ? 'Démarrer' : 'Pause';\r\n\r\n        // Appelle toggleAnimation si l'état change\r\n        this.getApp().toggleAnimation();\r\n    }\r\n\r\n    /**\r\n     * Met à jour les poids des entrées aléatoires.\r\n     *\r\n     * @param {HTMLInputElement} changedInput - L'entrée dont la valeur a changé.\r\n     * @returns {void}\r\n     */\r\n    updateWeights(changedInput) {\r\n        const total = Array.from(HTML.weightFullRandomInputs).reduce((acc, input) => acc + parseFloat(input.value), 0);\r\n\r\n        let totalZero = (1 - total).toFixed(2);\r\n        if (totalZero < 0) totalZero = 0;\r\n\r\n        HTML.weightRandomSpan0.textContent = totalZero;\r\n        HTML.weightRandomInput0.value = totalZero;\r\n\r\n        if (total > 1) {\r\n            const decreaseAmount = (total - 1) / (HTML.weightFullRandomInputs.length - 1);\r\n            HTML.weightFullRandomInputs.forEach(input => {\r\n                if (input !== changedInput) {\r\n                    input.value = Math.max(parseFloat(input.value) - decreaseAmount, 0);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valide une grille donnée.\r\n     *\r\n     * @param {string[]} grid - La grille à valider, représentée sous forme d'un tableau de chaînes de caractères.\r\n     * @returns {boolean} - Vrai si la grille est valide, faux sinon.\r\n     */\r\n    validateGrid(grid) {\r\n        const rowLength = grid[0].length;\r\n        for (const row of grid) {\r\n            if (row.length !== rowLength || !/^[012349]+$/.test(row)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Affiche les boutons d'une div avec un délai de masquage.\r\n     *\r\n     * @param {HTMLDivElement} div - La div contenant les boutons à afficher.\r\n     * @param {HTMLElement} principalButton - Le bouton principal qui déclenche l'affichage de la div.\r\n     * @param {HTMLElement} parent - L'élément parent de la div et du bouton principal.\r\n     * @returns {void}\r\n     */\r\n    displayDivButtons(div, principalButton, parent) {\r\n        let moveHideTimeout; // Variable pour stocker le timeout\r\n\r\n        // Fonction pour afficher ou masquer la div des boutons avec un délai\r\n        const toggleDiv = (show) => {\r\n            moveHideTimeout = this.toggleVisibilityWithDelay(div, show, 300, moveHideTimeout);\r\n        };\r\n\r\n        // Affiche la div lorsque le bouton est survolé\r\n        principalButton.addEventListener('mouseover', () => toggleDiv(true));\r\n\r\n        // Affiche la div lorsque la souris est sur la div entière\r\n        parent.addEventListener('mouseover', () => toggleDiv(true));\r\n\r\n        // Ferme la div avec un délai lorsque la souris quitte la div entière\r\n        parent.addEventListener('mouseout', (event) => {\r\n            if (!parent.contains(event.relatedTarget)) {\r\n                toggleDiv(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'état du bouton de dessin.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    updateDrawButton() {\r\n        HTML.drawPrincipalButton.classList.toggle('active');\r\n        this.getApp().setEnableDraw(!this.getApp().getEnableDraw());\r\n        this.getApp().toggleDrawingEvents();\r\n    }\r\n\r\n    /**\r\n     * Bascule la visibilité d'un élément avec un délai.\r\n     *\r\n     * @param {HTMLElement} element - L'élément dont la visibilité doit être basculée.\r\n     * @param {boolean} show - Si vrai, affiche l'élément, sinon le masque.\r\n     * @param {number} delay - Le délai en millisecondes avant de masquer l'élément.\r\n     * @param {number|null} timeoutId - L'identifiant du timeout précédent, s'il existe.\r\n     * @returns {number|null} - L'identifiant du nouveau timeout, ou null si l'élément est affiché.\r\n     */\r\n    toggleVisibilityWithDelay(element, show, delay, timeoutId) {\r\n        // Annuler tout timeout précédent\r\n        clearTimeout(timeoutId);\r\n\r\n        if (show) {\r\n            element.style.display = 'flex'; // Affiche immédiatement\r\n            return null; // Pas de nouveau timeout à gérer pour l'affichage\r\n        } else {\r\n            return setTimeout(() => {\r\n                element.style.display = 'none';\r\n            }, delay); // Masque avec délai\r\n        }\r\n    }\r\n\r\n    // Fonction principale pour initialiser tous les événements\r\n    initialize() {\r\n        // ICONES\r\n        this.initializeSimulationIcon();\r\n        this.initializeSaveButton();\r\n        this.initializeLoadModal();\r\n        this.initiatilizeEnterButton();\r\n        this.initializeCopyIcon();\r\n        this.initializeStepIcon();\r\n        this.initializeJumpIcon();\r\n        this.initializeStartIcon();\r\n        this.initializeRapidityIcon();\r\n        this.initializeColorIcon();\r\n        this.initializeDrawIcon();\r\n        this.initializeTrashIcon();\r\n        this.initializeGridIcon();\r\n        this.initializeBordureIcon();\r\n        this.initializeHistoryIcon();\r\n        this.initializeArrowsButton();\r\n        this.initializeZoomButton()\r\n        this.initializeDefineRulesButton();\r\n        this.initializePredefineRulesButton();\r\n        this.initializeDocButton();\r\n        this.initializeKeyboard();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION SIMULATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de simulation en ajoutant un gestionnaire d'événements au\r\n     * bouton principal. Lorsque le bouton est cliqué, la fonction met à jour l'état du\r\n     * bouton de démarrage en forçant l'arrêt de l'animation.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeSimulationIcon() {\r\n        HTML.simulationPrincipalButton.addEventListener('click', () => {\r\n            this.updateStartButton(true)\r\n        });\r\n\r\n        this.initializeConfigurerModal();\r\n        this.initializeWeightModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de configuration en définissant un gestionnaire d'événements sur\r\n     * le bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction valide les valeurs\r\n     * d'entrée pour le nombre de lignes, de colonnes et la taille des cellules en utilisant\r\n     * la fonction interne `validateInput`. Elle initialise ensuite une nouvelle grille en\r\n     * nettoyant la grille actuelle, en formatant la nouvelle grille avec les valeurs validées,\r\n     * en créant une nouvelle grille aléatoire, en initialisant les grilles, en définissant les\r\n     * dimensions du canvas et en dessinant la nouvelle grille.\r\n     *\r\n     * La fonction `validateInput` est une fonction interne qui valide une valeur d'entrée en\r\n     * fonction d'une valeur minimale et maximale autorisées. Elle convertit la valeur d'entrée\r\n     * en un entier, vérifie si elle est dans la plage autorisée et retourne la valeur validée.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeConfigurerModal() {\r\n        function validateInput(inputElement, minValue, maxValue) {\r\n            let value = parseInt(inputElement.value, 10);\r\n\r\n            if (isNaN(value)) return minValue; else if (value > maxValue) return maxValue; else if (value < minValue) return minValue; else return value;\r\n        }\r\n\r\n        HTML.applyConfigureButton.addEventListener('click', () => {\r\n            // Corriger les input\r\n            let rowsInput = validateInput(HTML.rowsConfigureInput, Config.MIN_COL, Config.MAX_COL);\r\n            let columnsInput = validateInput(HTML.columnsConfigureInput, Config.MIN_COL, Config.MAX_COL);\r\n            let cellSizeInput = validateInput(HTML.cellSizeConfigureInput, Config.MIN_CELL_SIZE, Config.MAX_CELL_SIZE);\r\n\r\n            // Initialiser une nouvelle grille\r\n            this.updateStartButton(true);\r\n            this.getApp().cleanGrid();\r\n            this.getApp().formatGrid(rowsInput, columnsInput, cellSizeInput);\r\n            let grid = this.getApp().getBoard().createGridRandom();\r\n            this.getApp().getBoard().initializeGrids(grid);\r\n            this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal des poids en affichant les valeurs initiales des poids et en ajoutant\r\n     * des gestionnaires d'événements aux entrées de poids et au bouton \"Appliquer\". Lorsqu'une\r\n     * valeur d'entrée change, la fonction `updateWeights` est appelée avec l'entrée modifiée comme\r\n     * argument, et la fonction interne `displayWeights` est appelée pour mettre à jour l'affichage\r\n     * des poids dans les spans associés.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" est cliqué, la fonction crée un tableau des valeurs de poids\r\n     * actuelles, y compris la valeur de la dernière entrée calculée. Elle appelle `setWeights` sur\r\n     * l'application avec le tableau de poids converti en nombres, et coche la case à cocher \"Hasard\"\r\n     * du modal de configuration.\r\n     *\r\n     * La fonction `displayWeights` est une fonction interne qui affiche les valeurs actuelles des\r\n     * poids dans les spans associés.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeWeightModal() {\r\n        const displayWeights = () => {\r\n            HTML.weightFullRandomInputs.forEach((input, index) => {\r\n                HTML.weightRandomSpans[index].textContent = `(${input.value})`;\r\n            });\r\n        }\r\n\r\n        // Affiche la valeur initiale des poids\r\n        HTML.weightFullRandomInputs.forEach((input, index) => {\r\n            HTML.weightRandomSpans[index].textContent = `(${input.value})`;\r\n        });\r\n\r\n        HTML.weightFullRandomInputs.forEach(input => {\r\n            input.addEventListener('input', () => {\r\n                this.updateWeights(input);\r\n                displayWeights();\r\n            });\r\n        });\r\n\r\n        HTML.applyRandombutton.addEventListener('click', () => {\r\n            const weights = [];\r\n            weights.push(HTML.weightRandomInput0.value);\r\n            HTML.weightFullRandomInputs.forEach(weight => {\r\n                weights.push(weight.value);\r\n            });\r\n            this.getApp().setWeights(weights.map(Number));\r\n            HTML.hasardConfigureCheckbox.checked = true;\r\n        })\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION SAUVEGARDE\r\n     ******************************************/\r\n\r\n    initializeSaveButton() {\r\n        HTML.savePrincipalButton.addEventListener('click', () => {\r\n\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializeSaveModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de sauvegarde en ajoutant un gestionnaire d'événements au bouton\r\n     * \"Sauvegarder\". Lorsque le bouton est cliqué, la fonction met en pause l'animation, met\r\n     * à jour le bouton de démarrage et récupère le nom de sauvegarde entré dans l'input. Si\r\n     * le champ est vide, elle demande à l'utilisateur d'entrer un nom.\r\n     *\r\n     * La fonction vérifie ensuite s'il existe déjà une sauvegarde avec le même nom. Si c'est\r\n     * le cas, elle affiche une boîte de dialogue de confirmation pour remplacer la sauvegarde\r\n     * existante. Enfin, elle enregistre la grille actuelle dans le localStorage sous le nom de\r\n     * sauvegarde et met à jour la liste des noms de sauvegarde.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeSaveModal() {\r\n        HTML.applySaveButton.addEventListener('click', () => {\r\n            let saveName = HTML.nameSaveInput.value.toLowerCase().trim();\r\n            while (!saveName) {\r\n                saveName = prompt(\"Veuillez entrer un nom pour la sauvegarde.\").toLowerCase().trim();\r\n            }\r\n            const saveData = this.getApp().getBoard().getGrid();\r\n\r\n            // Vérifier s'il existe déjà une sauvegarde avec le même nom\r\n            let saveNames = JSON.parse(localStorage.getItem('saveNames')) || [];\r\n            let saves = JSON.parse(localStorage.getItem('savesLifeGame')) || {};\r\n\r\n            if (saves[saveName]) {\r\n                if (!confirm(`Une sauvegarde portant le même nom existe déjà. Voulez-vous la remplacer ?`)) {\r\n                    return;\r\n                }\r\n            } else { saveNames.push(saveName);}\r\n\r\n            saves[saveName] = saveData;\r\n            localStorage.setItem('saveNames', JSON.stringify(saveNames));\r\n            localStorage.setItem('savesLifeGame', JSON.stringify(saves));\r\n            HTML.nameSaveInput.value = '';\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CHARGEMENT\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le modal de chargement en ajoutant un gestionnaire d'événements au bouton\r\n     * \"Charger\". Lorsque le bouton est cliqué, la fonction met en pause l'animation, met à\r\n     * jour le bouton de démarrage, efface les options du select de chargement et remplit le\r\n     * select avec les noms de sauvegarde récupérés à partir du localStorage.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" du modal de chargement est cliqué, la fonction récupère\r\n     * la grille sauvegardée correspondant à l'option sélectionnée dans le select, initialise\r\n     * une nouvelle grille en nettoyant la grille actuelle, en formatant la nouvelle grille\r\n     * avec les dimensions de la grille sauvegardée, en initialisant les grilles avec les\r\n     * valeurs sauvegardées, en définissant les dimensions du canvas et en dessinant la nouvelle\r\n     * grille.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeLoadModal() {\r\n        HTML.loadPrincipalButton.addEventListener('click', () => {\r\n\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n\r\n            // Effacer le select\r\n            HTML.configLoadSelect.innerHTML = '';\r\n\r\n            // Récupérer les noms des sauvegardes à partir de l'objet 'saveNames'\r\n            let saveNames = JSON.parse(localStorage.getItem('saveNames')) || [];\r\n\r\n            // Créer le select\r\n            saveNames.forEach(saveName => {\r\n                const option = document.createElement('option');\r\n                option.value = saveName;\r\n                option.textContent = saveName;\r\n                HTML.configLoadSelect.appendChild(option);\r\n            });\r\n        });\r\n\r\n        HTML.applyLoadButton.addEventListener('click', () => {\r\n            const selectedSave = HTML.configLoadSelect.value;\r\n\r\n            // Récupérer les sauvegardes à partir de l'objet 'savesLifeGame'\r\n            let saves = JSON.parse(localStorage.getItem('savesLifeGame')) || {};\r\n            const savedGrid = saves[selectedSave];\r\n\r\n            // Initialiser une nouvelle grille\r\n            this.updateStartButton(true);\r\n            this.getApp().cleanGrid();\r\n            this.getApp().formatGrid(savedGrid.length, savedGrid[0].length, this.getApp().getCellSize());\r\n            this.getApp().getBoard().initializeGrids(savedGrid);\r\n            this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION INSERTION ET COPIE\r\n     ******************************************/\r\n\r\n    initiatilizeEnterButton() {\r\n        this.initializeEnterModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal d'entrée de grille en ajoutant un gestionnaire d'événements à la zone\r\n     * de texte d'entrée de grille. Lorsque la valeur de la zone de texte change, la fonction\r\n     * valide la grille en utilisant la méthode `validateGrid`. Si la grille est valide, elle\r\n     * ajoute la classe CSS \"valid\" à la zone de texte et masque le message d'erreur. Sinon,\r\n     * ell ajoute la classe CSS \"invalid\" à la zone de texte et affiche le message d'erreur. Le\r\n     * bouton \"Appliquer\" est également désactivé tant que la grille n'est pas valide.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" est cliqué, si la grille est valide, la fonction initialise\r\n     * une nouvelle grille en nettoyant la grille actuelle, en formatant la nouvelle grille avec\r\n     * les dimensions de la grille entrée, en initialisant les grilles avec les valeurs entrées,\r\n     * en définissant les dimensions du canvas et en dessinant la nouvelle grille.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeEnterModal() {\r\n        let isValidatedGrid;\r\n        let grid;\r\n\r\n        HTML.arrayGridEnterInput.addEventListener('input', () => {\r\n            grid = HTML.arrayGridEnterInput.value.trim().split('\\n')\r\n            isValidatedGrid = this.validateGrid(grid);\r\n            if (isValidatedGrid) {\r\n                HTML.arrayGridEnterInput.classList.add('valid');\r\n                HTML.arrayGridEnterInput.classList.remove('invalid');\r\n                HTML.errorGridEnterP.classList.add('d-none');\r\n            } else {\r\n                HTML.arrayGridEnterInput.classList.add('invalid');\r\n                HTML.arrayGridEnterInput.classList.remove('valid');\r\n                HTML.errorGridEnterP.classList.remove('d-none');\r\n            }\r\n\r\n            HTML.applyGridEnterButton.disabled = !isValidatedGrid;\r\n        });\r\n\r\n        HTML.applyGridEnterButton.addEventListener(\"click\", () => {\r\n            if (isValidatedGrid) {\r\n                grid = grid.map(row => Array.from(row, Number));\r\n\r\n                // Initialiser une nouvelle grille\r\n                this.updateStartButton(true);\r\n                this.getApp().cleanGrid();\r\n                this.getApp().formatGrid(grid.length, grid[0].length, this.getApp().getCellSize());\r\n                this.getApp().getBoard().initializeGrids(grid);\r\n                this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n                this.getApp().getBoardCanvas().drawGrid();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialise l'icône de copie en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction récupère la valeur de la grille actuelle, la\r\n     * convertit en une chaîne de caractères et la copie dans le presse-papier à l'aide de l'API\r\n     * Clipboard. Un message d'alerte est affiché en cas de succès ou d'échec de la copie.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeCopyIcon() {\r\n        HTML.copyPrincipalButton.addEventListener('click', () => {\r\n            const gridValue = this.getApp()\r\n                .getBoard()\r\n                .getGrid()\r\n                .map(row => row.join(''))\r\n                .join('\\n');\r\n\r\n            // Créer un text area pour effectuer la copie\r\n            const textArea = document.createElement('textarea');\r\n            textArea.style.position = 'fixed';\r\n            textArea.style.opacity = '0';\r\n            textArea.style.left = '-9999px';\r\n            textArea.style.top = '-9999px';\r\n            textArea.value = gridValue;\r\n\r\n            // Ajouter le textarea au document\r\n            document.body.appendChild(textArea);\r\n\r\n            // Sélectionner le texte\r\n            textArea.select();\r\n            textArea.setSelectionRange(0, textArea.value.length); // Pour les appareils mobiles\r\n\r\n            navigator.clipboard.writeText(gridValue)\r\n                .then(() => {\r\n                    alert('Le texte a été copié dans le presse-papier.');\r\n                })\r\n                .finally(() => {\r\n                    document.body.removeChild(textArea);\r\n                });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION PAS A PAS\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône d'étape en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction calcule la prochaine génération de la grille\r\n     * en appelant la méthode `calculateNextGeneration` de l'application.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeStepIcon() {\r\n        HTML.stepPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().calculateNextGeneration();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de saut en ajoutant un gestionnaire d'événements aux boutons de saut. Lorsqu'un\r\n     * bouton de saut est cliqué, la fonction met à jour les classes CSS des boutons pour indiquer la\r\n     * sélection, définit la valeur de saut dans l'application, ferme immédiatement la div des boutons\r\n     * de saut et met à jour l'état du bouton de démarrage.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de saut\r\n     * avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeJumpIcon() {\r\n        this.displayDivButtons(HTML.jumpDiv, HTML.jumpPrincipalButton, HTML.jumpParent);\r\n\r\n        // Gèrer le clic sur les boutons du saut\r\n        HTML.jumpButtons.forEach(jumpButton => {\r\n            jumpButton.addEventListener('click', () => {\r\n                // Mettre à jour les classes des boutons pour indiquer la sélection\r\n                HTML.jumpButtons.forEach(button => button.classList.remove('bg-success', 'text-light'));\r\n                jumpButton.classList.add('bg-success', 'text-light');\r\n\r\n                // Mettre à jour la vitesse dans app\r\n                this.getApp().setStep(jumpButton.dataset.jump);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.jumpDiv.style.display = 'none';\r\n\r\n                // Apeller updateStartButton pour mettre à jour l'état\r\n                this.updateStartButton(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION ANIMATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de démarrage en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction met à jour l'état du bouton de\r\n     * démarrage sans forcer l'arrêt de l'animation.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeStartIcon() {\r\n        HTML.startPrincipalButton.addEventListener('click', () => {\r\n            this.updateStartButton(false);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de rapidité en ajoutant un gestionnaire d'événements aux boutons de rapidité.\r\n     * Lorsqu'un bouton de rapidité est cliqué, la fonction met à jour les classes CSS des boutons pour\r\n     * indiquer la sélection, définit la valeur de rapidité dans l'application, ferme immédiatement la\r\n     * div des boutons de rapidité et met à jour l'état du bouton de démarrage.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * rapidité avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeRapidityIcon() {\r\n        this.displayDivButtons(HTML.rapidityDiv, HTML.rapidityPrincipalButton, HTML.rapidityParent);\r\n\r\n        // Gèrer le clic sur les boutons de rapidité\r\n        HTML.rapidityButtons.forEach(rapidityButton => {\r\n            rapidityButton.addEventListener('click', () => {\r\n                // Mettre à jour les classes des boutons pour indiquer la sélection\r\n                HTML.rapidityButtons.forEach(button => button.classList.remove('bg-success', 'text-light'));\r\n                rapidityButton.classList.add('bg-success', 'text-light');\r\n\r\n                // Mettre à jour la vitesse dans app\r\n                this.getApp().setRapidity(rapidityButton.dataset.rapidity);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.rapidityDiv.style.display = 'none';\r\n\r\n                // Apeller updateStartButton pour mettre à jour l'état\r\n                this.updateStartButton(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION COULEUR ET DESSIN\r\n     ******************************************/\r\n    /**\r\n     * Initialise l'icône de couleur en ajoutant un gestionnaire d'événements aux boutons de couleur.\r\n     * Lorsqu'un bouton de couleur est cliqué, la fonction met à jour la classe CSS du bouton principal\r\n     * de couleur, définit la valeur d'ajout dans l'application, ferme immédiatement la div des boutons\r\n     * de couleur et met à jour l'affichage des icônes de couleur et de mur en fonction de la couleur\r\n     * sélectionnée.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * couleur avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeColorIcon() {\r\n        this.displayDivButtons(HTML.colorDiv, HTML.colorPrincipalButton, HTML.colorParent);\r\n\r\n        // Gèrer le clic sur les boutons de couleur\r\n        HTML.colorButtons.forEach(colorButton => {\r\n            colorButton.addEventListener('click', () => {\r\n\r\n                HTML.colorPrincipalButton.classList.remove('blue', 'green', 'yellow', 'red');\r\n                let className = colorButton.dataset.color;\r\n                this.getApp().setValueAdd(parseInt(colorButton.dataset.value));\r\n\r\n                HTML.colorPrincipalButton.classList.add(className);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.colorDiv.style.display = 'none';\r\n\r\n                const isWall = colorButton.dataset.color === 'wall';\r\n                HTML.colorIcon.style.display = isWall ? 'none' : 'block';\r\n                HTML.wallIcon.style.display = isWall ? 'block' : 'none';\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de dessin en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction met à jour l'état du bouton de démarrage en\r\n     * forçant l'arrêt de l'animation, puis appelle la méthode `updateDrawButton` pour mettre à\r\n     * jour l'état du mode de dessin.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDrawIcon() {\r\n        HTML.drawPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n            this.updateDrawButton();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CORB, GRILLE, BORD, HIST\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de corbeille en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction nettoie la grille en appelant\r\n     * la méthode `cleanGrid` de l'application.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeTrashIcon() {\r\n        HTML.trashPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().cleanGrid();\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de grille en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction bascule l'état de l'affichage des lignes de la\r\n     * grille dans l'application en appelant les méthodes `setLines` et `getLines`. Si les lignes\r\n     * sont désactivées, elle efface le canvas en appelant `clearCanvas`.\r\n     * Enfin, elle redessine la grille en appelant `drawGrid`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeGridIcon() {\r\n        HTML.gridPrincipalButton.addEventListener('click', () => {\r\n            HTML.gridPrincipalButton.classList.toggle('active');\r\n            this.getApp().setLines(!this.getApp().getLines());\r\n            if (!this.getApp().getLines()) this.getApp().getBoardCanvas().clearCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de bordure en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction bascule l'état de l'affichage de la bordure du\r\n     * canvas dans l'application en appelant les méthodes `setBorder` et `getBorder`. Elle ajoute\r\n     * ou supprime également la classe CSS \"canvas-border\" sur le canvas.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeBordureIcon() {\r\n        HTML.borderPrincipalButton.addEventListener('click', () => {\r\n            HTML.borderPrincipalButton.classList.toggle('active');\r\n\r\n            this.getApp().setBorder(!this.getApp().getBorder());\r\n            $('canvas').classList.toggle('canvas-border');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône d'historique en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction bascule l'état de l'historique\r\n     * dans l'application en appelant les méthodes `setHistory` et `getHistory`. Si l'historique\r\n     * est désactivé, elle efface le canvas en appelant `clearCanvas`.\r\n     * Enfin, elle redessine la grille en appelant `drawGrid`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeHistoryIcon() {\r\n        HTML.historyPrincipalButton.addEventListener('click', () => {\r\n            HTML.historyPrincipalButton.classList.toggle('active');\r\n            this.getApp().setHistory(!this.getApp().getHistory());\r\n            if (!this.getApp().getHistory()) {\r\n                this.getApp().getBoardCanvas().clearCanvas();\r\n            }\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION DEPLACEMENT\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise les boutons de déplacement en ajoutant un gestionnaire d'événements aux boutons\r\n     * de déplacement. Lorsqu'un bouton de déplacement est cliqué, la fonction appelle la méthode\r\n     * `updateArrows` avec la direction correspondante.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * déplacement avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeArrowsButton() {\r\n        this.displayDivButtons(HTML.moveDiv, HTML.movePrincipalButton, HTML.moveParent);\r\n\r\n        HTML.moveButtons.forEach(moveButton => {\r\n            moveButton.addEventListener('click', () => {\r\n                this.updateArrows(moveButton.dataset.direction);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour la position de la grille dans une direction donnée en appelant la méthode\r\n     * correspondante de la grille, puis redessine la grille.\r\n     *\r\n     * @param {string} direction - La direction dans laquelle déplacer la grille ('Up', 'Down',\r\n     * 'Left' ou 'Right').\r\n     * @returns {void}\r\n     */\r\n    updateArrows(direction) {\r\n        const buttonName = direction.charAt(0).toUpperCase() + direction.slice(1);\r\n        this.getApp().getBoard()[`move${buttonName}`]();\r\n        this.getApp().getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION ZOOM\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le bouton de zoom en ajoutant un gestionnaire d'événements aux boutons de zoom.\r\n     * Lorsqu'un bouton de zoom est cliqué, la fonction appelle la méthode `updateZoom` avec la\r\n     * valeur de zoom correspondante.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * zoom avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeZoomButton() {\r\n        this.displayDivButtons(HTML.zoomDiv, HTML.zoomPrincipalButton, HTML.zoomParent);\r\n\r\n        HTML.zoomButtons.forEach(zoomButton => {\r\n            zoomButton.addEventListener('click', () => {\r\n                this.updateZoom(zoomButton.dataset.value)\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour le zoom de la grille en appelant la méthode correspondante de l'application.\r\n     *\r\n     * @param {string} zoom - La valeur de zoom à appliquer ('in' ou 'out').\r\n     * @returns {void}\r\n     */\r\n    updateZoom(zoom) {\r\n        const buttonName = zoom.charAt(0).toUpperCase() + zoom.slice(1)\r\n        this.getApp()[`setCellSizeZoom${buttonName}`]();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION REGLES\r\n     ******************************************/\r\n\r\n    initializeDefineRulesButton() {\r\n        HTML.defineRulesPrincipalButton.addEventListener('click', () => {\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializeDefineRulesModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de définition des règles en ajoutant un gestionnaire d'événements au\r\n     * bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction récupère les cases à cocher\r\n     * cochées pour les règles de naissance et de survie, les convertit en ensembles de nombres\r\n     * et les définit dans l'application en utilisant les méthodes `setBirth` et `setSurvival`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDefineRulesModal() {\r\n        HTML.applyDefineRulesButton.addEventListener('click', () => {\r\n            this.getApp().setBirth(new Set(Array.from(HTML.birthDefineRulesCheckboxes)\r\n                .filter(checkbox => checkbox.checked)\r\n                .map(checkbox => parseInt(checkbox.value))));\r\n            this.getApp().setSurvival(new Set(Array.from(HTML.survivalDefineRulesCheckboxes)\r\n                .filter(checkbox => checkbox.checked)\r\n                .map(checkbox => parseInt(checkbox.value))));\r\n        });\r\n    }\r\n\r\n    initializePredefineRulesButton() {\r\n        HTML.predefineRulesPrincipalButton.addEventListener('click', () => {\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializePredefineRulesModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal des règles prédéfinies en ajoutant un gestionnaire d'événements au\r\n     * bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction récupère les règles sélection-\r\n     * nées dans le select, les convertit en ensembles de nombres pour les règles de naissance et\r\n     * de survie, vérifie la validité des règles entrées et les définit dans l'application en\r\n     * utilisant les méthodes `setBirth` et `setSurvival`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializePredefineRulesModal() {\r\n        HTML.applyPredefineRulesButton.addEventListener('click', () => {\r\n            this.getApp().verifyInputRules();\r\n            const [births, survivals] = HTML.predefineRulesSelect.value\r\n                .split('/')\r\n                .map(valeurs => new Set(valeurs.split('').map(Number)));\r\n            this.getApp().setBirth(births);\r\n            this.getApp().setSurvival(survivals);\r\n            this.getApp().verifyInputRules();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CLAVIER\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise les gestionnaires d'événements clavier pour le zoom et le déplacement de la\r\n     * grille.\r\n     *\r\n     * Lorsque les touches Ctrl++ ou Ctrl+- sont enfoncées, la fonction appelle la méthode\r\n     * `updateZoom` avec la valeur de zoom correspondante.\r\n     *\r\n     * Lorsque les touches fléchées sont enfoncées, la fonction appelle la méthode `updateArrows`\r\n     * avec la direction correspondante.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeKeyboard() {\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && ['+', '-'].includes(event.key)) {\r\n                event.preventDefault();\r\n                this.updateZoom(event.key === '+' ? 'In' : 'Out')\r\n            }\r\n\r\n            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n                event.preventDefault();\r\n                this.updateArrows(event.key.slice(5));\r\n            }\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION DOCUMENTATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le bouton de basculement entre la fenêtre du jeu et la fenêtre de documentation.\r\n     *\r\n     * Lorsque le bouton est cliqué, la fonction bascule les classes CSS des fenêtres pour les\r\n     * afficher ou les masquer, et met à jour l'icône du bouton en fonction de l'état actuel.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDocButton() {\r\n        HTML.toggleDocButton.addEventListener('click', function () {\r\n            if (HTML.gameWindow.classList.contains('desactivate')) {\r\n                HTML.gameWindow.classList.remove('desactivate');\r\n                HTML.docWindow.classList.add('desactivate')\r\n                HTML.toggleDocIcon.className = 'bi bi-question-circle-fill';\r\n            } else {\r\n                HTML.gameWindow.classList.add('desactivate');\r\n                HTML.docWindow.classList.remove('desactivate')\r\n                HTML.toggleDocIcon.className = 'bi bi-controller';\r\n            }\r\n        });\r\n    }\r\n}","import {$, $All} from './utils.js';\r\n\r\n\r\nexport class HTML {\r\n\r\n    // Simulation\r\n    static simulationPrincipalButton = $('#simulationPrincipalButton');\r\n\r\n    // Configure modal\r\n    static hasardConfigureCheckbox = $('#hasardConfigureCheckbox');\r\n    static rowsConfigureInput = $('#rowsConfigureInput');\r\n    static columnsConfigureInput = $('#columnsConfigureInput');\r\n    static cellSizeConfigureInput = $('#cellSizeConfigureInput');\r\n    static applyConfigureButton = $('#applyConfigureButton');\r\n\r\n    // Random Modal\r\n    static weightRandomInput0 = $('#weightRandomInput0');\r\n    static weightFullRandomInputs = $All('#weightRandomInputs .weight');\r\n    static applyRandombutton = $('#applyRandombutton');\r\n    static weightRandomSpan0 = $('#weightRandomSpan0');\r\n    static weightRandomSpans = [\r\n        $('#weightRandomSpan1'),\r\n        $('#weightRandomSpan2'),\r\n        $('#weightRandomSpan3'),\r\n        $('#weightRandomSpan4')\r\n    ];\r\n\r\n    // Save Modal\r\n    static savePrincipalButton = $('#savePrincipalButton');\r\n    static nameSaveInput = $('#nameSaveInput');\r\n    static applySaveButton = $('#applySaveButton');\r\n\r\n    // Load Modal\r\n    static loadPrincipalButton = $('#loadPrincipalButton');\r\n    static configLoadSelect = $('#configLoadSelect');\r\n    static applyLoadButton = $('#applyLoadButton');\r\n\r\n    // Grid Enter modal\r\n    static arrayGridEnterInput = $('#arrayGridEnterInput');\r\n    static applyGridEnterButton = $('#applyGridEnterButton');\r\n    static errorGridEnterP = $('#errorGridEnterP');\r\n\r\n    // Doc\r\n    static gameWindow = $('#gameWindow');\r\n    static docWindow = $('#docWindow');\r\n    static toggleDocIcon = $('#toggleDocIcon');\r\n    static toggleDocButton = $('#toggleDocButton');\r\n\r\n    // Copy\r\n    static copyPrincipalButton = $('#copyPrincipalButton');\r\n\r\n    // Step\r\n    static stepPrincipalButton = $('#stepPrincipalButton');\r\n\r\n    // Jump\r\n    static jumpPrincipalButton = $('#jumpPrincipalButton');\r\n    static jumpDiv = $('#jumpButtons');\r\n    static jumpButtons = $All('#jumpButtons button');\r\n    static jumpParent = $('#jumpParent');\r\n\r\n    // Start\r\n    static startPrincipalButton = $('#startPrincipalButton');\r\n\r\n    // Rapidity\r\n    static rapidityPrincipalButton = $('#rapidityPrincipalButton');\r\n    static rapidityDiv = $('#rapidityButtons');\r\n    static rapidityButtons = $All('#rapidityButtons button');\r\n    static rapidityParent = $('#rapidityParent');\r\n\r\n    // Trash\r\n    static trashPrincipalButton = $('#trashPrincipalButton');\r\n\r\n    // Grid\r\n    static gridPrincipalButton = $('#gridPrincipalButton');\r\n\r\n    // Border\r\n    static borderPrincipalButton = $('#borderPrincipalButton');\r\n\r\n    // Draw\r\n    static drawPrincipalButton = $('#drawPrincipalButton');\r\n\r\n    // History\r\n    static historyPrincipalButton = $('#historyPrincipalButton');\r\n\r\n    // Color\r\n    static colorIcon = $('#colorIcon');\r\n    static wallIcon = $('#wallIcon');\r\n    static colorPrincipalButton = $('#colorPrincipalButton');\r\n    static colorDiv = $('#colorButtons');\r\n    static colorButtons = $All('#colorButtons button');\r\n    static colorParent = $('#colorParent');\r\n\r\n    // Move\r\n    static movePrincipalButton = $('#movePrincipalButton');\r\n    static moveDiv = $('#moveButtons');\r\n    static moveButtons = $All('#moveButtons button');\r\n    static moveParent = $('#moveParent');\r\n\r\n    // Zoom\r\n    static zoomPrincipalButton = $('#zoomPrincipalButton');\r\n    static zoomDiv = $('#zoomButtons');\r\n    static zoomButtons = $All('#zoomButtons button');\r\n    static zoomParent = $('#zoomParent');\r\n\r\n    // Define button\r\n    static defineRulesPrincipalButton = $(\"#defineRulesPrincipalButton\");\r\n\r\n    // Define Rules modal\r\n    static birthDefineRulesCheckboxes = $All('#birthDefineRulesCheckboxes input');\r\n    static survivalDefineRulesCheckboxes = $All('#survivalDefineRulesCheckboxes input');\r\n    static applyDefineRulesButton = $('#applyDefineRulesButton');\r\n\r\n    // Predefine button\r\n    static predefineRulesPrincipalButton = $(\"#predefineRulesPrincipalButton\");\r\n\r\n    // Predefine modal\r\n    static predefineRulesSelect = $('#predefineRulesSelect');\r\n    static applyPredefineRulesButton = $('#applyPredefineRulesButton');\r\n    static cancelPredefineRulesButton = $('#cancelPredefineRulesButton');\r\n\r\n    // Canvas\r\n    static canvasContainer = $('#gameLife');\r\n    static canvas = $('#gameCanvas');\r\n\r\n    // Barre\r\n    static generation = $('#generation');\r\n    static livingCells = $('#livingCells');\r\n    static totalCells = $('#totalCells');\r\n}","import {EventHandler} from './EventHandler.js';\r\nimport {Board} from './Board.js';\r\nimport {BoardCanvas} from './BoardCanvas.js';\r\nimport {HTML} from './HTML.js';\r\n\r\nimport {$} from './utils.js';\r\nimport {Config} from './Config.js';\r\n\r\nclass Window {\r\n\r\n    #board;\r\n    #boardCanvas;\r\n    #rowCanvas;\r\n    #columnCanvas;\r\n    #cellSize;\r\n    #valueAdd;\r\n    #birth;\r\n    #survival;\r\n    #randomize;\r\n    #weights;\r\n    #border;\r\n    #history;\r\n    #lines;\r\n    #saves;\r\n    #rapidity;\r\n    #step;\r\n    #isPlaying;\r\n    #enableDraw;\r\n    #isDrawing;\r\n\r\n\r\n    getBoard() {\r\n        return this.#board;\r\n    }\r\n\r\n    setBoard(value) {\r\n        this.#board = value;\r\n    }\r\n\r\n    getBoardCanvas() {\r\n        return this.#boardCanvas;\r\n    }\r\n\r\n    setBoardCanvas(value) {\r\n        this.#boardCanvas = value;\r\n    }\r\n\r\n    getRowCanvas() {\r\n        return this.#rowCanvas;\r\n    }\r\n\r\n    setRowCanvas(value) {\r\n        this.#rowCanvas = value;\r\n    }\r\n\r\n    getColumnCanvas() {\r\n        return this.#columnCanvas;\r\n    }\r\n\r\n    setColumnCanvas(value) {\r\n        this.#columnCanvas = value;\r\n    }\r\n\r\n    getCellSize() {\r\n        return this.#cellSize;\r\n    }\r\n\r\n    setCellSize(value) {\r\n        this.#cellSize = value;\r\n    }\r\n\r\n    getValueAdd() {\r\n        return this.#valueAdd;\r\n    }\r\n\r\n    setValueAdd(value) {\r\n        this.#valueAdd = value;\r\n    }\r\n\r\n    getBirth() {\r\n        return this.#birth;\r\n    }\r\n\r\n    setBirth(value) {\r\n        this.#birth = value;\r\n    }\r\n\r\n    getSurvival() {\r\n        return this.#survival;\r\n    }\r\n\r\n    setSurvival(value) {\r\n        this.#survival = value;\r\n    }\r\n\r\n    getRandomize() {\r\n        return this.#randomize;\r\n    }\r\n\r\n    setRandomize(value) {\r\n        this.#randomize = value;\r\n    }\r\n\r\n    getWeights() {\r\n        return this.#weights;\r\n    }\r\n\r\n    setWeights(value) {\r\n        this.#weights = value;\r\n    }\r\n\r\n    getBorder() {\r\n        return this.#border;\r\n    }\r\n\r\n    setBorder(value) {\r\n        this.#border = value;\r\n    }\r\n\r\n    getHistory() {\r\n        return this.#history;\r\n    }\r\n\r\n    setHistory(value) {\r\n        this.#history = value;\r\n    }\r\n\r\n    getLines() {\r\n        return this.#lines;\r\n    }\r\n\r\n    setLines(value) {\r\n        this.#lines = value;\r\n    }\r\n\r\n    getSaves() {\r\n        return this.#saves;\r\n    }\r\n\r\n    setSaves(key, value) {\r\n        this.#saves[key] = value;\r\n    }\r\n\r\n    getRapidity() {\r\n        return this.#rapidity;\r\n    }\r\n\r\n    setRapidity(value) {\r\n        this.#rapidity = value;\r\n    }\r\n\r\n    getStep() {\r\n        return this.#step;\r\n    }\r\n\r\n    setStep(value) {\r\n        this.#step = value;\r\n    }\r\n\r\n    getIsPlaying() {\r\n        return this.#isPlaying;\r\n    }\r\n\r\n    setIsPlaying(value) {\r\n        this.#isPlaying = value;\r\n    }\r\n\r\n    getEnableDraw() {\r\n        return this.#enableDraw;\r\n    }\r\n\r\n    setEnableDraw(value) {\r\n        this.#enableDraw = value;\r\n    }\r\n\r\n    getIsDrawing() {\r\n        return this.#isDrawing;\r\n    }\r\n\r\n    setIsDrawing(value) {\r\n        this.#isDrawing = value;\r\n    }\r\n\r\n\r\n    constructor() {\r\n        this.#board = undefined;\r\n        this.#boardCanvas = undefined;\r\n        this.#rowCanvas = 20;                 // Le nombre de lignes par défaut pour un canvas\r\n        this.#columnCanvas = 20;              // Le nombre de colonnes par défault pour un canvas\r\n        this.#cellSize = 12;                  // La taille de cellule par défaut\r\n        this.#valueAdd = 1;                   // La cellule d'ajout par défaut est la 1\r\n        this.#birth = new Set([2, 3]); // Le nombre de cellules requises pour naitre\r\n        this.#survival = new Set([3]); // Le nombre de cellules reqyuse\r\n        this.#randomize = false;              // La création randomisée n'est pas activée.\r\n        this.#weights = [.9, .1, 0, 0, 0];    // Les poids par défaut dans la création randomisée\r\n        this.#border = false;                 // Les bordures du canvas ne sont pas activées.\r\n        this.#history = false;                // L'historique n'est pas activé\r\n        this.#lines = false;                  // Les lignes ne sont pas activées.\r\n        this.#saves = {};                     // Ensemble des sauvegardes\r\n        this.#rapidity = 5;                      // Rapidité d'animation\r\n        this.#step = 1;                       // Nombre de génération entre pas\r\n        this.#isPlaying = false;              // L'animation n'est pas activée\r\n        this.#enableDraw = false;             // Le dessin n'est pas activé\r\n        this.#isDrawing = false;              // ON n'est pas en train de dessiner\r\n\r\n        this.initialize();\r\n    }\r\n\r\n    verifyInputRules() {\r\n        for (let i = 0; i < 9; i++) {\r\n            const birthCheckbox = $(`#birthRule${i}`);\r\n            birthCheckbox.checked = this.getBirth().has(parseInt(birthCheckbox.value));\r\n\r\n            const survivalCheckbox = $(`#survivalRule${i}`);\r\n            survivalCheckbox.checked = this.getSurvival().has(parseInt(survivalCheckbox.value));\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.verifyInputRules();\r\n        new EventHandler(this);\r\n        this.setBoard(new Board(this));\r\n        this.resetCanvas();\r\n        this.setBoardCanvas(new BoardCanvas(this));\r\n        this.getBoard().initPlaneur();\r\n        this.getBoardCanvas().drawGrid();\r\n        this.toggleDrawingEvents();\r\n    }\r\n\r\n    resetCanvas() {\r\n        // Supprimer de l'ancien canvas\r\n        const existingCanvases = $('canvas');\r\n        const parentCanvas = existingCanvases.parentNode;\r\n        parentCanvas.removeChild(existingCanvases);\r\n\r\n        // Créer un nouveau canvas\r\n        let canvas = document.createElement('canvas');\r\n        parentCanvas.appendChild(canvas);\r\n    }\r\n\r\n    /**\r\n     * Formate la grille en fonction du nombre de lignes, de colonnes et de la taille des cellules.\r\n     *\r\n     * @param {number} row - Le nombre de lignes de la grille.\r\n     * @param {number} col - Le nombre de colonnes de la grille.\r\n     * @param {number} cellSize - La taille initiale des cellules.\r\n     * @returns {void}\r\n     */\r\n    formatGrid(row, col, cellSize) {\r\n        const canvasSize = HTML.canvasContainer.offsetWidth - 20\r\n\r\n        // Mise à jour de la taille des cellules en fonction de la largeur.   \r\n        const currentMaxCellSize = Math.min(parseInt(canvasSize / col), Config.MAX_CELL_SIZE, cellSize);\r\n\r\n        this.setRowCanvas(row);\r\n        this.setColumnCanvas(col);\r\n        this.setCellSize(currentMaxCellSize);\r\n    }\r\n\r\n    cleanGrid() {\r\n        this.clearGrid();\r\n        this.stopAnimation();\r\n        this.updateBottomNav(true);\r\n    }\r\n\r\n    calculateNextGeneration(isAnimating = false) {\r\n        const numberGeneration = isAnimating ? 1 : this.getStep();\r\n        for (let i = 0; i < numberGeneration; i++) {\r\n            this.getBoard().getNextGeneration();\r\n            this.getBoard().updateHistoryGrid();\r\n            this.getBoard().countAliveCells();\r\n            this.updateBottomNav();\r\n        }\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    updateBottomNav(reset = false) {\r\n        HTML.generation.textContent = reset ? \"0\" : this.getBoard().getGeneration();\r\n        HTML.livingCells.textContent = reset ? \"0\" : this.getBoard().getIsAlive();\r\n        HTML.totalCells.textContent = reset ? \"0\" : this.getBoard().getTotalAlive();\r\n    }\r\n\r\n    setCellSizeZoomIn() {\r\n        let zoom = this.getCellSize() + 1;\r\n        if (zoom > Config.MAX_CELL_SIZE) zoom = Config.MAX_CELL_SIZE;\r\n\r\n        const canvasSize = HTML.canvasContainer.offsetWidth - 20\r\n\r\n        // Mise à jour de la taille des cellules en fonction de la largeur.   \r\n        const currentMaxCellSize = Math.min(\r\n            Math.floor(canvasSize / this.getColumnCanvas()),\r\n            zoom)\r\n        this.setCellSize(currentMaxCellSize);\r\n        this.getBoardCanvas().setupCanvas();\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    setCellSizeZoomOut() {\r\n        let zoom = this.getCellSize() - 1;\r\n        if (zoom < Config.MIN_CELL_SIZE) zoom = Config.MIN_CELL_SIZE;\r\n        this.setCellSize(zoom);\r\n        this.getBoardCanvas().setupCanvas();\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    toggleAnimation() {\r\n        this.setIsPlaying(!this.getIsPlaying());\r\n        if (this.getIsPlaying()) this.startAnimation(this.getRapidity());\r\n        else this.stopAnimation();\r\n    }\r\n\r\n    startAnimation() {\r\n        this.intervalId = setInterval(() => {\r\n            this.calculateNextGeneration(true);\r\n        }, 1000 / this.getRapidity());\r\n    }\r\n\r\n    stopAnimation() {\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n    }\r\n\r\n    toggleDrawingEvents() {\r\n        if (this.getEnableDraw()) this.addDrawingEvent();\r\n        else this.removeDrawingEvent();\r\n    }\r\n\r\n    addDrawingEvent() {\r\n        this.getBoardCanvas().getCanvas().addEventListener('mousedown', this.startDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().addEventListener('mouseup', this.stopDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().addEventListener('mousemove', this.drawIfDrawing.bind(this));\r\n    }\r\n\r\n    removeDrawingEvent() {\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mousedown', this.startDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mouseup', this.stopDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mousemove', this.drawIfDrawing.bind(this));\r\n    }\r\n\r\n    startDrawing(event) {\r\n        if (this.getEnableDraw()) {\r\n            this.setIsDrawing(true);\r\n            this.draw(event);\r\n        }\r\n    }\r\n\r\n    stopDrawing() {\r\n        this.setIsDrawing(false);\r\n    }\r\n\r\n    drawIfDrawing(event) {\r\n        if (this.getIsDrawing()) this.draw(event);\r\n    }\r\n\r\n    draw(event) {\r\n        const i = Math.floor(event.offsetX / this.getCellSize());\r\n        const j = Math.floor(event.offsetY / this.getCellSize());\r\n        if (\r\n            j >= 0 &&\r\n            j < this.getBoard().getGridEnableDraw().length &&\r\n            i >= 0 &&\r\n            i < this.getBoard().getGridEnableDraw()[j].length\r\n        ) {\r\n            this.writeInGrid(j, i);\r\n            this.getBoardCanvas().drawGrid();\r\n        }\r\n    }\r\n\r\n    writeInGrid(j, i) {\r\n        const currentValue = this.getBoard().getGridValue(j, i);\r\n        let newValue;\r\n\r\n        if (currentValue === this.getValueAdd()) newValue = 0;\r\n        else newValue = this.getValueAdd();\r\n\r\n        this.getBoard().setGridValue(j, i, newValue);\r\n        if (newValue === 0) this.getBoard().setGridHistoryValue(j, i, 0);\r\n    }\r\n\r\n    clearGrid() {\r\n        for (let j = 0; j < this.getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getColumnCanvas(); i++) {\r\n                this.getBoard().setGridValue(j, i, 0);\r\n                this.getBoard().setGridHistoryValue(j, i, 0);\r\n            }\r\n        }\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n}\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    new Window();\r\n\r\n});\r\n\r\n","export function $(selector) {\r\n    return document.querySelector(selector);\r\n}\r\n\r\nexport function $All(selector) {\r\n    return document.querySelectorAll(selector);\r\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\r\n.canvas-container {\r\n    overflow: auto;\r\n    position: relative;\r\n    background-color: #171718;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    min-width: 200px;\r\n    min-height: 200px;\r\n}\r\n\r\n.canvas-container canvas {\r\n    display: block;\r\n    margin: auto;\r\n}\r\n\r\n.canvas-border {\r\n    border: solid 2px wheat;\r\n}\r\n\r\n.icon-bar {\r\n    text-align: center;\r\n}\r\n\r\n.icon-bar .btn {\r\n    margin: 0 2px;\r\n}\r\n\r\n.status-bar {\r\n    padding: 10px;\r\n    background-color: #f8f9fa;\r\n    border-top: 1px solid #dee2e6;\r\n    text-align: center;\r\n}\r\n\r\n.boolean-btn.active {\r\n    background-color: #6c757d;\r\n    color: white;\r\n}\r\n\r\n#gameLife {\r\n    align-self: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n\r\n    --sizeInputCanvasMin: 12px;\r\n    --sizeInputCanvasMax: 25px;\r\n    --sizeInputCanvasMargin: 5px;\r\n}\r\n\r\ncanvas {\r\n    border: solid 1px rgba(255, 255, 255, 0.436);\r\n}\r\n\r\ncanvas.border {\r\n    border: solid 3px rgba(255, 255, 255, 0.436);\r\n}\r\n\r\n#colorButtons,\r\n#rapidityButtons,\r\n#stepButtons,\r\n#moveButtons,\r\n#zoomButtons,\r\n#jumpButtons {\r\n    display: none;\r\n    z-index: 3;\r\n    margin-top: 5px;\r\n    background: #fff;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n#rapidityButtons {\r\n    left: -5px;\r\n}\r\n\r\n#stepButtons {\r\n    left: -5px;\r\n}\r\n\r\n#jumpButtons {\r\n    left: -5px;\r\n}\r\n\r\n.blue {\r\n    background-color: hsl(200, 80%, 67%);\r\n}\r\n\r\n.red {\r\n    background-color: rgb(247, 101, 101);\r\n}\r\n\r\n.green {\r\n    background-color: rgb(85, 248, 85);\r\n}\r\n\r\n.yellow {\r\n    background-color: rgb(255, 255, 94);\r\n}\r\n\r\n.active {\r\n    display: flex;\r\n}\r\n\r\n\r\n#arrayGridEnterInput {\r\n    overflow-x: auto;\r\n    overflow-y: auto;\r\n    height: 200px;\r\n    max-height: 200px;\r\n    line-height: 0.8;\r\n}\r\n\r\n#arrayGridEnterInput.valid {\r\n    background-color: #d4edda;\r\n    /* vert pâle */\r\n}\r\n\r\n#arrayGridEnterInput.invalid {\r\n    background-color: #f8d7da;\r\n    /* rouge pâle */\r\n}\r\n\r\n#gridOutput {\r\n    line-height: 1.0;\r\n}\r\n\r\n.fixed-bottom-right {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    z-index: 9999;\r\n}\r\n\r\n.toggle-icon {\r\n    font-size: 1.5rem;\r\n    /* padding: 10px; */\r\n    border-radius: 50%;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.toggle-icon:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.desactivate {\r\n    display: none;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .responsive-container {\r\n        height: auto;\r\n        padding: 5px;\r\n    }\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/style.css\"],\"names\":[],\"mappings\":\";AACA;IACI,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,yBAAyB;IACzB,WAAW;IACX,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,mBAAmB;IACnB,aAAa;;IAEb,0BAA0B;IAC1B,0BAA0B;IAC1B,4BAA4B;AAChC;;AAEA;IACI,4CAA4C;AAChD;;AAEA;IACI,4CAA4C;AAChD;;AAEA;;;;;;IAMI,aAAa;IACb,UAAU;IACV,eAAe;IACf,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,aAAa;AACjB;;;AAGA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,iCAAiC;AACrC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI;QACI,YAAY;QACZ,YAAY;IAChB;AACJ\",\"sourcesContent\":[\"\\r\\n.canvas-container {\\r\\n    overflow: auto;\\r\\n    position: relative;\\r\\n    background-color: #171718;\\r\\n    border: 1px solid #dee2e6;\\r\\n    width: 100%;\\r\\n    min-width: 200px;\\r\\n    min-height: 200px;\\r\\n}\\r\\n\\r\\n.canvas-container canvas {\\r\\n    display: block;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.canvas-border {\\r\\n    border: solid 2px wheat;\\r\\n}\\r\\n\\r\\n.icon-bar {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.icon-bar .btn {\\r\\n    margin: 0 2px;\\r\\n}\\r\\n\\r\\n.status-bar {\\r\\n    padding: 10px;\\r\\n    background-color: #f8f9fa;\\r\\n    border-top: 1px solid #dee2e6;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.boolean-btn.active {\\r\\n    background-color: #6c757d;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#gameLife {\\r\\n    align-self: center;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    justify-items: center;\\r\\n    align-items: center;\\r\\n    padding: 10px;\\r\\n\\r\\n    --sizeInputCanvasMin: 12px;\\r\\n    --sizeInputCanvasMax: 25px;\\r\\n    --sizeInputCanvasMargin: 5px;\\r\\n}\\r\\n\\r\\ncanvas {\\r\\n    border: solid 1px rgba(255, 255, 255, 0.436);\\r\\n}\\r\\n\\r\\ncanvas.border {\\r\\n    border: solid 3px rgba(255, 255, 255, 0.436);\\r\\n}\\r\\n\\r\\n#colorButtons,\\r\\n#rapidityButtons,\\r\\n#stepButtons,\\r\\n#moveButtons,\\r\\n#zoomButtons,\\r\\n#jumpButtons {\\r\\n    display: none;\\r\\n    z-index: 3;\\r\\n    margin-top: 5px;\\r\\n    background: #fff;\\r\\n    border: 1px solid #ccc;\\r\\n}\\r\\n\\r\\n#rapidityButtons {\\r\\n    left: -5px;\\r\\n}\\r\\n\\r\\n#stepButtons {\\r\\n    left: -5px;\\r\\n}\\r\\n\\r\\n#jumpButtons {\\r\\n    left: -5px;\\r\\n}\\r\\n\\r\\n.blue {\\r\\n    background-color: hsl(200, 80%, 67%);\\r\\n}\\r\\n\\r\\n.red {\\r\\n    background-color: rgb(247, 101, 101);\\r\\n}\\r\\n\\r\\n.green {\\r\\n    background-color: rgb(85, 248, 85);\\r\\n}\\r\\n\\r\\n.yellow {\\r\\n    background-color: rgb(255, 255, 94);\\r\\n}\\r\\n\\r\\n.active {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n\\r\\n#arrayGridEnterInput {\\r\\n    overflow-x: auto;\\r\\n    overflow-y: auto;\\r\\n    height: 200px;\\r\\n    max-height: 200px;\\r\\n    line-height: 0.8;\\r\\n}\\r\\n\\r\\n#arrayGridEnterInput.valid {\\r\\n    background-color: #d4edda;\\r\\n    /* vert pâle */\\r\\n}\\r\\n\\r\\n#arrayGridEnterInput.invalid {\\r\\n    background-color: #f8d7da;\\r\\n    /* rouge pâle */\\r\\n}\\r\\n\\r\\n#gridOutput {\\r\\n    line-height: 1.0;\\r\\n}\\r\\n\\r\\n.fixed-bottom-right {\\r\\n    position: fixed;\\r\\n    bottom: 20px;\\r\\n    right: 20px;\\r\\n    z-index: 9999;\\r\\n}\\r\\n\\r\\n.toggle-icon {\\r\\n    font-size: 1.5rem;\\r\\n    /* padding: 10px; */\\r\\n    border-radius: 50%;\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: background-color 0.3s;\\r\\n}\\r\\n\\r\\n.toggle-icon:hover {\\r\\n    background-color: #0056b3;\\r\\n}\\r\\n\\r\\n.desactivate {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n@media (max-width: 600px) {\\r\\n    .responsive-container {\\r\\n        height: auto;\\r\\n        padding: 5px;\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;"],"names":["_app","WeakMap","_isAlive","_generation","_totalAlive","_grid","_gridHistory","_gridNumberNeighbors","_gridTypeNeighbors","_gridEnableDraw","Board","app","_classCallCheck","_classPrivateFieldInitSpec","_classPrivateFieldSet","this","createGrid","key","value","_classPrivateFieldGet","y","x","grid","setGrid","setGridHistory","Array","from","length","fill","Config","DEAD","setGridNumberNeighbors","setGridTypeNeighbors","setGridEnableDraw","_this","forEach","coord","setGridValue","random","Math","cumulativeProbability","i","getApp","getWeights","_this2","getRowCanvas","getColumnCanvas","getRandomCellState","_this3","pattern","startY","startX","_this4","state","arguments","undefined","ALIVE1","_ref","_ref2","_slicedToArray","dy","dx","setGeneration","getGeneration","calculateNeighbors","nextGrid","createNextGrid","updateHistoryGrid","j","aliveValuesSet","has","getGridValue","setGridHistoryValue","getGridHistoryValue","row","col","_this$countNeighbors2","countNeighbors","numberNeighbors","typeNeighbors","setGridNumberNeighborsValue","setGridTypeNeighborsValue","isAlive","setIsAlive","setTotalAlive","getTotalAlive","_this5","neighborsAccount","neighborsTotal","MIDDLES","direction","getBorder","_this5$applyBoundaryR2","applyBoundaryRules","isWithinGridBounds","currentValue","round","nextRow","getGridTypeNeighborsValue","getGridNumberNeighborsValue","nextCellValue","determineNextCellValue","push","getBirth","getSurvival","WALL","getGrid","slice","concat","_canvas","_ctx","BoardCanvas","document","querySelector","getContext","setupCanvas","getCanvas","width","getCellSize","height","setDimensionsCanvas","getCtx","fillStyle","canvasBgColor","fillRect","clearRect","clearCanvas","currentValueCell","getBoard","cellSize","notDeadValueSet","getColorFromIndex","getLines","drawLines","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","color","getHistory","_createClass","_defineProperty","name","Set","EventHandler","initialize","forceStop","playIcon","$","pauseIcon","isPlaying","style","display","HTML","startPrincipalButton","title","toggleAnimation","changedInput","total","weightFullRandomInputs","reduce","acc","input","parseFloat","totalZero","toFixed","weightRandomSpan0","textContent","weightRandomInput0","decreaseAmount","max","_step","rowLength","_iterator","_createForOfIteratorHelper","s","n","done","test","err","e","f","div","principalButton","parent","moveHideTimeout","toggleDiv","show","toggleVisibilityWithDelay","addEventListener","event","contains","relatedTarget","drawPrincipalButton","classList","toggle","setEnableDraw","getEnableDraw","toggleDrawingEvents","element","delay","timeoutId","clearTimeout","setTimeout","initializeSimulationIcon","initializeSaveButton","initializeLoadModal","initiatilizeEnterButton","initializeCopyIcon","initializeStepIcon","initializeJumpIcon","initializeStartIcon","initializeRapidityIcon","initializeColorIcon","initializeDrawIcon","initializeTrashIcon","initializeGridIcon","initializeBordureIcon","initializeHistoryIcon","initializeArrowsButton","initializeZoomButton","initializeDefineRulesButton","initializePredefineRulesButton","initializeDocButton","initializeKeyboard","simulationPrincipalButton","updateStartButton","initializeConfigurerModal","initializeWeightModal","validateInput","inputElement","minValue","maxValue","parseInt","isNaN","applyConfigureButton","rowsInput","rowsConfigureInput","MIN_COL","MAX_COL","columnsInput","columnsConfigureInput","cellSizeInput","cellSizeConfigureInput","MIN_CELL_SIZE","MAX_CELL_SIZE","cleanGrid","formatGrid","createGridRandom","initializeGrids","getBoardCanvas","drawGrid","index","weightRandomSpans","updateWeights","applyRandombutton","weights","weight","setWeights","map","Number","hasardConfigureCheckbox","checked","savePrincipalButton","stopAnimation","initializeSaveModal","_this6","applySaveButton","saveName","nameSaveInput","toLowerCase","trim","prompt","saveData","saveNames","JSON","parse","localStorage","getItem","saves","confirm","setItem","stringify","_this7","loadPrincipalButton","configLoadSelect","innerHTML","option","createElement","appendChild","applyLoadButton","selectedSave","savedGrid","initializeEnterModal","isValidatedGrid","_this8","arrayGridEnterInput","split","validateGrid","add","remove","errorGridEnterP","applyGridEnterButton","disabled","_this9","copyPrincipalButton","gridValue","join","textArea","position","opacity","left","top","body","select","setSelectionRange","navigator","clipboard","writeText","then","alert","removeChild","_this10","stepPrincipalButton","calculateNextGeneration","_this11","displayDivButtons","jumpDiv","jumpPrincipalButton","jumpParent","jumpButtons","jumpButton","button","setStep","dataset","jump","_this12","_this13","rapidityDiv","rapidityPrincipalButton","rapidityParent","rapidityButtons","rapidityButton","setRapidity","rapidity","_this14","colorDiv","colorPrincipalButton","colorParent","colorButtons","colorButton","className","setValueAdd","isWall","colorIcon","wallIcon","_this15","updateDrawButton","_this16","trashPrincipalButton","_this17","gridPrincipalButton","setLines","_this18","borderPrincipalButton","setBorder","_this19","historyPrincipalButton","setHistory","_this20","moveDiv","movePrincipalButton","moveParent","moveButtons","moveButton","updateArrows","buttonName","charAt","toUpperCase","_this21","zoomDiv","zoomPrincipalButton","zoomParent","zoomButtons","zoomButton","updateZoom","zoom","_this22","defineRulesPrincipalButton","initializeDefineRulesModal","_this23","applyDefineRulesButton","setBirth","birthDefineRulesCheckboxes","filter","checkbox","setSurvival","survivalDefineRulesCheckboxes","_this24","predefineRulesPrincipalButton","initializePredefineRulesModal","_this25","applyPredefineRulesButton","verifyInputRules","_HTML$predefineRulesS2","predefineRulesSelect","valeurs","births","survivals","_this26","ctrlKey","includes","preventDefault","toggleDocButton","gameWindow","docWindow","toggleDocIcon","$All","_board","_boardCanvas","_rowCanvas","_columnCanvas","_cellSize","_valueAdd","_birth","_survival","_randomize","_weights","_border","_history","_lines","_saves","_rapidity","_isPlaying","_enableDraw","_isDrawing","Window","birthCheckbox","survivalCheckbox","setBoard","resetCanvas","setBoardCanvas","initPlaneur","existingCanvases","parentCanvas","parentNode","canvas","canvasSize","canvasContainer","offsetWidth","currentMaxCellSize","min","setRowCanvas","setColumnCanvas","setCellSize","clearGrid","updateBottomNav","numberGeneration","getStep","getNextGeneration","countAliveCells","reset","generation","livingCells","getIsAlive","totalCells","floor","setIsPlaying","getIsPlaying","startAnimation","getRapidity","intervalId","setInterval","clearInterval","addDrawingEvent","removeDrawingEvent","startDrawing","bind","stopDrawing","drawIfDrawing","removeEventListener","setIsDrawing","draw","getIsDrawing","offsetX","offsetY","getGridEnableDraw","writeInGrid","newValue","getValueAdd","selector","querySelectorAll","___CSS_LOADER_EXPORT___","module","id","exports","cssWithMappingToString","list","toString","item","content","needLayer","modules","media","dedupe","supports","layer","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","data","sourceMapping","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","lastIdentifiers","newList","newLastIdentifiers","_i","_index","memo","target","styleTarget","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","attributes","styleElement","nonce","setAttribute","apply","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","nc"],"sourceRoot":""}