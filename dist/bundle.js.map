{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://game_of_life/./src/js/Board.js","webpack://game_of_life/./src/js/BoardCanvas.js","webpack://game_of_life/./src/js/Config.js","webpack://game_of_life/./src/js/EventHandler.js","webpack://game_of_life/./src/js/HTML.js","webpack://game_of_life/./src/js/PatternManager.js","webpack://game_of_life/./src/js/Window.js","webpack://game_of_life/./src/js/utils.js","webpack://game_of_life/webpack/bootstrap","webpack://game_of_life/webpack/runtime/define property getters","webpack://game_of_life/webpack/runtime/hasOwnProperty shorthand","webpack://game_of_life/webpack/runtime/make namespace object"],"sourcesContent":["import {Config} from './Config.js';\r\n\r\nexport class Board {\r\n    #app;\r\n    #isAlive;\r\n    #generation;\r\n    #totalAlive;\r\n\r\n    #grid;\r\n    #gridHistory;\r\n    #gridNumberNeighbors;\r\n    #gridTypeNeighbors;\r\n    #gridEnableDraw;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    getIsAlive() {\r\n        return this.#isAlive;\r\n    }\r\n\r\n    setIsAlive(value) {\r\n        this.#isAlive = value;\r\n    }\r\n\r\n    getGeneration() {\r\n        return this.#generation;\r\n    }\r\n\r\n    setGeneration(value) {\r\n        this.#generation = value;\r\n    }\r\n\r\n    getTotalAlive() {\r\n        return this.#totalAlive;\r\n    }\r\n\r\n    setTotalAlive(value) {\r\n        this.#totalAlive = value;\r\n    }\r\n\r\n    // Grille principale\r\n    getGrid() {\r\n        return this.#grid;\r\n    }\r\n\r\n    setGrid(value) {\r\n        this.#grid = value;\r\n    }\r\n\r\n    getGridValue(y, x) {\r\n        return this.#grid[y][x];\r\n    }\r\n\r\n    setGridValue(y, x, value) {\r\n        this.#grid[y][x] = value;\r\n    }\r\n\r\n    // Historique de la grille\r\n    getGridHistory() {\r\n        return this.#gridHistory;\r\n    }\r\n\r\n    setGridHistory(value) {\r\n        this.#gridHistory = value;\r\n    }\r\n\r\n    getGridHistoryValue(y, x) {\r\n        return this.#gridHistory[y][x];\r\n    }\r\n\r\n    setGridHistoryValue(y, x, value) {\r\n        this.#gridHistory[y][x] = value;\r\n    }\r\n\r\n    // Nombre de voisins dans la grille\r\n    getGridNumberNeighbors() {\r\n        return this.#gridNumberNeighbors;\r\n    }\r\n\r\n    setGridNumberNeighbors(value) {\r\n        this.#gridNumberNeighbors = value;\r\n    }\r\n\r\n    getGridNumberNeighborsValue(y, x) {\r\n        return this.#gridNumberNeighbors[y][x];\r\n    }\r\n\r\n    setGridNumberNeighborsValue(y, x, value) {\r\n        this.#gridNumberNeighbors[y][x] = value;\r\n    }\r\n\r\n    // Type de voisins dans la grille\r\n    getGridTypeNeighbors() {\r\n        return this.#gridTypeNeighbors;\r\n    }\r\n\r\n    setGridTypeNeighbors(value) {\r\n        this.#gridTypeNeighbors = value;\r\n    }\r\n\r\n    getGridTypeNeighborsValue(y, x) {\r\n        return this.#gridTypeNeighbors[y][x];\r\n    }\r\n\r\n    setGridTypeNeighborsValue(y, x, value) {\r\n        this.#gridTypeNeighbors[y][x] = value;\r\n    }\r\n\r\n    // Activation du dessin sur la grille\r\n    getGridEnableDraw() {\r\n        return this.#gridEnableDraw;\r\n    }\r\n\r\n    setGridEnableDraw(value) {\r\n        this.#gridEnableDraw = value;\r\n    }\r\n\r\n    getGridEnableDrawValue(y, x) {\r\n        return this.#gridEnableDraw[y][x];\r\n    }\r\n\r\n    setGridEnableDrawValue(y, x, value) {\r\n        this.#gridEnableDraw[y][x] = value;\r\n    }\r\n\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.#isAlive = 0;\r\n        this.#generation = 0;\r\n        this.#totalAlive = 0\r\n\r\n        this.#grid = this.createGrid();\r\n        this.#gridHistory = this.createGrid(false);\r\n        this.#gridNumberNeighbors = this.createGrid(false);\r\n        this.#gridTypeNeighbors = this.createGrid(false);\r\n        this.#gridEnableDraw = this.createGrid(false);\r\n    }\r\n\r\n    initializeGrids(grid) {\r\n        this.setGrid(grid);\r\n        this.setGridHistory(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridNumberNeighbors(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridTypeNeighbors(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)));\r\n        this.setGridEnableDraw(Array.from({length: grid.length}, () => Array(grid[0].length).fill(Config.DEAD)))\r\n    }\r\n\r\n    initPlaneur() {\r\n        const plane1 = [\r\n            [12, 5],\r\n            [12, 6],\r\n            [12, 7],\r\n            [13, 7],\r\n            [14, 6],\r\n        ];\r\n\r\n        const plane2 = [\r\n            [5, 12],\r\n            [5, 13],\r\n            [5, 14],\r\n            [6, 14],\r\n            [7, 13],\r\n        ];\r\n\r\n        plane1.forEach(coord => {\r\n            this.setGridValue(coord[0], coord[1], 1);\r\n        });\r\n\r\n        plane2.forEach(coord => {\r\n            this.setGridValue(coord[0], coord[1], 2);\r\n        });\r\n    }\r\n\r\n    getRandomCellState() {\r\n        // Génère un nombre aléatoire entre 0 et 1\r\n        const random = Math.random();\r\n\r\n        // Calcule la distribution cumulative\r\n        let cumulativeProbability = 0;\r\n        for (let i = 0; i < this.getApp().getWeights().length; i++) {\r\n            cumulativeProbability += this.getApp().getWeights()[i];\r\n            if (random <= cumulativeProbability) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        // Retourne DEAD par défaut (ne devrait pas se produire)\r\n        return Config.DEAD;\r\n    }\r\n\r\n    // Méthode pour initialiser la grille avec des cellules mortes\r\n    createGridRandom() {\r\n        return Array.from({length: this.getApp().getRowCanvas()}, () =>\r\n            Array.from({length: this.getApp().getColumnCanvas()}, () =>\r\n                this.getRandomCellState()\r\n            )\r\n        );\r\n    }\r\n\r\n    // Méthode pour initialiser la grille avec des cellules mortes\r\n    createGrid() {\r\n        return Array.from({length: this.getApp().getRowCanvas()}, () =>\r\n            Array.from({length: this.getApp().getColumnCanvas()}, () => Config.DEAD)\r\n        );\r\n    }\r\n\r\n    applyPattern(pattern, startY, startX, state = Config.ALIVE1) {\r\n        pattern.forEach(([dy, dx]) => {\r\n            const y = startY + dy;\r\n            const x = startX + dx;\r\n            if (y >= 0 && y < this.getApp().getRowCanvas() && x >= 0 && x < this.getApp().getColumnCanvas()) {\r\n                this.setGridValue(y, x, state);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Calcule la prochaine génération du jeu\r\n    getNextGeneration() {\r\n\r\n        this.setGeneration(this.getGeneration() + 1);\r\n        this.calculateNeighbors();\r\n        const nextGrid = this.createNextGrid();\r\n\r\n        this.setGrid(nextGrid)\r\n        this.updateHistoryGrid();\r\n    }\r\n\r\n    // Met à jour la grille d'historique pour l'évaluation des tendances\r\n    updateHistoryGrid() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                if (Config.aliveValuesSet.has(this.getGridValue(j, i))) {\r\n                    this.setGridHistoryValue(j, i, this.getGridHistoryValue(j, i) + 1);\r\n                } else {\r\n                    this.setGridHistoryValue(j, i, 0)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isWithinGridBounds(j, i) {\r\n        return j >= 0 && j < this.getApp().getRowCanvas() && i >= 0 && i < this.getApp().getColumnCanvas();\r\n    }\r\n\r\n    applyBoundaryRules(j, i) {\r\n        const row = this.getApp().getRowCanvas();\r\n        const col = this.getApp().getColumnCanvas();\r\n\r\n        if (j === -1) {\r\n            j = row - 1;\r\n        }\r\n        if (j === row) {\r\n            j = 0;\r\n        }\r\n        if (i === -1) {\r\n            i = col - 1;\r\n        }\r\n        if (i === col) {\r\n            i = 0;\r\n        }\r\n        if (j === -2) {\r\n            j = row - 2;\r\n        }\r\n        if (j === row + 1) {\r\n            j = 1;\r\n        }\r\n        if (i === -2) {\r\n            i = col - 2;\r\n        }\r\n        if (i === col + 1) {\r\n            i = 1;\r\n        }\r\n\r\n        return [j, i];\r\n    }\r\n\r\n\r\n    // Compte les voisins d'une cellule donnée\r\n    calculateNeighbors(y, x) {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const [\r\n                    numberNeighbors,\r\n                    typeNeighbors\r\n                ] = this.countNeighbors(j, i);\r\n                this.setGridNumberNeighborsValue(j, i, numberNeighbors);\r\n                this.setGridTypeNeighborsValue(j, i, typeNeighbors);\r\n            }\r\n        }\r\n    }\r\n\r\n    countAliveCells() {\r\n        let isAlive = 0;\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                if (Config.aliveValuesSet.has(this.getGridValue(j, i))) {\r\n                    isAlive++; // Incrémente le compteur si la cellule est vivante\r\n                }\r\n            }\r\n        }\r\n        this.setIsAlive(isAlive);\r\n        this.setTotalAlive(this.getTotalAlive() + isAlive);\r\n    }\r\n\r\n    countNeighbors(j, i) {\r\n        let neighborsAccount = 0;\r\n        let neighborsTotal = 0;\r\n\r\n        Config.MIDDLES['Plaine'].forEach(direction => {\r\n            let [y, x] = [j + direction.y, i + direction.x]\r\n\r\n            if (!this.getApp().getBorder()) [y, x] = this.applyBoundaryRules(y, x);\r\n\r\n            if (this.isWithinGridBounds(y, x)) {\r\n                const currentValue = this.getGridValue(y, x);\r\n                if (Config.aliveValuesSet.has(currentValue)) {\r\n                    neighborsAccount += 1;\r\n                    neighborsTotal += currentValue;\r\n                }\r\n            }\r\n        });\r\n\r\n        return neighborsAccount ? [neighborsAccount, Math.round(neighborsTotal / neighborsAccount)] : [0, 0];\r\n    }\r\n\r\n    createNextGrid() {\r\n        const nextGrid = [];\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            const nextRow = [];\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const typeNeighbors = this.getGridTypeNeighborsValue(j, i);\r\n                const numberNeighbors = this.getGridNumberNeighborsValue(j, i);\r\n                const currentValue = this.getGridValue(j, i);\r\n                const nextCellValue = this.determineNextCellValue(currentValue, typeNeighbors, numberNeighbors);\r\n                nextRow.push(nextCellValue);\r\n            }\r\n            nextGrid.push(nextRow);\r\n        }\r\n        return nextGrid;\r\n    }\r\n\r\n    determineNextCellValue(currentValue, typeNeighbors, numberNeighbors) {\r\n        if (Config.aliveValuesSet.has(currentValue)) {\r\n            if (this.getApp().getBirth().has(numberNeighbors)) {\r\n                return currentValue;\r\n            } else {\r\n                return Config.DEAD;\r\n            }\r\n        } else if (currentValue === Config.DEAD) {\r\n            if (this.getApp().getSurvival().has(numberNeighbors)) {\r\n                return typeNeighbors;\r\n            } else {\r\n                return Config.DEAD;\r\n            }\r\n        } else if (currentValue === Config.WALL) {\r\n            return Config.WALL;\r\n        }\r\n    }\r\n\r\n    // Déplace la grille vers le haut\r\n    moveUp() {\r\n        let nextGrid = this.getGrid().slice(1);\r\n        nextGrid.push(Array(this.getApp().getColumnCanvas()).fill(Config.DEAD));\r\n        this.setGrid(nextGrid);\r\n    }\r\n\r\n    // Déplace la grille vers le bas\r\n    moveDown() {\r\n        let nextGrid = [];\r\n        nextGrid.push(Array(this.getApp().getColumnCanvas()).fill(Config.DEAD));\r\n        nextGrid = nextGrid.concat(this.getGrid().slice(0, this.getApp().getRowCanvas() - 1));\r\n        this.setGrid(nextGrid);\r\n    }\r\n\r\n    // Déplace la grille vers la gauche\r\n    moveLeft() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas() - 1; i++) {\r\n                this.setGridValue(j, i, this.getGridValue(j, i + 1));\r\n            }\r\n            this.setGridValue(j, this.getApp().getColumnCanvas() - 1, Config.DEAD);\r\n        }\r\n    }\r\n\r\n    // Déplace la grille vers la droite\r\n    moveRight() {\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = this.getApp().getColumnCanvas() - 1; i > 0; i--) {\r\n                this.setGridValue(j, i, this.getGridValue(j, i - 1));\r\n            }\r\n            this.setGridValue(j, 0, Config.DEAD);\r\n        }\r\n    }\r\n}\r\n","import {Config} from './Config.js';\r\n\r\n\r\nexport class BoardCanvas {\r\n    #app;\r\n    #canvas;\r\n    #ctx;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    getCanvas() {\r\n        return this.#canvas;\r\n    }\r\n\r\n    getCtx() {\r\n        return this.#ctx;\r\n    }\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.#canvas = document.querySelector('canvas');\r\n        this.#ctx = this.#canvas.getContext('2d');\r\n        this.setupCanvas();\r\n    }\r\n\r\n    setDimensionsCanvas() {\r\n        this.getCanvas().width = this.getApp().getColumnCanvas() * this.getApp().getCellSize();\r\n        this.getCanvas().height = this.getApp().getRowCanvas() * this.getApp().getCellSize();\r\n    }\r\n\r\n    setupCanvas() {\r\n        this.setDimensionsCanvas();\r\n        this.getCtx().fillStyle = Config.canvasBgColor;\r\n        this.getCtx().fillRect(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n    }\r\n\r\n    clearCanvas() {\r\n        this.getCtx().clearRect(0, 0, this.getCanvas().width, this.getCanvas().height);\r\n    }\r\n\r\n    drawGrid() {\r\n        this.clearCanvas();\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n                const currentValueCell = this.getApp().getBoard().getGridValue(j, i);\r\n                const cellSize = this.getApp().getCellSize();\r\n                if (Config.notDeadValueSet.has(currentValueCell)) {\r\n                    this.getCtx().fillStyle = this.getColorFromIndex(currentValueCell, j, i);\r\n                    this.getCtx().fillRect(i * cellSize, j * cellSize, cellSize, cellSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.getApp().getLines()) {\r\n            this.drawLines();\r\n        }\r\n    }\r\n\r\n\r\n    drawLines() {\r\n        this.getCtx().strokeStyle = 'rgb(100, 100, 100)';\r\n        this.getCtx().lineWidth = 1;\r\n        const cellSize = this.getApp().getCellSize();\r\n\r\n        // Dessiner des lignes horizontales\r\n        for (let j = 0; j < this.getApp().getRowCanvas(); j++) {\r\n            this.getCtx().beginPath();\r\n            this.getCtx().moveTo(0, j * cellSize);\r\n            this.getCtx().lineTo(this.getCanvas().width, j * cellSize);\r\n            this.getCtx().stroke();\r\n        }\r\n\r\n        // Dessiner des lignes verticales\r\n        for (let i = 0; i < this.getApp().getColumnCanvas(); i++) {\r\n            this.getCtx().beginPath();\r\n            this.getCtx().moveTo(i * cellSize, 0);\r\n            this.getCtx().lineTo(i * cellSize, this.getCanvas().height);\r\n            this.getCtx().stroke();\r\n        }\r\n    }\r\n\r\n\r\n    getColorFromIndex(value, j, i) {\r\n        let color = 100;\r\n        if (this.getApp().getHistory()) {\r\n            color -= 0.2 * this.getApp().getBoard().getGridHistoryValue(j, i);\r\n            if (color < 10) color = 10;\r\n        }\r\n\r\n        switch (value) {\r\n            case 0:\r\n                return `hsl(0, 0%, 0%)`; // Noir\r\n            case 1:\r\n                return `hsl(200, ${color}%, 50%)`; // Bleu\r\n            case 2:\r\n                return `hsl(0, ${color}%, 50%)`; // Rouge\r\n            case 3:\r\n                return `hsl(60, ${color}%, 50%)`; // Jaune\r\n            case 4:\r\n                return `hsl(100, ${color}%, 50%)`; // Vert\r\n            case 9:\r\n                return `hsl(320, ${color}%, 100%)`; // Blanc\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n}\r\n","// function make\r\n\r\nexport class Config {\r\n    // Taille des cellules du canvas\r\n    static MIN_CELL_SIZE = 3;\r\n    static MAX_CELL_SIZE = 250;\r\n\r\n    // Nombre minimales et maximales de colonne\r\n    static MIN_COL = 2;\r\n    static MAX_COL = 250;\r\n\r\n    // Valeurs des cellules\r\n    static DEAD = 0;\r\n    static ALIVE1 = 1;\r\n    static ALIVE2 = 2;\r\n    static ALIVE3 = 3;\r\n    static ALIVE4 = 4;\r\n    static WALL = 9;\r\n\r\n    // Milieux\r\n    static MIDDLES = {\r\n        \"Desert\": [\r\n            {name: 'N', x: 0, y: -1},\r\n            {name: 'E', x: 1, y: 0},\r\n            {name: 'S', x: 0, y: 1},\r\n            {name: 'O', x: -1, y: 0},\r\n        ],\r\n        \"Ville\": [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n        ],\r\n        'Plaine': [\r\n            {name: 'N', x: 0, y: -1},\r\n            {name: 'NE', x: 1, y: -1},\r\n            {name: 'E', x: 1, y: 0},\r\n            {name: 'SE', x: 1, y: 1},\r\n            {name: 'S', x: 0, y: 1},\r\n            {name: 'SO', x: -1, y: 1},\r\n            {name: 'O', x: -1, y: 0},\r\n            {name: 'NO', x: -1, y: -1}\r\n        ],\r\n        'Foret': [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'NE', x: 1, y: -1},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'SE', x: 1, y: 1},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'SO', x: -1, y: 1},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n            {name: 'NO', x: -1, y: -1}\r\n        ],\r\n        'Mer': [\r\n            {name: 'N-1', x: 0, y: -1},\r\n            {name: 'N-2', x: 0, y: -2},\r\n            {name: 'NE-1', x: 1, y: -1},\r\n            {name: 'NE-2', x: 2, y: -2},\r\n            {name: 'E-1', x: 1, y: 0},\r\n            {name: 'E-2', x: 2, y: 0},\r\n            {name: 'SE-1', x: 1, y: 1},\r\n            {name: 'SE-2', x: 2, y: 2},\r\n            {name: 'S-1', x: 0, y: 1},\r\n            {name: 'S-2', x: 0, y: 2},\r\n            {name: 'SO-1', x: -1, y: 1},\r\n            {name: 'SO-2', x: -2, y: 2},\r\n            {name: 'O-1', x: -1, y: 0},\r\n            {name: 'O-2', x: -2, y: 0},\r\n            {name: 'NO-1', x: -1, y: -1},\r\n            {name: 'NO-2', x: -2, y: -2}\r\n        ],\r\n    };\r\n\r\n    static aliveValuesSet = new Set([1, 2, 3, 4]);\r\n\r\n    static notDeadValueSet = new Set([1, 2, 3, 4, 9]);\r\n\r\n    // Font Canvas\r\n    static canvasBgColor = 'black';\r\n}","import {Config} from './Config.js';\r\nimport {$} from './utils.js';\r\nimport {HTML} from './HTML.js';\r\nimport {PatternManager} from \"./PatternManager.js\";\r\n\r\nexport class EventHandler {\r\n    #app;\r\n\r\n    getApp() {\r\n        return this.#app;\r\n    }\r\n\r\n    constructor(app) {\r\n        this.#app = app;\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'état du bouton de démarrage.\r\n     *\r\n     * @param {boolean} [forceStop=false] - Si vrai, force l'arrêt de l'animation même si elle n'est pas en cours.\r\n     * @returns {void}\r\n     */\r\n    updateStartButton(forceStop = false) {\r\n        const playIcon = $('#startIcon');\r\n        const pauseIcon = $('#pauseIcon');\r\n\r\n        const isPlaying = playIcon.style.display === 'none';\r\n\r\n        if (forceStop && !isPlaying) return;\r\n\r\n        playIcon.style.display = isPlaying ? 'block' : 'none';\r\n        pauseIcon.style.display = isPlaying ? 'none' : 'block';\r\n        HTML.startPrincipalButton.title = isPlaying ? 'Démarrer' : 'Pause';\r\n\r\n        // Appelle toggleAnimation si l'état change\r\n        this.getApp().toggleAnimation();\r\n    }\r\n\r\n    /**\r\n     * Met à jour les poids des entrées aléatoires.\r\n     *\r\n     * @param {HTMLInputElement} changedInput - L'entrée dont la valeur a changé.\r\n     * @returns {void}\r\n     */\r\n    updateWeights(changedInput) {\r\n        const total = Array.from(HTML.weightFullRandomInputs).reduce((acc, input) => acc + parseFloat(input.value), 0);\r\n\r\n        let totalZero = (1 - total).toFixed(2);\r\n        if (totalZero < 0) totalZero = 0;\r\n\r\n        HTML.weightRandomSpan0.textContent = totalZero;\r\n        HTML.weightRandomInput0.value = totalZero;\r\n\r\n        if (total > 1) {\r\n            const decreaseAmount = (total - 1) / (HTML.weightFullRandomInputs.length - 1);\r\n            HTML.weightFullRandomInputs.forEach(input => {\r\n                if (input !== changedInput) {\r\n                    input.value = Math.max(parseFloat(input.value) - decreaseAmount, 0);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valide une grille donnée.\r\n     *\r\n     * @param {string[]} grid - La grille à valider, représentée sous forme d'un tableau de chaînes de caractères.\r\n     * @returns {boolean} - Vrai si la grille est valide, faux sinon.\r\n     */\r\n    validateGrid(grid) {\r\n        const rowLength = grid[0].length;\r\n        for (const row of grid) {\r\n            if (row.length !== rowLength || !/^[012349]+$/.test(row)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Affiche les boutons d'une div avec un délai de masquage.\r\n     *\r\n     * @param {HTMLDivElement} div - La div contenant les boutons à afficher.\r\n     * @param {HTMLElement} principalButton - Le bouton principal qui déclenche l'affichage de la div.\r\n     * @param {HTMLElement} parent - L'élément parent de la div et du bouton principal.\r\n     * @returns {void}\r\n     */\r\n    displayDivButtons(div, principalButton, parent) {\r\n        let moveHideTimeout; // Variable pour stocker le timeout\r\n\r\n        // Fonction pour afficher ou masquer la div des boutons avec un délai\r\n        const toggleDiv = (show) => {\r\n            moveHideTimeout = this.toggleVisibilityWithDelay(div, show, 300, moveHideTimeout);\r\n        };\r\n\r\n        // Affiche la div lorsque le bouton est survolé\r\n        principalButton.addEventListener('mouseover', () => toggleDiv(true));\r\n\r\n        // Affiche la div lorsque la souris est sur la div entière\r\n        parent.addEventListener('mouseover', () => toggleDiv(true));\r\n\r\n        // Ferme la div avec un délai lorsque la souris quitte la div entière\r\n        parent.addEventListener('mouseout', (event) => {\r\n            if (!parent.contains(event.relatedTarget)) {\r\n                toggleDiv(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'état du bouton de dessin.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    updateDrawButton() {\r\n        HTML.drawPrincipalButton.classList.toggle('active');\r\n        this.getApp().setEnableDraw(!this.getApp().getEnableDraw());\r\n        this.getApp().toggleDrawingEvents();\r\n    }\r\n\r\n    /**\r\n     * Bascule la visibilité d'un élément avec un délai.\r\n     *\r\n     * @param {HTMLElement} element - L'élément dont la visibilité doit être basculée.\r\n     * @param {boolean} show - Si vrai, affiche l'élément, sinon le masque.\r\n     * @param {number} delay - Le délai en millisecondes avant de masquer l'élément.\r\n     * @param {number|null} timeoutId - L'identifiant du timeout précédent, s'il existe.\r\n     * @returns {number|null} - L'identifiant du nouveau timeout, ou null si l'élément est affiché.\r\n     */\r\n    toggleVisibilityWithDelay(element, show, delay, timeoutId) {\r\n        // Annuler tout timeout précédent\r\n        clearTimeout(timeoutId);\r\n\r\n        if (show) {\r\n            element.style.display = 'flex'; // Affiche immédiatement\r\n            return null; // Pas de nouveau timeout à gérer pour l'affichage\r\n        } else {\r\n            return setTimeout(() => {\r\n                element.style.display = 'none';\r\n            }, delay); // Masque avec délai\r\n        }\r\n    }\r\n\r\n    // Fonction principale pour initialiser tous les événements\r\n    initialize() {\r\n        // ICONES\r\n        this.initializeSimulationIcon();\r\n        this.initializeSaveButton();\r\n        this.initializeLoadModal();\r\n        this.initiatilizeEnterButton();\r\n        this.initializeCopyIcon();\r\n        this.initializePatternIcon();\r\n        this.initializeStepIcon();\r\n        this.initializeJumpIcon();\r\n        this.initializeStartIcon();\r\n        this.initializeRapidityIcon();\r\n        this.initializeColorIcon();\r\n        this.initializeDrawIcon();\r\n        this.initializeTrashIcon();\r\n        this.initializeGridIcon();\r\n        this.initializeBordureIcon();\r\n        this.initializeHistoryIcon();\r\n        this.initializeArrowsButton();\r\n        this.initializeZoomButton()\r\n        this.initializeDefineRulesButton();\r\n        this.initializePredefineRulesButton();\r\n        this.initializeDocButton();\r\n        this.initializeKeyboard();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION SIMULATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de simulation en ajoutant un gestionnaire d'événements au\r\n     * bouton principal. Lorsque le bouton est cliqué, la fonction met à jour l'état du\r\n     * bouton de démarrage en forçant l'arrêt de l'animation.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeSimulationIcon() {\r\n        HTML.simulationPrincipalButton.addEventListener('click', () => {\r\n            this.updateStartButton(true)\r\n        });\r\n\r\n        this.initializeConfigurerModal();\r\n        this.initializeWeightModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de configuration en définissant un gestionnaire d'événements sur\r\n     * le bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction valide les valeurs\r\n     * d'entrée pour le nombre de lignes, de colonnes et la taille des cellules en utilisant\r\n     * la fonction interne `validateInput`. Elle initialise ensuite une nouvelle grille en\r\n     * nettoyant la grille actuelle, en formatant la nouvelle grille avec les valeurs validées,\r\n     * en créant une nouvelle grille aléatoire, en initialisant les grilles, en définissant les\r\n     * dimensions du canvas et en dessinant la nouvelle grille.\r\n     *\r\n     * La fonction `validateInput` est une fonction interne qui valide une valeur d'entrée en\r\n     * fonction d'une valeur minimale et maximale autorisées. Elle convertit la valeur d'entrée\r\n     * en un entier, vérifie si elle est dans la plage autorisée et retourne la valeur validée.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeConfigurerModal() {\r\n        function validateInput(inputElement, minValue, maxValue) {\r\n            let value = parseInt(inputElement.value, 10);\r\n\r\n            if (isNaN(value)) return minValue; else if (value > maxValue) return maxValue; else if (value < minValue) return minValue; else return value;\r\n        }\r\n\r\n        HTML.applyConfigureButton.addEventListener('click', () => {\r\n            // Corriger les input\r\n            let rowsInput = validateInput(HTML.rowsConfigureInput, Config.MIN_COL, Config.MAX_COL);\r\n            let columnsInput = validateInput(HTML.columnsConfigureInput, Config.MIN_COL, Config.MAX_COL);\r\n            let cellSizeInput = validateInput(HTML.cellSizeConfigureInput, Config.MIN_CELL_SIZE, Config.MAX_CELL_SIZE);\r\n\r\n            // Initialiser une nouvelle grille\r\n            this.updateStartButton(true);\r\n            this.getApp().cleanGrid();\r\n            this.getApp().formatGrid(rowsInput, columnsInput, cellSizeInput);\r\n            let grid = this.getApp().getBoard().createGridRandom();\r\n            this.getApp().getBoard().initializeGrids(grid);\r\n            this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal des poids en affichant les valeurs initiales des poids et en ajoutant\r\n     * des gestionnaires d'événements aux entrées de poids et au bouton \"Appliquer\". Lorsqu'une\r\n     * valeur d'entrée change, la fonction `updateWeights` est appelée avec l'entrée modifiée comme\r\n     * argument, et la fonction interne `displayWeights` est appelée pour mettre à jour l'affichage\r\n     * des poids dans les spans associés.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" est cliqué, la fonction crée un tableau des valeurs de poids\r\n     * actuelles, y compris la valeur de la dernière entrée calculée. Elle appelle `setWeights` sur\r\n     * l'application avec le tableau de poids converti en nombres, et coche la case à cocher \"Hasard\"\r\n     * du modal de configuration.\r\n     *\r\n     * La fonction `displayWeights` est une fonction interne qui affiche les valeurs actuelles des\r\n     * poids dans les spans associés.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeWeightModal() {\r\n        const displayWeights = () => {\r\n            HTML.weightFullRandomInputs.forEach((input, index) => {\r\n                HTML.weightRandomSpans[index].textContent = `(${input.value})`;\r\n            });\r\n        }\r\n\r\n        // Affiche la valeur initiale des poids\r\n        HTML.weightFullRandomInputs.forEach((input, index) => {\r\n            HTML.weightRandomSpans[index].textContent = `(${input.value})`;\r\n        });\r\n\r\n        HTML.weightFullRandomInputs.forEach(input => {\r\n            input.addEventListener('input', () => {\r\n                this.updateWeights(input);\r\n                displayWeights();\r\n            });\r\n        });\r\n\r\n        HTML.applyRandombutton.addEventListener('click', () => {\r\n            const weights = [];\r\n            weights.push(HTML.weightRandomInput0.value);\r\n            HTML.weightFullRandomInputs.forEach(weight => {\r\n                weights.push(weight.value);\r\n            });\r\n            this.getApp().setWeights(weights.map(Number));\r\n            HTML.hasardConfigureCheckbox.checked = true;\r\n        })\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION SAUVEGARDE\r\n     ******************************************/\r\n\r\n    initializeSaveButton() {\r\n        HTML.savePrincipalButton.addEventListener('click', () => {\r\n\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializeSaveModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de sauvegarde en ajoutant un gestionnaire d'événements au bouton\r\n     * \"Sauvegarder\". Lorsque le bouton est cliqué, la fonction met en pause l'animation, met\r\n     * à jour le bouton de démarrage et récupère le nom de sauvegarde entré dans l'input. Si\r\n     * le champ est vide, elle demande à l'utilisateur d'entrer un nom.\r\n     *\r\n     * La fonction vérifie ensuite s'il existe déjà une sauvegarde avec le même nom. Si c'est\r\n     * le cas, elle affiche une boîte de dialogue de confirmation pour remplacer la sauvegarde\r\n     * existante. Enfin, elle enregistre la grille actuelle dans le localStorage sous le nom de\r\n     * sauvegarde et met à jour la liste des noms de sauvegarde.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeSaveModal() {\r\n        HTML.applySaveButton.addEventListener('click', () => {\r\n            let saveName = HTML.nameSaveInput.value.toLowerCase().trim();\r\n            while (!saveName) {\r\n                saveName = prompt(\"Veuillez entrer un nom pour la sauvegarde.\").toLowerCase().trim();\r\n            }\r\n            const saveData = this.getApp().getBoard().getGrid();\r\n\r\n            // Vérifier s'il existe déjà une sauvegarde avec le même nom\r\n            let saveNames = JSON.parse(localStorage.getItem('saveNames')) || [];\r\n            let saves = JSON.parse(localStorage.getItem('savesLifeGame')) || {};\r\n\r\n            if (saves[saveName]) {\r\n                if (!confirm(`Une sauvegarde portant le même nom existe déjà. Voulez-vous la remplacer ?`)) {\r\n                    return;\r\n                }\r\n            } else { saveNames.push(saveName);}\r\n\r\n            saves[saveName] = saveData;\r\n            localStorage.setItem('saveNames', JSON.stringify(saveNames));\r\n            localStorage.setItem('savesLifeGame', JSON.stringify(saves));\r\n            HTML.nameSaveInput.value = '';\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CHARGEMENT\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le modal de chargement en ajoutant un gestionnaire d'événements au bouton\r\n     * \"Charger\". Lorsque le bouton est cliqué, la fonction met en pause l'animation, met à\r\n     * jour le bouton de démarrage, efface les options du select de chargement et remplit le\r\n     * select avec les noms de sauvegarde récupérés à partir du localStorage.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" du modal de chargement est cliqué, la fonction récupère\r\n     * la grille sauvegardée correspondant à l'option sélectionnée dans le select, initialise\r\n     * une nouvelle grille en nettoyant la grille actuelle, en formatant la nouvelle grille\r\n     * avec les dimensions de la grille sauvegardée, en initialisant les grilles avec les\r\n     * valeurs sauvegardées, en définissant les dimensions du canvas et en dessinant la nouvelle\r\n     * grille.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeLoadModal() {\r\n        HTML.loadPrincipalButton.addEventListener('click', () => {\r\n\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n\r\n            // Effacer le select\r\n            HTML.configLoadSelect.innerHTML = '';\r\n\r\n            // Récupérer les noms des sauvegardes à partir de l'objet 'saveNames'\r\n            let saveNames = JSON.parse(localStorage.getItem('saveNames')) || [];\r\n\r\n            // Créer le select\r\n            saveNames.forEach(saveName => {\r\n                const option = document.createElement('option');\r\n                option.value = saveName;\r\n                option.textContent = saveName;\r\n                HTML.configLoadSelect.appendChild(option);\r\n            });\r\n        });\r\n\r\n        HTML.applyLoadButton.addEventListener('click', () => {\r\n            const selectedSave = HTML.configLoadSelect.value;\r\n\r\n            // Récupérer les sauvegardes à partir de l'objet 'savesLifeGame'\r\n            let saves = JSON.parse(localStorage.getItem('savesLifeGame')) || {};\r\n            const savedGrid = saves[selectedSave];\r\n\r\n            // Initialiser une nouvelle grille\r\n            this.updateStartButton(true);\r\n            this.getApp().cleanGrid();\r\n            this.getApp().formatGrid(savedGrid.length, savedGrid[0].length, this.getApp().getCellSize());\r\n            this.getApp().getBoard().initializeGrids(savedGrid);\r\n            this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION INSERTION ET COPIE\r\n     ******************************************/\r\n\r\n    initiatilizeEnterButton() {\r\n        this.initializeEnterModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal d'entrée de grille en ajoutant un gestionnaire d'événements à la zone\r\n     * de texte d'entrée de grille. Lorsque la valeur de la zone de texte change, la fonction\r\n     * valide la grille en utilisant la méthode `validateGrid`. Si la grille est valide, elle\r\n     * ajoute la classe CSS \"valid\" à la zone de texte et masque le message d'erreur. Sinon,\r\n     * ell ajoute la classe CSS \"invalid\" à la zone de texte et affiche le message d'erreur. Le\r\n     * bouton \"Appliquer\" est également désactivé tant que la grille n'est pas valide.\r\n     *\r\n     * Lorsque le bouton \"Appliquer\" est cliqué, si la grille est valide, la fonction initialise\r\n     * une nouvelle grille en nettoyant la grille actuelle, en formatant la nouvelle grille avec\r\n     * les dimensions de la grille entrée, en initialisant les grilles avec les valeurs entrées,\r\n     * en définissant les dimensions du canvas et en dessinant la nouvelle grille.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeEnterModal() {\r\n        let isValidatedGrid;\r\n        let grid;\r\n\r\n        HTML.arrayGridEnterInput.addEventListener('input', () => {\r\n            grid = HTML.arrayGridEnterInput.value.trim().split('\\n')\r\n            isValidatedGrid = this.validateGrid(grid);\r\n            if (isValidatedGrid) {\r\n                HTML.arrayGridEnterInput.classList.add('valid');\r\n                HTML.arrayGridEnterInput.classList.remove('invalid');\r\n                HTML.errorGridEnterP.classList.add('d-none');\r\n            } else {\r\n                HTML.arrayGridEnterInput.classList.add('invalid');\r\n                HTML.arrayGridEnterInput.classList.remove('valid');\r\n                HTML.errorGridEnterP.classList.remove('d-none');\r\n            }\r\n\r\n            HTML.applyGridEnterButton.disabled = !isValidatedGrid;\r\n        });\r\n\r\n        HTML.applyGridEnterButton.addEventListener(\"click\", () => {\r\n            if (isValidatedGrid) {\r\n                grid = grid.map(row => Array.from(row, Number));\r\n\r\n                // Initialiser une nouvelle grille\r\n                this.updateStartButton(true);\r\n                this.getApp().cleanGrid();\r\n                this.getApp().formatGrid(grid.length, grid[0].length, this.getApp().getCellSize());\r\n                this.getApp().getBoard().initializeGrids(grid);\r\n                this.getApp().getBoardCanvas().setDimensionsCanvas();\r\n                this.getApp().getBoardCanvas().drawGrid();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialise l'icône de copie en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction récupère la valeur de la grille actuelle, la\r\n     * convertit en une chaîne de caractères et la copie dans le presse-papier à l'aide de l'API\r\n     * Clipboard. Un message d'alerte est affiché en cas de succès ou d'échec de la copie.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeCopyIcon() {\r\n        HTML.copyPrincipalButton.addEventListener('click', () => {\r\n            const gridValue = this.getApp()\r\n                .getBoard()\r\n                .getGrid()\r\n                .map(row => row.join(''))\r\n                .join('\\n');\r\n\r\n            // Créer un text area pour effectuer la copie\r\n            const textArea = document.createElement('textarea');\r\n            textArea.style.position = 'fixed';\r\n            textArea.style.opacity = '0';\r\n            textArea.style.left = '-9999px';\r\n            textArea.style.top = '-9999px';\r\n            textArea.value = gridValue;\r\n\r\n            // Ajouter le textarea au document\r\n            document.body.appendChild(textArea);\r\n\r\n            // Sélectionner le texte\r\n            textArea.select();\r\n            textArea.setSelectionRange(0, textArea.value.length); // Pour les appareils mobiles\r\n\r\n            navigator.clipboard.writeText(gridValue)\r\n                .then(() => {\r\n                    alert('Le texte a été copié dans le presse-papier.');\r\n                })\r\n                .finally(() => {\r\n                    document.body.removeChild(textArea);\r\n                });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION DES PATTERNS\r\n     ******************************************/\r\n\r\n    initializePatternIcon() {\r\n        const patternManager = new PatternManager(this);\r\n        patternManager.init();\r\n    }\r\n\r\n\r\n    /******************************************\r\n     * INITIALISATION PAS A PAS\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône d'étape en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction calcule la prochaine génération de la grille\r\n     * en appelant la méthode `calculateNextGeneration` de l'application.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeStepIcon() {\r\n        HTML.stepPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().calculateNextGeneration();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de saut en ajoutant un gestionnaire d'événements aux boutons de saut. Lorsqu'un\r\n     * bouton de saut est cliqué, la fonction met à jour les classes CSS des boutons pour indiquer la\r\n     * sélection, définit la valeur de saut dans l'application, ferme immédiatement la div des boutons\r\n     * de saut et met à jour l'état du bouton de démarrage.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de saut\r\n     * avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeJumpIcon() {\r\n        this.displayDivButtons(HTML.jumpDiv, HTML.jumpPrincipalButton, HTML.jumpParent);\r\n\r\n        // Gèrer le clic sur les boutons du saut\r\n        HTML.jumpButtons.forEach(jumpButton => {\r\n            jumpButton.addEventListener('click', () => {\r\n                // Mettre à jour les classes des boutons pour indiquer la sélection\r\n                HTML.jumpButtons.forEach(button => button.classList.remove('bg-success', 'text-light'));\r\n                jumpButton.classList.add('bg-success', 'text-light');\r\n\r\n                // Mettre à jour la vitesse dans app\r\n                this.getApp().setStep(jumpButton.dataset.jump);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.jumpDiv.style.display = 'none';\r\n\r\n                // Apeller updateStartButton pour mettre à jour l'état\r\n                this.updateStartButton(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION ANIMATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de démarrage en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction met à jour l'état du bouton de\r\n     * démarrage sans forcer l'arrêt de l'animation.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeStartIcon() {\r\n        HTML.startPrincipalButton.addEventListener('click', () => {\r\n            this.updateStartButton(false);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de rapidité en ajoutant un gestionnaire d'événements aux boutons de rapidité.\r\n     * Lorsqu'un bouton de rapidité est cliqué, la fonction met à jour les classes CSS des boutons pour\r\n     * indiquer la sélection, définit la valeur de rapidité dans l'application, ferme immédiatement la\r\n     * div des boutons de rapidité et met à jour l'état du bouton de démarrage.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * rapidité avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeRapidityIcon() {\r\n        this.displayDivButtons(HTML.rapidityDiv, HTML.rapidityPrincipalButton, HTML.rapidityParent);\r\n\r\n        // Gèrer le clic sur les boutons de rapidité\r\n        HTML.rapidityButtons.forEach(rapidityButton => {\r\n            rapidityButton.addEventListener('click', () => {\r\n                // Mettre à jour les classes des boutons pour indiquer la sélection\r\n                HTML.rapidityButtons.forEach(button => button.classList.remove('bg-success', 'text-light'));\r\n                rapidityButton.classList.add('bg-success', 'text-light');\r\n\r\n                // Mettre à jour la vitesse dans app\r\n                this.getApp().setRapidity(rapidityButton.dataset.rapidity);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.rapidityDiv.style.display = 'none';\r\n\r\n                // Apeller updateStartButton pour mettre à jour l'état\r\n                this.updateStartButton(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION COULEUR ET DESSIN\r\n     ******************************************/\r\n    /**\r\n     * Initialise l'icône de couleur en ajoutant un gestionnaire d'événements aux boutons de couleur.\r\n     * Lorsqu'un bouton de couleur est cliqué, la fonction met à jour la classe CSS du bouton principal\r\n     * de couleur, définit la valeur d'ajout dans l'application, ferme immédiatement la div des boutons\r\n     * de couleur et met à jour l'affichage des icônes de couleur et de mur en fonction de la couleur\r\n     * sélectionnée.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * couleur avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeColorIcon() {\r\n        this.displayDivButtons(HTML.colorDiv, HTML.colorPrincipalButton, HTML.colorParent);\r\n\r\n        // Gèrer le clic sur les boutons de couleur\r\n        HTML.colorButtons.forEach(colorButton => {\r\n            colorButton.addEventListener('click', () => {\r\n\r\n                HTML.colorPrincipalButton.classList.remove('blue', 'green', 'yellow', 'red');\r\n                let className = colorButton.dataset.color;\r\n                this.getApp().setValueAdd(parseInt(colorButton.dataset.value));\r\n\r\n                HTML.colorPrincipalButton.classList.add(className);\r\n\r\n                // Fermer la div immédiatement après le clic\r\n                HTML.colorDiv.style.display = 'none';\r\n\r\n                const isWall = colorButton.dataset.color === 'wall';\r\n                HTML.colorIcon.style.display = isWall ? 'none' : 'block';\r\n                HTML.wallIcon.style.display = isWall ? 'block' : 'none';\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de dessin en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction met à jour l'état du bouton de démarrage en\r\n     * forçant l'arrêt de l'animation, puis appelle la méthode `updateDrawButton` pour mettre à\r\n     * jour l'état du mode de dessin.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDrawIcon() {\r\n        HTML.drawPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n            this.updateDrawButton();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CORB, GRILLE, BORD, HIST\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise l'icône de corbeille en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction nettoie la grille en appelant\r\n     * la méthode `cleanGrid` de l'application.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeTrashIcon() {\r\n        HTML.trashPrincipalButton.addEventListener('click', () => {\r\n            this.getApp().cleanGrid();\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de grille en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction bascule l'état de l'affichage des lignes de la\r\n     * grille dans l'application en appelant les méthodes `setLines` et `getLines`. Si les lignes\r\n     * sont désactivées, elle efface le canvas en appelant `clearCanvas`.\r\n     * Enfin, elle redessine la grille en appelant `drawGrid`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeGridIcon() {\r\n        HTML.gridPrincipalButton.addEventListener('click', () => {\r\n            HTML.gridPrincipalButton.classList.toggle('active');\r\n            this.getApp().setLines(!this.getApp().getLines());\r\n            if (!this.getApp().getLines()) this.getApp().getBoardCanvas().clearCanvas();\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône de bordure en ajoutant un gestionnaire d'événements au bouton principal.\r\n     * Lorsque le bouton est cliqué, la fonction bascule l'état de l'affichage de la bordure du\r\n     * canvas dans l'application en appelant les méthodes `setBorder` et `getBorder`. Elle ajoute\r\n     * ou supprime également la classe CSS \"canvas-border\" sur le canvas.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeBordureIcon() {\r\n        HTML.borderPrincipalButton.addEventListener('click', () => {\r\n            HTML.borderPrincipalButton.classList.toggle('active');\r\n\r\n            this.getApp().setBorder(!this.getApp().getBorder());\r\n            $('canvas').classList.toggle('canvas-border');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise l'icône d'historique en ajoutant un gestionnaire d'événements au bouton\r\n     * principal. Lorsque le bouton est cliqué, la fonction bascule l'état de l'historique\r\n     * dans l'application en appelant les méthodes `setHistory` et `getHistory`. Si l'historique\r\n     * est désactivé, elle efface le canvas en appelant `clearCanvas`.\r\n     * Enfin, elle redessine la grille en appelant `drawGrid`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeHistoryIcon() {\r\n        HTML.historyPrincipalButton.addEventListener('click', () => {\r\n            HTML.historyPrincipalButton.classList.toggle('active');\r\n            this.getApp().setHistory(!this.getApp().getHistory());\r\n            if (!this.getApp().getHistory()) {\r\n                this.getApp().getBoardCanvas().clearCanvas();\r\n            }\r\n            this.getApp().getBoardCanvas().drawGrid();\r\n\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION DEPLACEMENT\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise les boutons de déplacement en ajoutant un gestionnaire d'événements aux boutons\r\n     * de déplacement. Lorsqu'un bouton de déplacement est cliqué, la fonction appelle la méthode\r\n     * `updateArrows` avec la direction correspondante.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * déplacement avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeArrowsButton() {\r\n        this.displayDivButtons(HTML.moveDiv, HTML.movePrincipalButton, HTML.moveParent);\r\n\r\n        HTML.moveButtons.forEach(moveButton => {\r\n            moveButton.addEventListener('click', () => {\r\n                this.updateArrows(moveButton.dataset.direction);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour la position de la grille dans une direction donnée en appelant la méthode\r\n     * correspondante de la grille, puis redessine la grille.\r\n     *\r\n     * @param {string} direction - La direction dans laquelle déplacer la grille ('Up', 'Down',\r\n     * 'Left' ou 'Right').\r\n     * @returns {void}\r\n     */\r\n    updateArrows(direction) {\r\n        const buttonName = direction.charAt(0).toUpperCase() + direction.slice(1);\r\n        this.getApp().getBoard()[`move${buttonName}`]();\r\n        this.getApp().getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION ZOOM\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le bouton de zoom en ajoutant un gestionnaire d'événements aux boutons de zoom.\r\n     * Lorsqu'un bouton de zoom est cliqué, la fonction appelle la méthode `updateZoom` avec la\r\n     * valeur de zoom correspondante.\r\n     *\r\n     * La fonction `displayDivButtons` est appelée pour afficher et masquer la div des boutons de\r\n     * zoom avec un délai.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeZoomButton() {\r\n        this.displayDivButtons(HTML.zoomDiv, HTML.zoomPrincipalButton, HTML.zoomParent);\r\n\r\n        HTML.zoomButtons.forEach(zoomButton => {\r\n            zoomButton.addEventListener('click', () => {\r\n                this.updateZoom(zoomButton.dataset.value)\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Met à jour le zoom de la grille en appelant la méthode correspondante de l'application.\r\n     *\r\n     * @param {string} zoom - La valeur de zoom à appliquer ('in' ou 'out').\r\n     * @returns {void}\r\n     */\r\n    updateZoom(zoom) {\r\n        const buttonName = zoom.charAt(0).toUpperCase() + zoom.slice(1)\r\n        this.getApp()[`setCellSizeZoom${buttonName}`]();\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION REGLES\r\n     ******************************************/\r\n\r\n    initializeDefineRulesButton() {\r\n        HTML.defineRulesPrincipalButton.addEventListener('click', () => {\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializeDefineRulesModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal de définition des règles en ajoutant un gestionnaire d'événements au\r\n     * bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction récupère les cases à cocher\r\n     * cochées pour les règles de naissance et de survie, les convertit en ensembles de nombres\r\n     * et les définit dans l'application en utilisant les méthodes `setBirth` et `setSurvival`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDefineRulesModal() {\r\n        HTML.applyDefineRulesButton.addEventListener('click', () => {\r\n            this.getApp().setBirth(new Set(Array.from(HTML.birthDefineRulesCheckboxes)\r\n                .filter(checkbox => checkbox.checked)\r\n                .map(checkbox => parseInt(checkbox.value))));\r\n            this.getApp().setSurvival(new Set(Array.from(HTML.survivalDefineRulesCheckboxes)\r\n                .filter(checkbox => checkbox.checked)\r\n                .map(checkbox => parseInt(checkbox.value))));\r\n        });\r\n    }\r\n\r\n    initializePredefineRulesButton() {\r\n        HTML.predefineRulesPrincipalButton.addEventListener('click', () => {\r\n            // Mettre en pause l'animation\r\n            this.getApp().stopAnimation();\r\n            this.updateStartButton(true);\r\n        })\r\n\r\n        this.initializePredefineRulesModal();\r\n    }\r\n\r\n    /**\r\n     * Initialise le modal des règles prédéfinies en ajoutant un gestionnaire d'événements au\r\n     * bouton \"Appliquer\". Lorsque le bouton est cliqué, la fonction récupère les règles sélection-\r\n     * nées dans le select, les convertit en ensembles de nombres pour les règles de naissance et\r\n     * de survie, vérifie la validité des règles entrées et les définit dans l'application en\r\n     * utilisant les méthodes `setBirth` et `setSurvival`.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializePredefineRulesModal() {\r\n        HTML.applyPredefineRulesButton.addEventListener('click', () => {\r\n            this.getApp().verifyInputRules();\r\n            const [births, survivals] = HTML.predefineRulesSelect.value\r\n                .split('/')\r\n                .map(valeurs => new Set(valeurs.split('').map(Number)));\r\n            this.getApp().setBirth(births);\r\n            this.getApp().setSurvival(survivals);\r\n            this.getApp().verifyInputRules();\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION CLAVIER\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise les gestionnaires d'événements clavier pour le zoom et le déplacement de la\r\n     * grille.\r\n     *\r\n     * Lorsque les touches Ctrl++ ou Ctrl+- sont enfoncées, la fonction appelle la méthode\r\n     * `updateZoom` avec la valeur de zoom correspondante.\r\n     *\r\n     * Lorsque les touches fléchées sont enfoncées, la fonction appelle la méthode `updateArrows`\r\n     * avec la direction correspondante.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeKeyboard() {\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && ['+', '-'].includes(event.key)) {\r\n                event.preventDefault();\r\n                this.updateZoom(event.key === '+' ? 'In' : 'Out')\r\n            }\r\n\r\n            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n                event.preventDefault();\r\n                this.updateArrows(event.key.slice(5));\r\n            }\r\n        });\r\n    }\r\n\r\n    /******************************************\r\n     * INITIALISATION DOCUMENTATION\r\n     ******************************************/\r\n\r\n    /**\r\n     * Initialise le bouton de basculement entre la fenêtre du jeu et la fenêtre de documentation.\r\n     *\r\n     * Lorsque le bouton est cliqué, la fonction bascule les classes CSS des fenêtres pour les\r\n     * afficher ou les masquer, et met à jour l'icône du bouton en fonction de l'état actuel.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    initializeDocButton() {\r\n        HTML.toggleDocButton.addEventListener('click', function () {\r\n            if (HTML.gameWindow.classList.contains('desactivate')) {\r\n                HTML.gameWindow.classList.remove('desactivate');\r\n                HTML.docWindow.classList.add('desactivate')\r\n                HTML.toggleDocIcon.className = 'bi bi-question-circle-fill';\r\n            } else {\r\n                HTML.gameWindow.classList.add('desactivate');\r\n                HTML.docWindow.classList.remove('desactivate')\r\n                HTML.toggleDocIcon.className = 'bi bi-controller';\r\n            }\r\n        });\r\n    }\r\n}","import {$, $All} from './utils.js';\r\n\r\n\r\nexport class HTML {\r\n\r\n    // Simulation\r\n    static simulationPrincipalButton = $('#simulationPrincipalButton');\r\n\r\n    // Configure modal\r\n    static hasardConfigureCheckbox = $('#hasardConfigureCheckbox');\r\n    static rowsConfigureInput = $('#rowsConfigureInput');\r\n    static columnsConfigureInput = $('#columnsConfigureInput');\r\n    static cellSizeConfigureInput = $('#cellSizeConfigureInput');\r\n    static applyConfigureButton = $('#applyConfigureButton');\r\n\r\n    // Random Modal\r\n    static weightRandomInput0 = $('#weightRandomInput0');\r\n    static weightFullRandomInputs = $All('#weightRandomInputs .weight');\r\n    static applyRandombutton = $('#applyRandombutton');\r\n    static weightRandomSpan0 = $('#weightRandomSpan0');\r\n    static weightRandomSpans = [\r\n        $('#weightRandomSpan1'),\r\n        $('#weightRandomSpan2'),\r\n        $('#weightRandomSpan3'),\r\n        $('#weightRandomSpan4')\r\n    ];\r\n\r\n    // Save Modal\r\n    static savePrincipalButton = $('#savePrincipalButton');\r\n    static nameSaveInput = $('#nameSaveInput');\r\n    static applySaveButton = $('#applySaveButton');\r\n\r\n    // Load Modal\r\n    static loadPrincipalButton = $('#loadPrincipalButton');\r\n    static configLoadSelect = $('#configLoadSelect');\r\n    static applyLoadButton = $('#applyLoadButton');\r\n\r\n    // Grid Enter modal\r\n    static arrayGridEnterInput = $('#arrayGridEnterInput');\r\n    static applyGridEnterButton = $('#applyGridEnterButton');\r\n    static errorGridEnterP = $('#errorGridEnterP');\r\n\r\n    // Doc\r\n    static gameWindow = $('#gameWindow');\r\n    static docWindow = $('#docWindow');\r\n    static toggleDocIcon = $('#toggleDocIcon');\r\n    static toggleDocButton = $('#toggleDocButton');\r\n\r\n    // Copy\r\n    static copyPrincipalButton = $('#copyPrincipalButton');\r\n\r\n    // Step\r\n    static stepPrincipalButton = $('#stepPrincipalButton');\r\n\r\n    // Jump\r\n    static jumpPrincipalButton = $('#jumpPrincipalButton');\r\n    static jumpDiv = $('#jumpButtons');\r\n    static jumpButtons = $All('#jumpButtons button');\r\n    static jumpParent = $('#jumpParent');\r\n\r\n    // Start\r\n    static startPrincipalButton = $('#startPrincipalButton');\r\n\r\n    // Rapidity\r\n    static rapidityPrincipalButton = $('#rapidityPrincipalButton');\r\n    static rapidityDiv = $('#rapidityButtons');\r\n    static rapidityButtons = $All('#rapidityButtons button');\r\n    static rapidityParent = $('#rapidityParent');\r\n\r\n    // Trash\r\n    static trashPrincipalButton = $('#trashPrincipalButton');\r\n\r\n    // Grid\r\n    static gridPrincipalButton = $('#gridPrincipalButton');\r\n\r\n    // Border\r\n    static borderPrincipalButton = $('#borderPrincipalButton');\r\n\r\n    // Draw\r\n    static drawPrincipalButton = $('#drawPrincipalButton');\r\n\r\n    // History\r\n    static historyPrincipalButton = $('#historyPrincipalButton');\r\n\r\n    // Pattern\r\n    static patternPrincipalButton = $('#patternPrincipalButton');\r\n    static patternSelect = $('#patternSelect');\r\n    static patternPreview = $(\"#patternPreview\")\r\n    static applyPatternButton = $('#applyPatternButton');\r\n    static topPatternDiv = $('#topPatternDiv');\r\n    static bottomPatternDiv = $('#bottomPatternDiv');\r\n    static leftPatternDiv = $('#leftPatternDiv');\r\n    static rightPatternDiv = $('#rightPatternDiv');\r\n    static patternTable = $('#patternTable');\r\n    static patternDescription = $('#patternDescription');\r\n    static topPatternInput = $('#topPatternInput');\r\n    static bottomPatternInput = $('#bottomPatternInput');\r\n    static leftPatternInput = $('#leftPatternInput');\r\n    static rightPatternInput = $('#rightPatternInput');\r\n\r\n    // Color\r\n    static colorIcon = $('#colorIcon');\r\n    static wallIcon = $('#wallIcon');\r\n    static colorPrincipalButton = $('#colorPrincipalButton');\r\n    static colorDiv = $('#colorButtons');\r\n    static colorButtons = $All('#colorButtons button');\r\n    static colorParent = $('#colorParent');\r\n\r\n    // Move\r\n    static movePrincipalButton = $('#movePrincipalButton');\r\n    static moveDiv = $('#moveButtons');\r\n    static moveButtons = $All('#moveButtons button');\r\n    static moveParent = $('#moveParent');\r\n\r\n    // Zoom\r\n    static zoomPrincipalButton = $('#zoomPrincipalButton');\r\n    static zoomDiv = $('#zoomButtons');\r\n    static zoomButtons = $All('#zoomButtons button');\r\n    static zoomParent = $('#zoomParent');\r\n\r\n    // Define button\r\n    static defineRulesPrincipalButton = $(\"#defineRulesPrincipalButton\");\r\n\r\n    // Define Rules modal\r\n    static birthDefineRulesCheckboxes = $All('#birthDefineRulesCheckboxes input');\r\n    static survivalDefineRulesCheckboxes = $All('#survivalDefineRulesCheckboxes input');\r\n    static applyDefineRulesButton = $('#applyDefineRulesButton');\r\n\r\n    // Predefine button\r\n    static predefineRulesPrincipalButton = $(\"#predefineRulesPrincipalButton\");\r\n\r\n    // Predefine modal\r\n    static predefineRulesSelect = $('#predefineRulesSelect');\r\n    static applyPredefineRulesButton = $('#applyPredefineRulesButton');\r\n    static cancelPredefineRulesButton = $('#cancelPredefineRulesButton');\r\n\r\n    // Canvas\r\n    static canvasContainer = $('#gameLife');\r\n    static canvas = $('#gameCanvas');\r\n\r\n    // Barre\r\n    static generation = $('#generation');\r\n    static livingCells = $('#livingCells');\r\n    static totalCells = $('#totalCells');\r\n}","import { HTML } from \"./HTML\";\r\nimport patternsData from './patterns.json';\r\n\r\n\r\nexport class PatternManager {\r\n    constructor(eventHandler) {\r\n        this.eventHandler = eventHandler;\r\n        this.patterns = patternsData.patterns;\r\n        this.config = {\r\n            \"T\": 5, \"B\": 5, \"L\": 5, \"R\": 5\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.loadPatterns();\r\n        this.setupEventListeners();\r\n    }\r\n\r\n    loadPatterns() {\r\n        this.populateSelect();\r\n    }\r\n\r\n    populateSelect() {\r\n        HTML.patternSelect.innerHTML = '<option selected>Choisir</option>';\r\n        this.patterns.forEach((pattern, index) => {\r\n            const option = document.createElement('option');\r\n            option.value = index;\r\n            console.log(pattern.name)\r\n            option.textContent = pattern.name;\r\n            HTML.patternSelect.appendChild(option);\r\n        });\r\n    }\r\n\r\n    setupEventListeners() {\r\n        HTML.patternSelect.addEventListener('change', (event) => this.handleSelectChange(event));\r\n        HTML.applyPatternButton.addEventListener('click', () => this.handleApplyPattern());\r\n\r\n        HTML.topPatternInput.addEventListener('change', (event) => {\r\n            this.addBorder(event.target);\r\n        });\r\n\r\n        HTML.bottomPatternInput.addEventListener('change', (event) => {\r\n            this.addBorder(event.target);\r\n        });\r\n\r\n        HTML.leftPatternInput.addEventListener('change', (event) => {\r\n            this.addBorder(event.target);\r\n        });\r\n\r\n        HTML.rightPatternInput.addEventListener('change', (event) => {\r\n            this.addBorder(event.target);\r\n        });\r\n    }\r\n\r\n\r\n    addBorder(target) {\r\n        this.config = {\r\n            \"T\": HTML.topPatternInput.value,\r\n            \"B\": HTML.bottomPatternInput.value,\r\n            \"L\": HTML.leftPatternInput.value,\r\n            \"R\": HTML.rightPatternInput.value\r\n        }\r\n\r\n        const selectedIndex = HTML.patternSelect.selectedIndex - 1;\r\n        if (selectedIndex < 0) return;\r\n\r\n        const selectedPattern = this.patterns[selectedIndex];\r\n        const seletedGrid = selectedPattern.grid\r\n        console.log(target.dataset.direction);\r\n\r\n        // Récupérez les dimensions de la grille\r\n        const gridRows = seletedGrid.length;\r\n        const gridCols = seletedGrid[0].length;\r\n\r\n        // Créez une nouvelle grille avec les lignes et colonnes supplémentaires\r\n        let newGrid = [];\r\n\r\n        // Ajoutez les lignes du haut\r\n        for (let i = 0; i < this.config.T; i++) {\r\n            const row = new Array(gridCols).fill(0);\r\n            newGrid.push(row);\r\n        }\r\n\r\n        newGrid = [...newGrid, ...seletedGrid]\r\n\r\n        for (let i = 0; i < this.config.B; i++) {\r\n            const row = new Array(gridCols).fill(0);\r\n            newGrid.push(row);\r\n        }\r\n\r\n        console.log(newGrid)\r\n\r\n        HTML.patternTable.innerHTML = '';\r\n        HTML.patternTable.style.width = `${100 * 0.6}%`;\r\n\r\n        const columns = newGrid[0].length;\r\n        const previewWidth = HTML.patternPreview.offsetWidth;\r\n        const cellSize = previewWidth / columns;\r\n\r\n        newGrid.forEach(row => {\r\n            const tr = document.createElement('tr');\r\n            tr.style.height = `${cellSize * 0.6}px`;\r\n            row.forEach(cell => {\r\n                const td = document.createElement('td');\r\n                td.style.width = `${cellSize}px`;\r\n                if (cell === 1) {\r\n                    td.style.backgroundColor = \"hsl(200, 100%, 50%)\";\r\n                }\r\n                tr.appendChild(td);\r\n            });\r\n            HTML.patternTable.appendChild(tr);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    handleSelectChange(event) {\r\n        this.config = {\r\n            \"T\": 5, \"B\": 5, \"L\": 5, \"R\": 5\r\n        }\r\n        const selectedPattern = this.patterns[event.target.value];\r\n        if (selectedPattern) {\r\n            this.displayPattern1(selectedPattern);\r\n        }\r\n    }\r\n\r\n\r\n    displayPattern(pattern) {\r\n        HTML.patternPreview.innerHTML = '';\r\n        const pDescription = document.createElement('p');\r\n        pDescription.textContent = pattern.description;\r\n\r\n        const table = document.createElement('table');\r\n        table.id = 'patternPreviewTable';\r\n        table.style.width = `${100 * 0.6}%`;\r\n        const columns = pattern.grid[0].length;\r\n        const previewWidth = HTML.patternPreview.offsetWidth;\r\n\r\n        const cellSize = previewWidth / columns;\r\n\r\n        pattern.grid.forEach(row => {\r\n            const tr = document.createElement('tr');\r\n            tr.style.height = `${cellSize * 0.6}px`;\r\n            row.forEach(cell => {\r\n                const td = document.createElement('td');\r\n                td.style.width = `${cellSize}px`;\r\n                if (cell === 1) {\r\n                    td.style.backgroundColor = \"hsl(200, 100%, 50%)\"\r\n                }\r\n                tr.appendChild(td);\r\n            });\r\n            table.appendChild(tr);\r\n        });\r\n\r\n        HTML.patternPreview.appendChild(pDescription);\r\n        HTML.patternPreview.appendChild(table);\r\n    }\r\n\r\n    cloneGrid(gridData) {\r\n        return gridData.map(row => row.slice());\r\n    }\r\n\r\n    displayPattern1(pattern) {\r\n        HTML.patternTable.innerHTML = '';\r\n        HTML.patternTable.style.width = `${100 * 0.6}%`;\r\n\r\n        const columns = pattern.grid[0].length;\r\n        const previewWidth = HTML.patternPreview.offsetWidth;\r\n        const cellSize = previewWidth / columns;\r\n        const grid = pattern.grid;\r\n\r\n        pattern.grid.forEach(row => {\r\n            const tr = document.createElement('tr');\r\n            tr.style.height = `${cellSize * 0.6}px`;\r\n            row.forEach(cell => {\r\n                const td = document.createElement('td');\r\n                td.style.width = `${cellSize}px`;\r\n                if (cell === 1) {\r\n                    td.style.backgroundColor = \"hsl(200, 100%, 50%)\";\r\n                }\r\n                tr.appendChild(td);\r\n            });\r\n            HTML.patternTable.appendChild(tr);\r\n        });\r\n    }\r\n\r\n    apply() {\r\n        // const newGrid = addBorder(pattern.grid, borderConfig);\r\n\r\n        // const borderConfig = {\r\n        //     top: 3,\r\n        //     right: 3,\r\n        //     bottom: 3,\r\n        //     left: 3\r\n        //   };\r\n\r\n        // function addBorder(grid, borderConfig) {\r\n        //   const { top, right, bottom, left } = borderConfig;\r\n        //   const columns = grid[0].length;\r\n        //   const rows = grid.length;\r\n\r\n        //   const maxDimension = Math.max(columns + left + right, rows + top + bottom);\r\n        //   const newColumns = maxDimension;\r\n        //   const newRows = maxDimension;\r\n\r\n        //   const topOffset = Math.floor((newRows - rows) / 2);\r\n        //   const leftOffset = Math.floor((newColumns - columns) / 2);\r\n\r\n        //   const newGrid = Array.from({ length: newRows }, (_, y) =>\r\n        //     Array.from({ length: newColumns }, (_, x) => {\r\n        //       if (y < topOffset || y >= topOffset + rows || x < leftOffset || x >= leftOffset + columns) {\r\n        //         return 0;\r\n        //       } else {\r\n        //         return grid[y - topOffset][x - leftOffset];\r\n        //       }\r\n        //     })\r\n        //   );\r\n\r\n        //   return newGrid;\r\n        // }\r\n    }\r\n\r\n\r\n    handleApplyPattern() {\r\n        const selectedPattern = this.patterns[HTML.patternSelect.value];\r\n        if (selectedPattern) {\r\n            this.applyPatternToGame(selectedPattern);\r\n        }\r\n    }\r\n\r\n    applyPatternToGame(pattern) {\r\n        this.eventHandler.updateStartButton(true);\r\n        this.eventHandler.getApp().cleanGrid();\r\n        this.eventHandler.getApp().formatGrid(pattern.grid.length, pattern.grid[0].length, this.eventHandler.getApp().getCellSize());\r\n        this.eventHandler.getApp().getBoard().initializeGrids(pattern.grid);\r\n        this.eventHandler.getApp().getBoardCanvas().setDimensionsCanvas();\r\n        this.eventHandler.getApp().getBoardCanvas().drawGrid();\r\n    }\r\n}\r\n\r\n","import { EventHandler } from './EventHandler.js';\r\nimport { Board } from './Board.js';\r\nimport { BoardCanvas } from './BoardCanvas.js';\r\nimport { HTML } from './HTML.js';\r\n\r\nimport { $ } from './utils.js';\r\nimport { Config } from './Config.js';\r\n\r\nclass Window {\r\n\r\n    #board;\r\n    #boardCanvas;\r\n    #rowCanvas;\r\n    #columnCanvas;\r\n    #cellSize;\r\n    #valueAdd;\r\n    #birth;\r\n    #survival;\r\n    #randomize;\r\n    #weights;\r\n    #border;\r\n    #history;\r\n    #lines;\r\n    #saves;\r\n    #rapidity;\r\n    #step;\r\n    #isPlaying;\r\n    #enableDraw;\r\n    #isDrawing;\r\n\r\n\r\n    getBoard() {\r\n        return this.#board;\r\n    }\r\n\r\n    setBoard(value) {\r\n        this.#board = value;\r\n    }\r\n\r\n    getBoardCanvas() {\r\n        return this.#boardCanvas;\r\n    }\r\n\r\n    setBoardCanvas(value) {\r\n        this.#boardCanvas = value;\r\n    }\r\n\r\n    getRowCanvas() {\r\n        return this.#rowCanvas;\r\n    }\r\n\r\n    setRowCanvas(value) {\r\n        this.#rowCanvas = value;\r\n    }\r\n\r\n    getColumnCanvas() {\r\n        return this.#columnCanvas;\r\n    }\r\n\r\n    setColumnCanvas(value) {\r\n        this.#columnCanvas = value;\r\n    }\r\n\r\n    getCellSize() {\r\n        return this.#cellSize;\r\n    }\r\n\r\n    setCellSize(value) {\r\n        this.#cellSize = value;\r\n    }\r\n\r\n    getValueAdd() {\r\n        return this.#valueAdd;\r\n    }\r\n\r\n    setValueAdd(value) {\r\n        this.#valueAdd = value;\r\n    }\r\n\r\n    getBirth() {\r\n        return this.#birth;\r\n    }\r\n\r\n    setBirth(value) {\r\n        this.#birth = value;\r\n    }\r\n\r\n    getSurvival() {\r\n        return this.#survival;\r\n    }\r\n\r\n    setSurvival(value) {\r\n        this.#survival = value;\r\n    }\r\n\r\n    getRandomize() {\r\n        return this.#randomize;\r\n    }\r\n\r\n    setRandomize(value) {\r\n        this.#randomize = value;\r\n    }\r\n\r\n    getWeights() {\r\n        return this.#weights;\r\n    }\r\n\r\n    setWeights(value) {\r\n        this.#weights = value;\r\n    }\r\n\r\n    getBorder() {\r\n        return this.#border;\r\n    }\r\n\r\n    setBorder(value) {\r\n        this.#border = value;\r\n    }\r\n\r\n    getHistory() {\r\n        return this.#history;\r\n    }\r\n\r\n    setHistory(value) {\r\n        this.#history = value;\r\n    }\r\n\r\n    getLines() {\r\n        return this.#lines;\r\n    }\r\n\r\n    setLines(value) {\r\n        this.#lines = value;\r\n    }\r\n\r\n    getSaves() {\r\n        return this.#saves;\r\n    }\r\n\r\n    setSaves(key, value) {\r\n        this.#saves[key] = value;\r\n    }\r\n\r\n    getRapidity() {\r\n        return this.#rapidity;\r\n    }\r\n\r\n    setRapidity(value) {\r\n        this.#rapidity = value;\r\n    }\r\n\r\n    getStep() {\r\n        return this.#step;\r\n    }\r\n\r\n    setStep(value) {\r\n        this.#step = value;\r\n    }\r\n\r\n    getIsPlaying() {\r\n        return this.#isPlaying;\r\n    }\r\n\r\n    setIsPlaying(value) {\r\n        this.#isPlaying = value;\r\n    }\r\n\r\n    getEnableDraw() {\r\n        return this.#enableDraw;\r\n    }\r\n\r\n    setEnableDraw(value) {\r\n        this.#enableDraw = value;\r\n    }\r\n\r\n    getIsDrawing() {\r\n        return this.#isDrawing;\r\n    }\r\n\r\n    setIsDrawing(value) {\r\n        this.#isDrawing = value;\r\n    }\r\n\r\n\r\n    constructor() {\r\n        this.#board = undefined;\r\n        this.#boardCanvas = undefined;\r\n        this.#rowCanvas = 20;                 // Le nombre de lignes par défaut pour un canvas\r\n        this.#columnCanvas = 20;              // Le nombre de colonnes par défault pour un canvas\r\n        this.#cellSize = 12;                  // La taille de cellule par défaut\r\n        this.#valueAdd = 1;                   // La cellule d'ajout par défaut est la 1\r\n        this.#birth = new Set([2, 3]); // Le nombre de cellules requises pour naitre\r\n        this.#survival = new Set([3]); // Le nombre de cellules reqyuse\r\n        this.#randomize = false;              // La création randomisée n'est pas activée.\r\n        this.#weights = [.9, .1, 0, 0, 0];    // Les poids par défaut dans la création randomisée\r\n        this.#border = false;                 // Les bordures du canvas ne sont pas activées.\r\n        this.#history = false;                // L'historique n'est pas activé\r\n        this.#lines = false;                  // Les lignes ne sont pas activées.\r\n        this.#saves = {};                     // Ensemble des sauvegardes\r\n        this.#rapidity = 5;                      // Rapidité d'animation\r\n        this.#step = 1;                       // Nombre de génération entre pas\r\n        this.#isPlaying = false;              // L'animation n'est pas activée\r\n        this.#enableDraw = false;             // Le dessin n'est pas activé\r\n        this.#isDrawing = false;              // ON n'est pas en train de dessiner\r\n\r\n        this.initialize();\r\n    }\r\n\r\n    verifyInputRules() {\r\n        for (let i = 0; i < 9; i++) {\r\n            const birthCheckbox = $(`#birthRule${i}`);\r\n            birthCheckbox.checked = this.getBirth().has(parseInt(birthCheckbox.value));\r\n\r\n            const survivalCheckbox = $(`#survivalRule${i}`);\r\n            survivalCheckbox.checked = this.getSurvival().has(parseInt(survivalCheckbox.value));\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.verifyInputRules();\r\n        new EventHandler(this);\r\n        this.setBoard(new Board(this));\r\n        this.resetCanvas();\r\n        this.setBoardCanvas(new BoardCanvas(this));\r\n        this.getBoard().initPlaneur();\r\n        this.getBoardCanvas().drawGrid();\r\n        this.toggleDrawingEvents();\r\n    }\r\n\r\n    resetCanvas() {\r\n        // Supprimer de l'ancien canvas\r\n        const existingCanvases = $('canvas');\r\n        const parentCanvas = existingCanvases.parentNode;\r\n        parentCanvas.removeChild(existingCanvases);\r\n\r\n        // Créer un nouveau canvas\r\n        let canvas = document.createElement('canvas');\r\n        parentCanvas.appendChild(canvas);\r\n    }\r\n\r\n    /**\r\n     * Formate la grille en fonction du nombre de lignes, de colonnes et de la taille des cellules.\r\n     *\r\n     * @param {number} row - Le nombre de lignes de la grille.\r\n     * @param {number} col - Le nombre de colonnes de la grille.\r\n     * @param {number} cellSize - La taille initiale des cellules.\r\n     * @returns {void}\r\n     */\r\n    formatGrid(row, col, cellSize) {\r\n        const canvasSize = HTML.canvasContainer.offsetWidth - 20\r\n\r\n        // Mise à jour de la taille des cellules en fonction de la largeur.   \r\n        const currentMaxCellSize = Math.min(parseInt(canvasSize / col), Config.MAX_CELL_SIZE, cellSize);\r\n\r\n        this.setRowCanvas(row);\r\n        this.setColumnCanvas(col);\r\n        this.setCellSize(currentMaxCellSize);\r\n    }\r\n\r\n    cleanGrid() {\r\n        this.clearGrid();\r\n        this.stopAnimation();\r\n        this.updateBottomNav(true);\r\n    }\r\n\r\n    calculateNextGeneration(isAnimating = false) {\r\n        const numberGeneration = isAnimating ? 1 : this.getStep();\r\n        for (let i = 0; i < numberGeneration; i++) {\r\n            this.getBoard().getNextGeneration();\r\n            this.getBoard().updateHistoryGrid();\r\n            this.getBoard().countAliveCells();\r\n            this.updateBottomNav();\r\n        }\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    updateBottomNav(reset = false) {\r\n        HTML.generation.textContent = reset ? \"0\" : this.getBoard().getGeneration();\r\n        HTML.livingCells.textContent = reset ? \"0\" : this.getBoard().getIsAlive();\r\n        HTML.totalCells.textContent = reset ? \"0\" : this.getBoard().getTotalAlive();\r\n        if (reset) {\r\n            this.getBoard().setGeneration(0);\r\n            this.getBoard().setIsAlive(0);\r\n            this.getBoard().setTotalAlive(0);\r\n        }\r\n    }\r\n\r\n    setCellSizeZoomIn() {\r\n        let zoom = this.getCellSize() + 1;\r\n        if (zoom > Config.MAX_CELL_SIZE) zoom = Config.MAX_CELL_SIZE;\r\n\r\n        const canvasSize = HTML.canvasContainer.offsetWidth - 20\r\n\r\n        // Mise à jour de la taille des cellules en fonction de la largeur.   \r\n        const currentMaxCellSize = Math.min(\r\n            Math.floor(canvasSize / this.getColumnCanvas()),\r\n            zoom)\r\n        this.setCellSize(currentMaxCellSize);\r\n        this.getBoardCanvas().setupCanvas();\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    setCellSizeZoomOut() {\r\n        let zoom = this.getCellSize() - 1;\r\n        if (zoom < Config.MIN_CELL_SIZE) zoom = Config.MIN_CELL_SIZE;\r\n        this.setCellSize(zoom);\r\n        this.getBoardCanvas().setupCanvas();\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n\r\n    toggleAnimation() {\r\n        this.setIsPlaying(!this.getIsPlaying());\r\n        if (this.getIsPlaying()) this.startAnimation(this.getRapidity());\r\n        else this.stopAnimation();\r\n    }\r\n\r\n    startAnimation() {\r\n        this.intervalId = setInterval(() => {\r\n            this.calculateNextGeneration(true);\r\n        }, 1000 / this.getRapidity());\r\n    }\r\n\r\n    stopAnimation() {\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n    }\r\n\r\n    toggleDrawingEvents() {\r\n        if (this.getEnableDraw()) this.addDrawingEvent();\r\n        else this.removeDrawingEvent();\r\n    }\r\n\r\n    addDrawingEvent() {\r\n        this.getBoardCanvas().getCanvas().addEventListener('mousedown', this.startDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().addEventListener('mouseup', this.stopDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().addEventListener('mousemove', this.drawIfDrawing.bind(this));\r\n    }\r\n\r\n    removeDrawingEvent() {\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mousedown', this.startDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mouseup', this.stopDrawing.bind(this));\r\n        this.getBoardCanvas().getCanvas().removeEventListener('mousemove', this.drawIfDrawing.bind(this));\r\n    }\r\n\r\n    startDrawing(event) {\r\n        if (this.getEnableDraw()) {\r\n            this.setIsDrawing(true);\r\n            this.draw(event);\r\n        }\r\n    }\r\n\r\n    stopDrawing() {\r\n        this.setIsDrawing(false);\r\n    }\r\n\r\n    drawIfDrawing(event) {\r\n        if (this.getIsDrawing()) this.draw(event);\r\n    }\r\n\r\n    draw(event) {\r\n        const i = Math.floor(event.offsetX / this.getCellSize());\r\n        const j = Math.floor(event.offsetY / this.getCellSize());\r\n        if (\r\n            j >= 0 &&\r\n            j < this.getBoard().getGridEnableDraw().length &&\r\n            i >= 0 &&\r\n            i < this.getBoard().getGridEnableDraw()[j].length\r\n        ) {\r\n            this.writeInGrid(j, i);\r\n            this.getBoardCanvas().drawGrid();\r\n        }\r\n    }\r\n\r\n    writeInGrid(j, i) {\r\n        const currentValue = this.getBoard().getGridValue(j, i);\r\n        let newValue;\r\n\r\n        if (currentValue === this.getValueAdd()) newValue = 0;\r\n        else newValue = this.getValueAdd();\r\n\r\n        this.getBoard().setGridValue(j, i, newValue);\r\n        if (newValue === 0) this.getBoard().setGridHistoryValue(j, i, 0);\r\n    }\r\n\r\n    clearGrid() {\r\n        for (let j = 0; j < this.getRowCanvas(); j++) {\r\n            for (let i = 0; i < this.getColumnCanvas(); i++) {\r\n                this.getBoard().setGridValue(j, i, 0);\r\n                this.getBoard().setGridHistoryValue(j, i, 0);\r\n            }\r\n        }\r\n        this.getBoardCanvas().drawGrid();\r\n    }\r\n}\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    new Window();\r\n\r\n});\r\n\r\n","export function $(selector) {\r\n    return document.querySelector(selector);\r\n}\r\n\r\nexport function $All(selector) {\r\n    return document.querySelectorAll(selector);\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["Config","_app","WeakMap","_isAlive","_generation","_totalAlive","_grid","_gridHistory","_gridNumberNeighbors","_gridTypeNeighbors","_gridEnableDraw","Board","app","_classCallCheck","_classPrivateFieldInitSpec","_classPrivateFieldSet","createGrid","_createClass","key","value","getApp","_classPrivateFieldGet","getIsAlive","setIsAlive","getGeneration","setGeneration","getTotalAlive","setTotalAlive","getGrid","setGrid","getGridValue","y","x","setGridValue","getGridHistory","setGridHistory","getGridHistoryValue","setGridHistoryValue","getGridNumberNeighbors","setGridNumberNeighbors","getGridNumberNeighborsValue","setGridNumberNeighborsValue","getGridTypeNeighbors","setGridTypeNeighbors","getGridTypeNeighborsValue","setGridTypeNeighborsValue","getGridEnableDraw","setGridEnableDraw","getGridEnableDrawValue","setGridEnableDrawValue","initializeGrids","grid","Array","from","length","fill","DEAD","initPlaneur","_this","plane1","plane2","forEach","coord","getRandomCellState","random","Math","cumulativeProbability","i","getWeights","createGridRandom","_this2","getRowCanvas","getColumnCanvas","_this3","applyPattern","pattern","startY","startX","_this4","state","arguments","undefined","ALIVE1","_ref","_ref2","_slicedToArray","dy","dx","getNextGeneration","calculateNeighbors","nextGrid","createNextGrid","updateHistoryGrid","j","aliveValuesSet","has","isWithinGridBounds","applyBoundaryRules","row","col","_this$countNeighbors","countNeighbors","_this$countNeighbors2","numberNeighbors","typeNeighbors","countAliveCells","isAlive","_this5","neighborsAccount","neighborsTotal","MIDDLES","direction","getBorder","_this5$applyBoundaryR","_this5$applyBoundaryR2","currentValue","round","nextRow","nextCellValue","determineNextCellValue","push","getBirth","getSurvival","WALL","moveUp","slice","moveDown","concat","moveLeft","moveRight","_canvas","_ctx","BoardCanvas","document","querySelector","getContext","setupCanvas","getCanvas","getCtx","setDimensionsCanvas","width","getCellSize","height","fillStyle","canvasBgColor","fillRect","clearCanvas","clearRect","drawGrid","currentValueCell","getBoard","cellSize","notDeadValueSet","getColorFromIndex","getLines","drawLines","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","color","getHistory","_defineProperty","name","Set","$","HTML","PatternManager","EventHandler","initialize","updateStartButton","forceStop","playIcon","pauseIcon","isPlaying","style","display","startPrincipalButton","title","toggleAnimation","updateWeights","changedInput","total","weightFullRandomInputs","reduce","acc","input","parseFloat","totalZero","toFixed","weightRandomSpan0","textContent","weightRandomInput0","decreaseAmount","max","validateGrid","rowLength","_iterator","_createForOfIteratorHelper","_step","s","n","done","test","err","e","f","displayDivButtons","div","principalButton","parent","moveHideTimeout","toggleDiv","show","toggleVisibilityWithDelay","addEventListener","event","contains","relatedTarget","updateDrawButton","drawPrincipalButton","classList","toggle","setEnableDraw","getEnableDraw","toggleDrawingEvents","element","delay","timeoutId","clearTimeout","setTimeout","initializeSimulationIcon","initializeSaveButton","initializeLoadModal","initiatilizeEnterButton","initializeCopyIcon","initializePatternIcon","initializeStepIcon","initializeJumpIcon","initializeStartIcon","initializeRapidityIcon","initializeColorIcon","initializeDrawIcon","initializeTrashIcon","initializeGridIcon","initializeBordureIcon","initializeHistoryIcon","initializeArrowsButton","initializeZoomButton","initializeDefineRulesButton","initializePredefineRulesButton","initializeDocButton","initializeKeyboard","simulationPrincipalButton","initializeConfigurerModal","initializeWeightModal","validateInput","inputElement","minValue","maxValue","parseInt","isNaN","applyConfigureButton","rowsInput","rowsConfigureInput","MIN_COL","MAX_COL","columnsInput","columnsConfigureInput","cellSizeInput","cellSizeConfigureInput","MIN_CELL_SIZE","MAX_CELL_SIZE","cleanGrid","formatGrid","getBoardCanvas","displayWeights","index","weightRandomSpans","applyRandombutton","weights","weight","setWeights","map","Number","hasardConfigureCheckbox","checked","savePrincipalButton","stopAnimation","initializeSaveModal","_this6","applySaveButton","saveName","nameSaveInput","toLowerCase","trim","prompt","saveData","saveNames","JSON","parse","localStorage","getItem","saves","confirm","setItem","stringify","_this7","loadPrincipalButton","configLoadSelect","innerHTML","option","createElement","appendChild","applyLoadButton","selectedSave","savedGrid","initializeEnterModal","_this8","isValidatedGrid","arrayGridEnterInput","split","add","remove","errorGridEnterP","applyGridEnterButton","disabled","_this9","copyPrincipalButton","gridValue","join","textArea","position","opacity","left","top","body","select","setSelectionRange","navigator","clipboard","writeText","then","alert","removeChild","patternManager","init","_this10","stepPrincipalButton","calculateNextGeneration","_this11","jumpDiv","jumpPrincipalButton","jumpParent","jumpButtons","jumpButton","button","setStep","dataset","jump","_this12","_this13","rapidityDiv","rapidityPrincipalButton","rapidityParent","rapidityButtons","rapidityButton","setRapidity","rapidity","_this14","colorDiv","colorPrincipalButton","colorParent","colorButtons","colorButton","className","setValueAdd","isWall","colorIcon","wallIcon","_this15","_this16","trashPrincipalButton","_this17","gridPrincipalButton","setLines","_this18","borderPrincipalButton","setBorder","_this19","historyPrincipalButton","setHistory","_this20","moveDiv","movePrincipalButton","moveParent","moveButtons","moveButton","updateArrows","buttonName","charAt","toUpperCase","_this21","zoomDiv","zoomPrincipalButton","zoomParent","zoomButtons","zoomButton","updateZoom","zoom","_this22","defineRulesPrincipalButton","initializeDefineRulesModal","_this23","applyDefineRulesButton","setBirth","birthDefineRulesCheckboxes","filter","checkbox","setSurvival","survivalDefineRulesCheckboxes","_this24","predefineRulesPrincipalButton","initializePredefineRulesModal","_this25","applyPredefineRulesButton","verifyInputRules","_HTML$predefineRulesS","predefineRulesSelect","valeurs","_HTML$predefineRulesS2","births","survivals","_this26","ctrlKey","includes","preventDefault","toggleDocButton","gameWindow","docWindow","toggleDocIcon","$All","patternsData","eventHandler","patterns","config","loadPatterns","setupEventListeners","populateSelect","patternSelect","console","log","handleSelectChange","applyPatternButton","handleApplyPattern","topPatternInput","addBorder","target","bottomPatternInput","leftPatternInput","rightPatternInput","selectedIndex","selectedPattern","seletedGrid","gridRows","gridCols","newGrid","T","_toConsumableArray","B","patternTable","columns","previewWidth","patternPreview","offsetWidth","tr","cell","td","backgroundColor","displayPattern1","displayPattern","pDescription","description","table","id","cloneGrid","gridData","apply","applyPatternToGame","_board","_boardCanvas","_rowCanvas","_columnCanvas","_cellSize","_valueAdd","_birth","_survival","_randomize","_weights","_border","_history","_lines","_saves","_rapidity","_isPlaying","_enableDraw","_isDrawing","Window","setBoard","setBoardCanvas","setRowCanvas","setColumnCanvas","setCellSize","getValueAdd","getRandomize","setRandomize","getSaves","setSaves","getRapidity","getStep","getIsPlaying","setIsPlaying","getIsDrawing","setIsDrawing","birthCheckbox","survivalCheckbox","resetCanvas","existingCanvases","parentCanvas","parentNode","canvas","canvasSize","canvasContainer","currentMaxCellSize","min","clearGrid","updateBottomNav","isAnimating","numberGeneration","reset","generation","livingCells","totalCells","setCellSizeZoomIn","floor","setCellSizeZoomOut","startAnimation","intervalId","setInterval","clearInterval","addDrawingEvent","removeDrawingEvent","startDrawing","bind","stopDrawing","drawIfDrawing","removeEventListener","draw","offsetX","offsetY","writeInGrid","newValue","selector","querySelectorAll"],"sourceRoot":""}